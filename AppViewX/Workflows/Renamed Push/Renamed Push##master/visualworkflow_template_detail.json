[ {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "CertcreateOOB_1",
        "taskName" : null,
        "subflowId" : "iM5chT1L",
        "parentSubflowId" : "",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "iM5chT1L",
        "parentSubflowId" : "",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "iM5chT1L",
        "parentSubflowId" : "",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Cert create OOB",
    "subFlowID" : "wkzaUXpL",
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : null,
    "parentSubFlowID" : "iM5chT1L",
    "helpContent" : null,
    "workflowDetail" : null,
    "workflowTaskComponentDetail" : null,
    "_id" : null,
    "task_id" : "CertcreateOOB_1",
    "task_name" : "Cert create OOB",
    "task_type" : "flow",
    "task_category" : null,
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  } ],
  "subFlowID" : "iM5chT1L",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "startLoop_1" : [ ],
    "endLoop_1" : [ ],
    "AppViewXcreatecertificates_1" : [ ],
    "AppViewXcreatecertificates_2" : [ ],
    "AppViewXcreatecertificates_3" : [ ],
    "AppViewXcreatecertificates_4" : [ ],
    "AppViewXcreatecertificates_5" : [ ],
    "AppViewXcreatecertificates_6" : [ ],
    "AppViewXcreatecertificates_7" : [ ],
    "CertcreateOOB_1" : [ ],
    "CertcreateOOB_2" : [ ],
    "CertcreateOOB_3" : [ ]
  },
  "type" : null,
  "level" : 0,
  "maxDepth" : 1,
  "input" : null,
  "workflowName" : "Renamed Push",
  "description" : null,
  "flowName" : null,
  "workflowType" : "Default",
  "subFlowType" : "Default",
  "parentSubFlowID" : null,
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : { },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  } ],
  "subFlowID" : "i0i5f6Dz",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ]
  },
  "type" : null,
  "level" : 0,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Renamed Push",
  "description" : null,
  "flowName" : null,
  "workflowType" : "Rollback",
  "subFlowType" : "Default",
  "parentSubFlowID" : null,
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : { },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop flow",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  } ],
  "subFlowID" : "ogEyXYP2",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "CertcreateOOB_1" : [ ]
  },
  "type" : "cart",
  "level" : 0,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Renamed Push",
  "description" : "",
  "flowName" : "Cert create OOB",
  "workflowType" : "Default",
  "subFlowType" : "Flow",
  "parentSubFlowID" : "iM5chT1L",
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop flow",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_3",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "CSV_file_upload_or_Manual_entry" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "Failed" : [ {
        "taskId" : "createform_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "form",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "AppViewX create certificates",
    "subFlowID" : "5QWfKkZF",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "create_cert",
      "value" : "<%create_cert%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "create_cert",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "If",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "iM5chT1L",
    "helpContent" : null,
    "rule" : {
      "not" : false,
      "condition" : "AND",
      "rules" : [ {
        "operator" : "==",
        "value" : "<%create_cert%>",
        "comparedValue" : "CSV file upload"
      } ]
    },
    "_id" : null,
    "task_id" : "decision_1",
    "task_name" : "If",
    "task_type" : "decision",
    "task_category" : "decision",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "decision",
    "group_name" : "General",
    "viewable_type" : "custom",
    "rule_name" : "CSV_file_upload_or_Manual_entry"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "401" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Form",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "dynamicAuth" : null,
    "regexList" : null,
    "regexOperation" : null,
    "regexPattern" : null,
    "accessMode" : null,
    "proceedProcess" : "Submit",
    "breakdownProcess" : "Back",
    "cancelProcess" : "Cancel",
    "saveDraftProcess" : "Save Draft",
    "closeProcess" : "Exit",
    "enableSaveDraft" : false,
    "enableCancel" : true,
    "enableClose" : false,
    "enableAutoApprove" : null,
    "enableBreakDown" : false,
    "availableGlobalData" : null,
    "_id" : null,
    "task_id" : "createform_1",
    "task_name" : "CA and CSR parameters - AppViewX",
    "task_type" : "form",
    "task_category" : "form",
    "component_type" : "form",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "form",
    "group_name" : "User interface",
    "viewable_type" : "default",
    "aclIdentifiers" : null,
    "template" : {
      "name" : "CA and CSR parameters - AppViewX",
      "description" : null,
      "aclIdentifiers" : null,
      "fields" : [ {
        "labelName" : "Autotrigger",
        "elementType" : "Hidden",
        "values" : "",
        "fieldId" : "auto_trigger",
        "fieldScript" : "CA account",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : true,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate authority",
        "elementType" : "Text box",
        "values" : "<%cert_authority%>",
        "fieldId" : "cert_auth",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CA account",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "ca_account",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR generation",
        "elementType" : "Radio button",
        "values" : "AppViewX,Upload CSR",
        "fieldId" : "csr_generation",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Please paste your CSR",
        "elementType" : "Multi-line with file upload",
        "values" : "",
        "fieldId" : "upload_csr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Fetch CSR parameters",
        "elementType" : "Button",
        "values" : "",
        "fieldId" : "button",
        "fieldScript" : "Fetch CSR details",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Common name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "common_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "DNS (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "dns",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "Multiple SAN values should be separated by comma (,)",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "IP Address (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "ip_address",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "Multiple SAN values should be separated by comma (,)",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization unit",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_unit",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Locality",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "locality",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Validity (in years)",
        "elementType" : "Dropdown",
        "values" : "1,2,3,4,5",
        "fieldId" : "validity",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Challenge password",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "challenge_pass",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Confirm password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "confirm_pass",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Hash function",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "hash_function",
        "fieldScript" : "Get key-type and bit length",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Key type - Bit length",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "key_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR parameters",
        "elementType" : "Tabular",
        "values" : "",
        "fieldId" : "csr_parameters",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null,
        "showDefaultView" : false
      }, {
        "labelName" : "Common name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "cn",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "DNS (Subect alternative name)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "dns_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "IP Address (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "ip_address_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization unit",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_unit_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Locality",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "locality_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Validity (in years)",
        "elementType" : "Dropdown",
        "values" : "1,2,3,4,5",
        "fieldId" : "validity_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Hash function",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "hash_function_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Key type",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "key_type_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Bit length",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "bit_length_r",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "read_only",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR parameters",
        "elementType" : "Tabular",
        "values" : "",
        "fieldId" : "read_only",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null,
        "showDefaultView" : false
      } ],
      "fieldScripts" : [ {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Cancel request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Discard request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Submit request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "auto_trigger" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "CA account",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbApudWxsID0gTm9uZQp0cnVlID0gVHJ1ZQpmYWxzZSA9IEZhbHNlCgpsb2dnZXIgPSBsb2dnZXJfdXRpbC5nZXRfbG9nZ2VyKCdHZXQgQ2VydGlmaWNhdGUgcG9saWN5JykKCmRlZiBnZXRfY2FfYWNjb3VudCgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ1NlcnZlcic6CiAgICAgICAgY2F0ID0gJ3NlcnZlcicKICAgIGVsaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnQ2xpZW50JzoKICAgICAgICBjYXQgPSAnY2xpZW50JwogICAgZWxpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdDb2RlIFNpZ25pbmcnOgogICAgICAgIGNhdCA9ICdjb2RlU2lnbmluZycKICAgICAgICAKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhLXNldHRpbmdzLWdldGJ5Y2FuYW1lP2NlcnRpZmljYXRlQXV0aG9yaXR5PXt9JmNlcnRpZmljYXRlQ2F0ZWdvcnk9e30mY2VydGlmaWNhdGVHcm91cD17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8JWNlcnRfYXV0aG9yaXR5JT4nLCBjYXQsICc8JWFzc2lnbl9ncm91cCU+JyxnYXRld2F5X2tleSkKCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CgogICAgIyBwYXlsb2FkID0geyJwYXlsb2FkIjp7ImxvZyI6IFRydWUsInBhc3N3b3JkIjogYmFzZTY0LmI2NGVuY29kZShmaWxlX3Bhc3N3b3JkLmVuY29kZSgpKS5kZWNvZGUoKSwidXVJZCI6IGNlcnRfaWR9fQogICAgCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgICMgbG9nZ2VyLmluZm8oIj09PT09PT09PUNlcnRpZmljYXRlU2VhcmNoPT09PT09PT09PSIpCiAgICAjIEFWWDo6TE9HKCI9PT09PT09PT1DZXJ0aWZpY2F0ZVNlYXJjaD09PT09PT09PT0iKQogICAgIyBsb2dnZXIuaW5mbyhyZXNwb25zZS50ZXh0KQogICAgIyBsb2dnZXIuaW5mbyhyZXNwb25zZS5yZWFzb24pCiAgICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKQogICAgbG9nZ2VyLmluZm8oJyYmJlxuJykKICAgIGxvZ2dlci5pbmZvKHN0cihyZXNwb25zZSkpCiAgICAKICAgIGlmIG5vdCByZXNwb25zZS5nZXQoJ3Jlc3BvbnNlJyk6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyh7J2Vycm9yJzogJ05vIENBIEFjY291bnQgaGFzIGJlZW4gY29uZmlndXJlZCd9KSkKICAgIAogICAgY2FfbGlzdCA9IFtdCiAgICBmb3IgY2EgaW4gcmVzcG9uc2UuZ2V0KCdyZXNwb25zZScpOgogICAgICAgIGNhX2xpc3QuYXBwZW5kKGNhLmdldCgibmFtZSIpKQogICAgbG9nZ2VyLmluZm8oJy0tLT4nK3N0cihyZXNwb25zZSkpCiAgICBsb2dnZXIuaW5mbygnPj4+PDw8JytzdHIoY2FfbGlzdCkpCiAgICByZXR1cm4gY2FfbGlzdAoKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICAnJycKICAgIGZldGNoIHRoZSBnYXRld2F5IGtleSBmcm9tIGFwcHZpZXd4IGNvbmZpZyBmaWxlCiAgICA6cmV0dXJuOiBhcHB2aWV3eCBnYXRld2F5IGtleQogICAgJycnCiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKICAgICMgbG9nZ2VyLmluZm8oJ1BBVEgnKQogICAgIyBsb2dnZXIuaW5mbyhhYnNfcGF0aCkKICAgIHByb3BfZmlsZV9wYXRoID0gYWJzX3BhdGggKyAiLy4uL3Byb3BlcnRpZXMvYXBwdmlld3gucHJvcGVydGllcyIKICAgIHByb3BfZmlsZSA9IG9wZW4ocHJvcF9maWxlX3BhdGgpCiAgICBwcm9wX2ZpbGVfbGluZXMgPSBwcm9wX2ZpbGUucmVhZGxpbmVzKCkKICAgIGZvciBsaW5lIGluIHByb3BfZmlsZV9saW5lczoKICAgICAgICBpZiBsaW5lIGlzIG5vdCAiXG4iIGFuZCAiR0FURVdBWV9LRVkiIGluIGxpbmUgb3IgIkdBVEVXQVlfQkFTRV9VUkwiIGluIGxpbmU6CiAgICAgICAgICAgIGNvbmZfY29udGVudFtsaW5lLnNwbGl0KCI9IilbMF1dID0gbGluZS5zcGxpdCgiPSIpWzFdLnJlcGxhY2UoIlxuIiwgIiIpCiAgICByZXR1cm4gY29uZl9jb250ZW50WydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZfY29udGVudFsnR0FURVdBWV9LRVknXQogICAgcHJvcF9maWxlLmNsb3NlKCkKCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgoKICAgIGNhX2FjY291bnQgPSBnZXRfY2FfYWNjb3VudCgpCiAgICBsb2dnZXIuaW5mbyhzdHIoY2FfYWNjb3VudCkrIjw8PDw8IikKICAgIGlmIGNhX2FjY291bnQ6CiAgICAgICAgbG9nZ2VyLmluZm8oc3RyKHR5cGUoY2FfYWNjb3VudCkpKyI8PDw8PDwiKQogICAgICAgIGRhdGEgPSBbeyJjYV9hY2NvdW50Ijp2YWx9IGZvciB2YWwgaW4gY2FfYWNjb3VudF0KICAgICAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQogICAgZWxzZToKICAgICAgICBwcmludChqc29uLmR1bXBzKHsnZXJyb3InOiAnTm8gQ0EgQWNjb3VudCBoYXMgYmVlbiBjb25maWd1cmVkIHdpdGggdGhpcyBjZXJ0aWZpY2F0ZSBhdXRob3JpdHknfSkp",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get CA account",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbApudWxsID0gTm9uZQp0cnVlID0gVHJ1ZQpmYWxzZSA9IEZhbHNlCgpsb2dnZXIgPSBsb2dnZXJfdXRpbC5nZXRfbG9nZ2VyKCdHZXQgQ2VydGlmaWNhdGUgcG9saWN5JykKCmRlZiBnZXRfY2FfYWNjb3VudCgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ1NlcnZlcic6CiAgICAgICAgY2F0ID0gJ3NlcnZlcicKICAgIGVsaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnQ2xpZW50JzoKICAgICAgICBjYXQgPSAnY2xpZW50JwogICAgZWxpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdDb2RlIFNpZ25pbmcnOgogICAgICAgIGNhdCA9ICdjb2RlU2lnbmluZycKICAgICAgICAKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhLXNldHRpbmdzLWdldGJ5Y2FuYW1lP2NlcnRpZmljYXRlQXV0aG9yaXR5PXt9JmNlcnRpZmljYXRlQ2F0ZWdvcnk9e30mY2VydGlmaWNhdGVHcm91cD17fT9nd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8JWNlcnRfYXV0aG9yaXR5JT4nLCBjYXQsICc8JWFzc2lnbl9ncm91cCU+JyxnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7InNlc3Npb25JZCI6ICI8JXNlc3Npb25JZCU+IiwgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIn0KCiAgICAjIHBheWxvYWQgPSB7InBheWxvYWQiOnsibG9nIjogVHJ1ZSwicGFzc3dvcmQiOiBiYXNlNjQuYjY0ZW5jb2RlKGZpbGVfcGFzc3dvcmQuZW5jb2RlKCkpLmRlY29kZSgpLCJ1dUlkIjogY2VydF9pZH19CiAgICAKICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgIyBsb2dnZXIuaW5mbygiPT09PT09PT09Q2VydGlmaWNhdGVTZWFyY2g9PT09PT09PT09IikKICAgICMgQVZYOjpMT0coIj09PT09PT09PUNlcnRpZmljYXRlU2VhcmNoPT09PT09PT09PSIpCiAgICAjIGxvZ2dlci5pbmZvKHJlc3BvbnNlLnRleHQpCiAgICAjIGxvZ2dlci5pbmZvKHJlc3BvbnNlLnJlYXNvbikKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpCiAgICBpZiBub3QgcmVzcG9uc2UuZ2V0KCdyZXNwb25zZScpOgogICAgICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6ICdObyBDQSBBY2NvdW50IGhhcyBiZWVuIGNvbmZpZ3VyZWQnfSkpCiAgICAKICAgIGNhX2xpc3QgPSBbXQogICAgZm9yIGNhIGluIHJlc3BvbnNlLmdldCgncmVzcG9uc2UnKToKICAgICAgICBjYV9saXN0LmFwcGVuZChjYS5nZXQoIm5hbWUiKSkKICAgIGxvZ2dlci5pbmZvKCctLS0+JytzdHIocmVzcG9uc2UpKQogICAgbG9nZ2VyLmluZm8oJz4+Pjw8PCcrc3RyKGNhX2xpc3QpKQogICAgcmV0dXJuIGNhX2xpc3QKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgJycnCiAgICBmZXRjaCB0aGUgZ2F0ZXdheSBrZXkgZnJvbSBhcHB2aWV3eCBjb25maWcgZmlsZQogICAgOnJldHVybjogYXBwdmlld3ggZ2F0ZXdheSBrZXkKICAgICcnJwogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICAjIGxvZ2dlci5pbmZvKCdQQVRIJykKICAgICMgbG9nZ2VyLmluZm8oYWJzX3BhdGgpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBwcm9wX2ZpbGUgPSBvcGVuKHByb3BfZmlsZV9wYXRoKQogICAgcHJvcF9maWxlX2xpbmVzID0gcHJvcF9maWxlLnJlYWRsaW5lcygpCiAgICBmb3IgbGluZSBpbiBwcm9wX2ZpbGVfbGluZXM6CiAgICAgICAgaWYgbGluZSBpcyBub3QgIlxuIiBhbmQgIkdBVEVXQVlfS0VZIiBpbiBsaW5lIG9yICJHQVRFV0FZX0JBU0VfVVJMIiBpbiBsaW5lOgogICAgICAgICAgICBjb25mX2NvbnRlbnRbbGluZS5zcGxpdCgiPSIpWzBdXSA9IGxpbmUuc3BsaXQoIj0iKVsxXS5yZXBsYWNlKCJcbiIsICIiKQogICAgcmV0dXJuIGNvbmZfY29udGVudFsnR0FURVdBWV9CQVNFX1VSTCddLCBjb25mX2NvbnRlbnRbJ0dBVEVXQVlfS0VZJ10KICAgIHByb3BfZmlsZS5jbG9zZSgpCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKCiAgICBjYV9hY2NvdW50ID0gZ2V0X2NhX2FjY291bnQoKQogICAgbG9nZ2VyLmluZm8oc3RyKGNhX2FjY291bnQpKyI8PDw8PCIpCiAgICBpZiBjYV9hY2NvdW50OgogICAgICAgIGxvZ2dlci5pbmZvKHN0cih0eXBlKGNhX2FjY291bnQpKSsiPDw8PDw8IikKICAgICAgICBkYXRhID0gW3siY2FfYWNjb3VudCI6dmFsfSBmb3IgdmFsIGluIGNhX2FjY291bnRdCiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyhkYXRhKSkKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyh7J2Vycm9yJzogJ05vIENBIEFjY291bnQgaGFzIGJlZW4gY29uZmlndXJlZCB3aXRoIHRoaXMgY2VydGlmaWNhdGUgYXV0aG9yaXR5J30pKQ==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "hash_function" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get key-type and bit length",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbAoKbnVsbCA9IE5vbmUKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQoKbG9nZ2VyID0gbG9nZ2VyX3V0aWwuZ2V0X2xvZ2dlcignR2V0IGtleS10eXBlIGFuZCBiaXQgbGVuZ3RoJykKCmRlZiBnZXRfa2V5X2JpdF9sZW5ndGgoKToKICAgICIiIgogICAgRnVuY3Rpb24gdG8gRmV0Y2ggdGhlIGNvbmZpZ3VyZWQgY2VydGlmaWNhdGUgZ3JvdXAKICAgIAogICAgOnJldHVybjogQ2VydGlmaWNhdGUgcG9saWN5CiAgICAiIiIKICAgIGtleSA9IHN0cigpCiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICBjd2QgPSBvcy5nZXRjd2QoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJTZXJ2ZXIiOgogICAgICAgIGNhdCA9ICJzZXJ2ZXIiCiAgICBlbGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJDbGllbnQiOgogICAgICAgIGNhdCA9ICJjbGllbnQiCiAgICBlbGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJDb2RlIFNpZ25pbmciOgogICAgICAgIGNhdCA9ICJjb2RlU2lnbmluZyIKICAgICAgICAKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWdldC1wb2xpY3ktYnktZ3JvdXBuYW1lP2NlcnRpZmljYXRlR3JvdXBOYW1lPXt9JmNlcnRpZmljYXRlQ2F0ZWdvcnk9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwnPCVhc3NpZ25fZ3JvdXAlPicsY2F0ICwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CgogICAgIyBwYXlsb2FkID0geyJwYXlsb2FkIjp7ImxvZyI6IFRydWUsInBhc3N3b3JkIjogYmFzZTY0LmI2NGVuY29kZShmaWxlX3Bhc3N3b3JkLmVuY29kZSgpKS5kZWNvZGUoKSwidXVJZCI6IGNlcnRfaWR9fQogICAgCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgICMgbG9nZ2VyLmluZm8oIj09PT09PT09PUNlcnRpZmljYXRlU2VhcmNoPT09PT09PT09PSIpCiAgICAjIEFWWDo6TE9HKCI9PT09PT09PT1DZXJ0aWZpY2F0ZVNlYXJjaD09PT09PT09PT0iKQogICAgIyBsb2dnZXIuaW5mbyhyZXNwb25zZS50ZXh0KQogICAgIyBsb2dnZXIuaW5mbyhyZXNwb25zZS5yZWFzb24pCiAgICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKQogICAgbG9nZ2VyLmluZm8oJy0tLT4nK3N0cihyZXNwb25zZSkpCiAgICAKICAgIHBvbGljeV9jYV9kZXRhaWxzID0gcmVzcG9uc2UuZ2V0KCJyZXNwb25zZSIpLmdldCgnY2VydGlmaWNhdGVQb2xpY3lDYUFjY291bnREZXRhaWxzJykKICAgIGhhc2hfYWxnbyA9W10KICAgIGtleV90eXBlX2JpdF9sZW4gPSBbXQogICAgZm9yIGNhX2RldGFpbHMgaW4gcG9saWN5X2NhX2RldGFpbHM6CiAgICAgICAgaWYgY2FfZGV0YWlsc1snY2VydGlmaWNhdGVBdXRob3JpdHknXSA9PSAnPCVjZXJ0X2F1dGhvcml0eSU+JzoKICAgICAgICAgICAgaWYgbGVuKGNhX2RldGFpbHNbJ2NhU2V0dGluZ3MnXSkgIT0gMDoKICAgICAgICAgICAgICAgIGNhX3NldHRpbmdzX3ByZXNlbnQgPSBUcnVlCiAgICAgICAgICAgICAgICBoYXNoX2FsZ28uZXh0ZW5kKGNhX2RldGFpbHNbJ3NoYVR5cGUnXSkKICAgICAgICAgICAgICAgIGNlcnRpZmljYXRlS2V5UGFyYW1zID0gY2FfZGV0YWlsc1snY2VydGlmaWNhdGVLZXlQYXJhbXMnXQogICAgICAgICAgICAgICAgY2VydF9rZXlfcGFyYW1zID0gY2VydGlmaWNhdGVLZXlQYXJhbXMuaXRlbXMoKQogICAgICAgICAgICAgICAgZm9yIGtleSx2YWx1ZXMgaW4gY2VydF9rZXlfcGFyYW1zOgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICAgICAgZm9yIGJpdF9sZW4gaW4gdmFsdWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5X3R5cGVfYml0X2xlbi5hcHBlbmQoa2V5ICsgJyAtICcgKyBiaXRfbGVuKQoKICAgIHJldHVybiBjYV9zZXR0aW5nc19wcmVzZW50LCBrZXlfdHlwZV9iaXRfbGVuLCBoYXNoX2FsZ28KCgpkZWYgZmV0Y2hfZ2F0ZXdheV9rZXkoKToKICAgICcnJwogICAgZmV0Y2ggdGhlIGdhdGV3YXkga2V5IGZyb20gYXBwdmlld3ggY29uZmlnIGZpbGUKICAgIDpyZXR1cm46IGFwcHZpZXd4IGdhdGV3YXkga2V5CiAgICAnJycKICAgIGNvbmZfY29udGVudCA9IHt9CiAgICBhYnNfcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKQogICAgIyBsb2dnZXIuaW5mbygnUEFUSCcpCiAgICAjIGxvZ2dlci5pbmZvKGFic19wYXRoKQogICAgcHJvcF9maWxlX3BhdGggPSBhYnNfcGF0aCArICIvLi4vcHJvcGVydGllcy9hcHB2aWV3eC5wcm9wZXJ0aWVzIgogICAgcHJvcF9maWxlID0gb3Blbihwcm9wX2ZpbGVfcGF0aCkKICAgIHByb3BfZmlsZV9saW5lcyA9IHByb3BfZmlsZS5yZWFkbGluZXMoKQogICAgZm9yIGxpbmUgaW4gcHJvcF9maWxlX2xpbmVzOgogICAgICAgIGlmIGxpbmUgaXMgbm90ICJcbiIgYW5kICJHQVRFV0FZX0tFWSIgaW4gbGluZSBvciAiR0FURVdBWV9CQVNFX1VSTCIgaW4gbGluZToKICAgICAgICAgICAgY29uZl9jb250ZW50W2xpbmUuc3BsaXQoIj0iKVswXV0gPSBsaW5lLnNwbGl0KCI9IilbMV0ucmVwbGFjZSgiXG4iLCAiIikKICAgIHJldHVybiBjb25mX2NvbnRlbnRbJ0dBVEVXQVlfQkFTRV9VUkwnXSwgY29uZl9jb250ZW50WydHQVRFV0FZX0tFWSddCiAgICBwcm9wX2ZpbGUuY2xvc2UoKQoKCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgoKICAgIGtleV9wcmVzZW50LCBrZXlfdHlwZV9iaXRfbGVuZ3RoLGhhc2hfYWxnb3JpdGhtID0gZ2V0X2tleV9iaXRfbGVuZ3RoKCkKCiAgICBpZiBrZXlfcHJlc2VudDoKICAgICAgICBpZiBrZXlfdHlwZV9iaXRfbGVuZ3RoOgogICAgICAgICAgICBkYXRhID0gW3sia2V5X3R5cGUiOnZhbH0gZm9yIHZhbCBpbiBrZXlfdHlwZV9iaXRfbGVuZ3RoXSArIFt7Imhhc2hfZnVuY3Rpb24iOnZhbH1mb3IgdmFsIGluIGhhc2hfYWxnb3JpdGhtXQogICAgICAgICAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQogICAgZWxzZToKICAgICAgICBwcmludChqc29uLmR1bXBzKHsnZXJyb3InOiAnQ0Egc2V0dGluZ3MgYXJlIG5vdCBjb25maWd1cmVkIGZvciB0aGUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5JytzdHIoJzwlY2VydF9hdXRob3JpdHklPicpfSkpCg==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "button" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch CSR details",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQppbXBvcnQgYXBwdmlld3gKaW1wb3J0IGxvZ2dlcl91dGlsCnRydWUgPSBUcnVlCmZhbHNlID0gRmFsc2UKbnVsbCA9IE5vbmUKCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoJ0dldCBrZXktdHlwZSBhbmQgYml0IGxlbmd0aCcpCgoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfY3NyX3BhcmFtZXRlcnMoY3NyKToKICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSA9IGZldGNoX2dhdGV3YXlfa2V5KCkKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNzci11cGxvYWQ/Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5KQogICAgaGVhZGVycyA9IHsKICAgICAgICAic2Vzc2lvbklkIjogJzwlc2Vzc2lvbklkJT4nLAogICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgIkFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgfQogICAgcGF5bG9hZCA9IHsKICAgICAgICAicGF5bG9hZCIgOiB7CiAgICAgICAgICAgICJjc3JDb250ZW50IjogY3NyLAogICAgICAgICAgICAiY2VydGlmaWNhdGVBdXRob3JpdHkiOiAiIiwKICAgICAgICAgICAgImNhdGVnb3J5IjogIiIsCiAgICAgICAgICAgICJjb21tb25OYW1lIjogIiIKICAgICAgICB9CiAgICB9CiAgICBsb2dnZXIuaW5mbyhzdHIocGF5bG9hZCkpCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWpzb24uZHVtcHMocGF5bG9hZCksIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgbG9nZ2VyLmluZm8oJ1hYWFhYJytzdHIocmVzcG9uc2UpKQogICAgZGF0YSA9IHt9CiAgICBkYXRhWydjbiddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnY29tbW9uTmFtZScpIG9yICIiCiAgICBkYXRhWydvcmdfciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnb3JnYW5pemF0aW9uJykgb3IgIiIKICAgIGRhdGFbJ29yZ191bml0X3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ29yZ2FuaXphdGlvblVuaXQnKSBvciAiIgogICAgZGF0YVsnbG9jYWxpdHlfciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnbG9jYWxpdHknKSBvciAiIgogICAgZGF0YVsnY291bnRyeV9yJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdjb3VudHJ5Jykgb3IgIiIKICAgIGRhdGFbJ3N0YXRlX3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ3N0YXRlJykgb3IgIiIKICAgIGRhdGFbJ2tleV90eXBlX3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2tleVR5cGUnKSBvciAiIgogICAgZGF0YVsnaGFzaF9mdW5jdGlvbl9yJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdoYXNoRnVuY3Rpb24nKSBvciAiIgogICAgZGF0YVsnYml0X2xlbmd0aF9yJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdiaXRMZW5ndGgnKSBvciAiIgogICAgZGF0YVsnZG5zX3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2VuaGFuY2VkU0FOVHlwZXMnKS5nZXQoJ2ROU05hbWVzJykgaWYgcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpIGVsc2UgIiIKICAgIGRhdGFbJ2lwX2FkZHJlc3NfciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpLmdldCgnaVBBZGRyZXNzZXMnKSBpZiByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdlbmhhbmNlZFNBTlR5cGVzJykgZWxzZSAiIgogICAgZGF0YVsnZW1haWxfciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnbWFpbEFkZHJlc3MnKSBvciAiIgogICAgcmV0dXJuIGRhdGEKCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGNzciA9IHInJyc8dXBsb2FkX2Nzcj4nJycKICAgIGNzciA9IGNzci5yZXBsYWNlKCJcXG4iLCJcbiIpCiAgICBjc3JfcGFyYW1ldGVycyA9IGdldF9jc3JfcGFyYW1ldGVycyhjc3IpCiAgICBwcmludChqc29uLmR1bXBzKFtjc3JfcGFyYW1ldGVyc10pKQo=",
        "_id" : null,
        "_keywords" : null
      } ],
      "accessType" : null,
      "parentTemplate" : null,
      "hiddenTemplate" : false,
      "groupData" : {
        "treeData" : [ ],
        "listData" : [ ]
      },
      "workflow_template_name" : null,
      "_keywords" : null
    },
    "configuration" : {
      "aclIdentifiers" : [ "super access" ],
      "permission" : [ "super access:submit" ],
      "skipFlow" : false,
      "emailConfiguration" : {
        "emailNotificationEnabled" : false,
        "createdNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "reviewedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "submittedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "rejectedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        }
      },
      "multipleScenarioEnabled" : false,
      "maxScenarioCount" : 1,
      "enableSaveDraft" : true,
      "enableCancel" : true,
      "enableClose" : false,
      "enableBreakDown" : false,
      "labels" : {
        "submit" : "Submit",
        "reject" : "Back"
      },
      "enableAutoApprove" : false,
      "failoverState" : 2,
      "successState" : 1,
      "dynamicAuth" : null,
      "regexList" : null,
      "regexOperation" : null,
      "regexPattern" : null,
      "accessMode" : null
    },
    "data" : null,
    "api_list" : null
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "AppViewX create certificates",
    "subFlowID" : "5QWfKkZF",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "upload_csv",
      "value" : "<%upload_csv%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upload_csv",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "iM5chT1L",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_1",
    "task_name" : "Processing CSV data",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import json\nimport sys\nimport gridfs\nfrom bson import ObjectId\nimport csv\nimport requests\n\nsys.path.append(AVX::DEPENDENCIES)\nsys.path.append(AVX::HELPER)\n\nimport appviewx\nimport logger_util\nlogger = logger_util.get_logger('Cert Expiry Report')\n\nconn = appviewx.db_connection()\ndb = conn.appviewx\n\ndef write_file_to_appviewx(request_id, field_id, task_id, file_name):\n   \"\"\"\n   Method to write the given file to /var/tmp in AppViewX\n   :param db: Database connection object to AppViewX\n   :param request_id: RequestID of the uploaded file\n   :param field_id: FieldID of the uploaded file\n   :param task_id: TaskID of the uploaded file\n   :param file_name: Name of the uploaded file\n   :return: Path of the uploaded file\n   \"\"\"\n   with open(str(file_name), \"wb\") as obj_file:\n       uploaded_file_id = str(db.visualworkflow_request_uploaded_files.files.\\\n           find_one({\"metadata.requestId\": request_id, \\\n           \"metadata.fieldId\": field_id, \"metadata.taskId\": task_id},\\\n            {\"_id\": 1})[\"_id\"])\n       gfs = gridfs.GridFS(db, collection=\"visualworkflow_request_uploaded_files\")\n       content = gfs.get(ObjectId(uploaded_file_id)).read()\n       obj_file.write(content)\n   return str(file_name)\n\ndef get_file(uploaded_file):\n   \"\"\"\n   Method to get the metadata of the uploaded file from the database\n   :param db: Database connection object to AppViewX\n   :param uploaded_file: Name of the uploaded file\n   :return: Path of the uploaded file\n   \"\"\"\n   file_name = uploaded_file.get(\"fileName\", \"certificate_file.cer\")\n   request_id = uploaded_file[\"requestId\"]\n   field_id = uploaded_file[\"fieldId\"]\n   task_id = uploaded_file[\"taskId\"]\n   return write_file_to_appviewx(request_id, field_id, task_id, file_name)\n\n\ndef getCertificateGroup():\n    \"\"\"\n    Function to Fetch the configured certificate group\n    \n    :return: Certificate policy\n    \"\"\"\n    key = str()\n    gateway_url, gateway_key = fetch_gateway_key()\n    cwd = os.getcwd()\n    url = \"{}avxapi/cert-group-search?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n\n    # payload = {\"payload\":{\"log\": True,\"password\": base64.b64encode(file_password.encode()).decode(),\"uuId\": cert_id}}\n\n    payload = {\"payload\":{ \"startIndex\":0,\"displayLength\":100,\"searchText\":\"\",\"sortOrder\":\"asc\",\"sortColumn\":\"name\"}}\n    \n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    # logger.info(\"=========CertificateSearch==========\")\n    # AVX::LOG(\"=========CertificateSearch==========\")\n    # logger.info(response.text)\n    # logger.info(response.reason)\n    response = response.json()\n    logger.info('--->'+str(response))\n    # return type(response), type(response['response'])\n    response = response.get(\"response\").get(\"data\")\n    \n    groups = []\n    for cert_group in response:\n        groups.append(cert_group.get(\"name\"))\n    \n    return groups\n\ndef fetch_gateway_key():\n    '''\n    fetch the gateway key from appviewx config file\n    :return: appviewx gateway key\n    '''\n    conf_content = {}\n    abs_path = os.path.dirname(os.path.abspath(__file__))\n    # logger.info('PATH')\n    # logger.info(abs_path)\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\n    prop_file = open(prop_file_path)\n    prop_file_lines = prop_file.readlines()\n    for line in prop_file_lines:\n        if line is not \"\\n\" and \"GATEWAY_KEY\" in line or \"GATEWAY_BASE_URL\" in line:\n            conf_content[line.split(\"=\")[0]] = line.split(\"=\")[1].replace(\"\\n\", \"\")\n    return conf_content['GATEWAY_BASE_URL'], conf_content['GATEWAY_KEY']\n    prop_file.close()\n\n\n\nif __name__ == \"__main__\":\n    \n    certificate_group = getCertificateGroup()\n    AVX::LOG(\"CERT GROUP\")\n    AVX::LOG(str(certificate_group))\n    a = '<%upload_csv%>'\n    b = get_file('<%upload_csv%>')\n    c = \"\"\n    with open(\"sample.csv\", 'r') as data_file:\n        reader = csv.reader(data_file, delimiter='\\n')\n        for row in reader:\n            # c += ', '.join(row) + '\\n'\n            AVX::LOG(str(type(row)))\n            AVX::LOG(\"--->>\"+str(row))\n            if len(row)>0:\n                c += str(row[0]) + '\\n'\n            if len(row)>1:\n                c += str(row[1]) + '\\n'\n            \n    AVX::LOG(str(a))\n    AVX::LOG(str(b))\n    AVX::LOG(str(c))\n    AVX::OUTPUT({})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "createform_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "AppViewX create certificates",
    "subFlowID" : "5QWfKkZF",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "validity_r",
      "value" : "<%validity_r%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "validity_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "challenge_password",
      "value" : "<%challenge_password%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "challenge_password",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "validity",
      "value" : "<%validity%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "validity",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "ca_account",
      "value" : "<%ca_account%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_account",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "assign_group",
      "value" : "<%assign_group%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "assign_group",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "read_only",
      "value" : "<%read_only%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "read_only",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "csr_parameters",
      "value" : "<%csr_parameters%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_parameters",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "iM5chT1L",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_2",
    "task_name" : "Script",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "# AVX::LOG(str(len('<%csr_parameters%>')))\n# AVX::LOG(str(type('<%csr_parameters%>')))\n# AVX::LOG(str('<%csr_parameters%>'))\n# AVX::LOG(str(len('<%read_only%>')))\n# AVX::LOG(str(type('<%read_only%>')))\n# AVX::LOG(str('<%read_only%>'))\nimport sys\nimport json\nimport requests\nimport ast\nimport os\nfrom configobj import ConfigObj\n\nsys.path.insert(0,AVX::HELPER)\nsys.path.insert(0,AVX::DEPENDENCIES)\nimport appviewx\nimport logger_util\ntrue = True\nfalse = False\nnull = None\n\nimport base64\npassword = \"<%challenge_password%>\"\n\nencrypted_pass = \"\"\n\nif password:\n\tenc_pass = base64.b64encode(password.encode(\"utf-8\"))\n\tencrypted_pass = str(enc_pass,\"utf-8\")\n\n\nlogger = logger_util.get_logger('Get key-type and bit length')\n\n\n\ndef fetch_gateway_key():\n    conf_content = {}\n    abs_path = os.path.dirname(os.path.abspath(__file__))\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\n    config = ConfigObj(prop_file_path)\n    return config['GATEWAY_BASE_URL'], config['GATEWAY_KEY']\n\n\ndef cert_ca_connector_info(csr):\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"AppViewX\",\n        \t\t\"isAutoRenewal\": false,\n        \t\t\"autoRegenerateEnabled\": false,\n        \t\t\"caSettingName\": str(\"<%ca_account%>\"),\n        \t\t\"certificateProfileName\": str(\"<%certificate_profile%>\"),\n        \t\t\"certificateType\": \"\",\n        \t\t\"name\": str(\"<%cert_authority%>\")+\" CA connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": csr.get(\"common_name\"),\n        \t\t\t\"subjectAlternativeNames\": [\"multiselect-all\", \"dNSNames\"].append(\"iPAddresses\") if csr.get(\"ip_address\") else [\"multiselect-all\", \"dNSNames\"],\n        \t\t\t\"dNSNames\": csr.get(\"dns\") or \"\",\n        \t\t\t\"iPAddresses\": csr.get(\"ip_address\") or \"\",\n        \t\t\t\"organization\": csr.get(\"org\") or \"\",\n        \t\t\t\"organizationUnit\": csr.get(\"org_unit\") or \"\",\n        \t\t\t\"locality\": csr.get(\"locality\") or \"\",\n        \t\t\t\"state\": csr.get(\"state\") or \"\",\n        \t\t\t\"country\": csr.get(\"country\") or \"\",\n        \t\t\t\"mailAddress\": csr.get(\"email\") or \"\",\n        \t\t\t\"encryptedChallengePassword\": encrypted_pass or \"\",\n        \t\t\t\"hashFunction\": csr.get(\"hash_function\"),\n        \t\t\t\"keyType\": csr.get(\"key_type\").split('-')[0].strip(),\n        \t\t\t\"bitLength\": csr.get(\"key_type\").split('-')[1].strip(),\n        \t\t\t\"postalCode\": \"\",\n        \t\t\t\"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": csr.get(\"dns\").split(\",\").append(csr.get(\"common_name\")) if csr.get(\"dns\") else [].append(csr.get(\"common_name\")),\n        \t\t\t\t\"iPAddresses\": csr.get(\"ip_address\").split(\",\") if csr.get(\"ip_address\") else []\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(\"<%validity%>\"),\n        \t\t\"vendorSpecificDetails\": {}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n    \n    logger.info(str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json().get(\"response\")\n    logger.info(response)\n    return response.get(\"uuid\")\n\ndef cert_ca_connector_info_from_upload_csr(csr):\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"AppViewX\",\n        \t\t\"isAutoRenewal\": false,\n        \t\t\"autoRegenerateEnabled\": false,\n        \t\t\"caSettingName\": str(\"<%ca_account%>\"),\n        \t\t\"certificateProfileName\": str(\"<%certificate_profile%>\"),\n        \t\t\"certificateType\": \"\",\n        \t\t\"name\": str(\"<%cert_authority%>\")+\" CA connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": csr.get(\"cn\"),\n        \t\t\t\"subjectAlternativeNames\": [\"multiselect-all\", \"dNSNames\"].append(\"iPAddresses\") if csr.get(\"ip_address_r\") else [\"multiselect-all\", \"dNSNames\"],\n        \t\t\t\"dNSNames\": csr.get(\"dns_r\") or \"\",\n        \t\t\t\"iPAddresses\": csr.get(\"ip_address_r\") or \"\",\n        \t\t\t\"organization\": csr.get(\"org_r\") or \"\",\n        \t\t\t\"organizationUnit\": csr.get(\"org_unit_r\") or \"\",\n        \t\t\t\"locality\": csr.get(\"locality_r\") or \"\",\n        \t\t\t\"state\": csr.get(\"state_r\") or \"\",\n        \t\t\t\"country\": csr.get(\"country_r\") or \"\",\n        \t\t\t\"mailAddress\": csr.get(\"email_r\") or \"\",\n        \t\t\t\"encryptedChallengePassword\": encrypted_pass or \"\",\n        \t\t\t\"hashFunction\": csr.get(\"hash_function_r\"),\n        \t\t\t\"keyType\": csr.get(\"key_type_r\"),\n        \t\t\t\"bitLength\": csr.get(\"bit_length_r\"),\n        \t\t\t\"postalCode\": \"\",\n        \t\t\t\"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": csr.get(\"dns_r\").split(\",\").append(csr.get(\"cn\")) if csr.get(\"dns_r\") else [].append(csr.get(\"cn\")),\n        \t\t\t\t\"iPAddresses\": csr.get(\"ip_address_r\").split(\",\") if csr.get(\"ip_address_r\") else []\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(\"<%validity_r%>\"),\n        \t\t\"vendorSpecificDetails\": {}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n    \n    logger.info(str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json().get(\"response\")\n    logger.info(response)\n    return response.get(\"uuid\")\n\ndef cert_submit_new_csr(uuid):\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-submit-new-csr?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    payload =  {\n        \"payload\":{\n            \"certificateUuid\":uuid\n        }\n    }\n    \n    logger.info('+++++++'+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json()\n    logger.info(response)\n    return response\n\n\n\nif __name__ == \"__main__\":\n    uuid_list = []\n    if '<%csr_parameters%>':\n        AVX::LOG(str(type('<%csr_parameters%>')))\n        AVX::LOG(str('<%csr_parameters%>'))\n        for csr in <%csr_parameters%>:\n            uuid = cert_ca_connector_info(csr)\n            resp = cert_submit_new_csr(uuid)\n            AVX::LOG(str(resp))\n        # cert_ca_connector_info()\n    elif '<%read_only%>':\n        for csr in <%read_only%>:\n            uuid = cert_ca_connector_info_from_upload_csr(csr)\n            resp = cert_submit_new_csr(uuid)\n            AVX::LOG(str(resp))\n    AVX::OUTPUT({\"uuid_list\":uuid_list})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Join",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "flowIdsToJoin" : [ ],
    "_id" : null,
    "task_id" : "join_1",
    "task_name" : "Join",
    "task_type" : "join",
    "task_category" : "join",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "join",
    "group_name" : "General",
    "viewable_type" : "default"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "decision",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "AppViewX create certificates",
    "subFlowID" : "5QWfKkZF",
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "iM5chT1L",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_3",
    "task_name" : "Script",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "AVX::OUTPUT({})",
    "http_method" : "POST",
    "action_id" : "run-script"
  } ],
  "subFlowID" : "5QWfKkZF",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "decision_1" : [ ],
    "createform_1" : [ {
      "name" : "IP Address (Subject alternative names)",
      "key" : "ip_address_r",
      "value" : "ip_address_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ip_address_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Key type",
      "key" : "key_type_r",
      "value" : "key_type_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "key_type_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Locality",
      "key" : "locality_r",
      "value" : "locality_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "locality_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Locality",
      "key" : "locality",
      "value" : "locality",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "locality",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Validity (in years)",
      "key" : "validity",
      "value" : "validity",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "1,2,3,4,5",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "validity",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization",
      "key" : "org",
      "value" : "org",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Common name",
      "key" : "common_name",
      "value" : "common_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "common_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Bit length",
      "key" : "bit_length_r",
      "value" : "bit_length_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "bit_length_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Email address",
      "key" : "email",
      "value" : "email",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "email",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization unit",
      "key" : "org_unit",
      "value" : "org_unit",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org_unit",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Country",
      "key" : "country",
      "value" : "country",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "country",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Key type - Bit length",
      "key" : "key_type",
      "value" : "key_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "key_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR parameters",
      "key" : "csr_parameters",
      "value" : "csr_parameters",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_parameters",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR generation",
      "key" : "csr_generation",
      "value" : "csr_generation",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "AppViewX,Upload CSR",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_generation",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Country",
      "key" : "country_r",
      "value" : "country_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "country_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "State",
      "key" : "state_r",
      "value" : "state_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "state_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Common name",
      "key" : "cn",
      "value" : "cn",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cn",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Please paste your CSR",
      "key" : "upload_csr",
      "value" : "upload_csr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upload_csr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization unit",
      "key" : "org_unit_r",
      "value" : "org_unit_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org_unit_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR parameters",
      "key" : "read_only",
      "value" : "read_only",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "read_only",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "DNS (Subect alternative name)",
      "key" : "dns_r",
      "value" : "dns_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "dns_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Email",
      "key" : "email_r",
      "value" : "email_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "email_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Validity (in years)",
      "key" : "validity_r",
      "value" : "validity_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "1,2,3,4,5",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "validity_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CA account",
      "key" : "ca_account",
      "value" : "ca_account",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_account",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "IP Address (Subject alternative names)",
      "key" : "ip_address",
      "value" : "ip_address",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ip_address",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "DNS (Subject alternative names)",
      "key" : "dns",
      "value" : "dns",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "dns",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Hash function",
      "key" : "hash_function",
      "value" : "hash_function",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "hash_function",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate authority",
      "key" : "cert_auth",
      "value" : "cert_auth",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "<%cert_authority%>",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_auth",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization",
      "key" : "org_r",
      "value" : "org_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "State",
      "key" : "state",
      "value" : "state",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "state",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Challenge password",
      "key" : "challenge_pass",
      "value" : "challenge_pass",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "challenge_pass",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Hash function",
      "key" : "hash_function_r",
      "value" : "hash_function_r",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "hash_function_r",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "script_1" : [ ],
    "script_2" : [ {
      "name" : "uuid_list",
      "key" : "uuid_list",
      "value" : "uuid_list",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "uuid_list",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "join_1" : [ ],
    "script_3" : [ ]
  },
  "type" : "cart",
  "level" : 0,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Renamed Push",
  "description" : "",
  "flowName" : "AppViewX create certificates",
  "workflowType" : "Default",
  "subFlowType" : "Flow",
  "parentSubFlowID" : "iM5chT1L",
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop flow",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "parallel_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "parallel",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Form",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "dynamicAuth" : null,
    "regexList" : null,
    "regexOperation" : null,
    "regexPattern" : null,
    "accessMode" : null,
    "proceedProcess" : "Submit",
    "breakdownProcess" : "Back",
    "cancelProcess" : "Cancel",
    "saveDraftProcess" : "Save Draft",
    "closeProcess" : "Exit",
    "enableSaveDraft" : false,
    "enableCancel" : true,
    "enableClose" : false,
    "enableAutoApprove" : null,
    "enableBreakDown" : false,
    "availableGlobalData" : null,
    "_id" : null,
    "task_id" : "createform_1",
    "task_name" : "Select Certificate Authority",
    "task_type" : "form",
    "task_category" : "form",
    "component_type" : "form",
    "setNullProperties" : true,
    "folderName" : "CertOOB",
    "sub_group" : "form",
    "group_name" : "User interface",
    "viewable_type" : "default",
    "aclIdentifiers" : null,
    "template" : {
      "name" : "Select Certificate Authority",
      "description" : null,
      "aclIdentifiers" : null,
      "fields" : [ {
        "labelName" : "Autotrigger",
        "elementType" : "Hidden",
        "values" : "",
        "fieldId" : "auto_trigger",
        "fieldScript" : "Get group",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : true,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR parameters inputs",
        "elementType" : "Radio button",
        "values" : "Manual,CSV file upload",
        "fieldId" : "create_cert",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Assign group",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "assign_group",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate profile",
        "elementType" : "Dropdown",
        "values" : "Server,Client,CodeSigning",
        "fieldId" : "certificate_profile",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate authority",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "cert_authority",
        "fieldScript" : "Get certificate authority",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Sample CSV for AppViewX",
        "elementType" : "Download CSV",
        "values" : "Certificate authority,Certificate profile,CA account,Common name,DNS(Subject alternative name(s)),IP Address(Subject alternative name(s)),Organization,Organization unit,Locality,State,Country,Email address,Validity (in years),Hash function,Key type,Bit length",
        "fieldId" : "sample",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "create_cert:CSV file upload&cert_authority:AppViewX",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "sample",
        "downloadType" : null
      }, {
        "labelName" : "Sample CSV for Microsoft Enterprise",
        "elementType" : "Download CSV",
        "values" : "CA account,Common name,Directory name (Subject alternative names),DNS (Subject alternative names),Email (Suject alternative names),IP Address (Subject alternative names),Registered ID (Subject alternative names),URL (Subject alternative names),Other name (Subject alternative names),Organization,Organization unit,Locality,State,Country,Email address,Challenge password,Hash function,Key type,Bit length,Template name",
        "fieldId" : "sample_ms",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "cert_authority:Microsoft Enterprise&create_cert:CSV file upload",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "sample",
        "downloadType" : null
      }, {
        "labelName" : "Sample CSV for DigiCert",
        "elementType" : "Download CSV",
        "values" : "CA account,Division,Certificate type,Common name,DNS(Subject alternative name),IP address,Organization,Organization unit,Organization address,Locality,State,Country,Zip code,Email address,Validity,Challenge password,Hash function,Key type,Bit length,Server type,CA certificate ID",
        "fieldId" : "sample_digi",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "create_cert:CSV file upload&cert_authority:DigiCert",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "sample",
        "downloadType" : null
      }, {
        "labelName" : "Sample CSV for Sectigo",
        "elementType" : "Download CSV",
        "values" : "CA account,Certificate type,Common name,Subject alternative name,Organization,Organization unit,Organization address,Locality,State,Country,Zip code,Email address,Validity,Challenge password,Hash function,Key type,Bit length,Server type,Number of servers",
        "fieldId" : "sample_sectigo",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "cert_authority:Comodo Certificate Manager&create_cert:CSV file upload",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "sample",
        "downloadType" : null
      }, {
        "labelName" : "Upload CSV file",
        "elementType" : "File upload",
        "values" : "",
        "fieldId" : "upload_csv",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "create_cert:CSV file upload",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Operation type",
        "elementType" : "Hidden",
        "values" : "Create",
        "fieldId" : "operation_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "common_name",
        "elementType" : "Hidden",
        "values" : "",
        "fieldId" : "common_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      } ],
      "fieldScripts" : [ {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Cancel request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Discard request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Submit request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "auto_trigger" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get group",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbAoKCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoJ0dldCBDZXJ0aWZpY2F0ZSBncm91cCcpCgpkZWYgZ2V0Q2VydGlmaWNhdGVHcm91cCgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAga2V5ID0gc3RyKCkKICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSA9IGZldGNoX2dhdGV3YXlfa2V5KCkKICAgIGN3ZCA9IG9zLmdldGN3ZCgpCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1ncm91cC1zZWFyY2g/Z3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CgogICAgcGF5bG9hZCA9IHsicGF5bG9hZCI6eyAic3RhcnRJbmRleCI6MCwiZGlzcGxheUxlbmd0aCI6MTAwLCJzZWFyY2hUZXh0IjoiIiwic29ydE9yZGVyIjoiYXNjIiwic29ydENvbHVtbiI6Im5hbWUifX0KICAgIAogICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgZGF0YT1qc29uLmR1bXBzKHBheWxvYWQpLCB2ZXJpZnk9RmFsc2UpCiAgICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKQogICAgbG9nZ2VyLmluZm8oJ2dldENlcnRpZmljYXRlR3JvdXAgUmVzcG9uc2UgOiAnK3N0cihyZXNwb25zZSkpCiAgICByZXNwb25zZSA9IHJlc3BvbnNlLmdldCgicmVzcG9uc2UiKS5nZXQoImRhdGEiKQogICAgCiAgICBncm91cHMgPSBbXQogICAgZm9yIGNlcnRfZ3JvdXAgaW4gcmVzcG9uc2U6CiAgICAgICAgZ3JvdXBzLmFwcGVuZChjZXJ0X2dyb3VwLmdldCgibmFtZSIpKQogICAgCiAgICByZXR1cm4gZ3JvdXBzCgpkZWYgZmV0Y2hfZ2F0ZXdheV9rZXkoKToKICAgICcnJwogICAgZmV0Y2ggdGhlIGdhdGV3YXkga2V5IGZyb20gYXBwdmlld3ggY29uZmlnIGZpbGUKICAgIDpyZXR1cm46IGFwcHZpZXd4IGdhdGV3YXkga2V5CiAgICAnJycKICAgIGNvbmZfY29udGVudCA9IHt9CiAgICBhYnNfcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKQoKICAgIHByb3BfZmlsZV9wYXRoID0gYWJzX3BhdGggKyAiLy4uL3Byb3BlcnRpZXMvYXBwdmlld3gucHJvcGVydGllcyIKICAgIHByb3BfZmlsZSA9IG9wZW4ocHJvcF9maWxlX3BhdGgpCiAgICBwcm9wX2ZpbGVfbGluZXMgPSBwcm9wX2ZpbGUucmVhZGxpbmVzKCkKICAgIGZvciBsaW5lIGluIHByb3BfZmlsZV9saW5lczoKICAgICAgICBpZiBsaW5lIGlzIG5vdCAiXG4iIGFuZCAiR0FURVdBWV9LRVkiIGluIGxpbmUgb3IgIkdBVEVXQVlfQkFTRV9VUkwiIGluIGxpbmU6CiAgICAgICAgICAgIGNvbmZfY29udGVudFtsaW5lLnNwbGl0KCI9IilbMF1dID0gbGluZS5zcGxpdCgiPSIpWzFdLnJlcGxhY2UoIlxuIiwgIiIpCiAgICByZXR1cm4gY29uZl9jb250ZW50WydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZfY29udGVudFsnR0FURVdBWV9LRVknXQogICAgcHJvcF9maWxlLmNsb3NlKCkKCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKCiAgICBjZXJ0aWZpY2F0ZV9ncm91cCA9IGdldENlcnRpZmljYXRlR3JvdXAoKQogICAgCiAgICBkYXRhID0gIFt7ImFzc2lnbl9ncm91cCI6dmFsfSBmb3IgdmFsIGluIGNlcnRpZmljYXRlX2dyb3VwXQogICAgaWYgZGF0YToKICAgICAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQogICAgZWxzZToKICAgICAgICBwcmludChqc29uLmR1bXBzKHsnZXJyb3InOiAnTm8gQ2VydGlmaWNhdGUgR3JvdXAgaGFzIGJlZW4gY29uZmlndXJlZCd9KSk=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "cert_authority" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get certificate authority",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbAoKCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoJ0dldCBDZXJ0aWZpY2F0ZSBwb2xpY3knKQoKZGVmIGdldENlcnRpZmljYXRlUG9saWN5KCk6CiAgICAiIiIKICAgIEZ1bmN0aW9uIHRvIEZldGNoIHRoZSBjb25maWd1cmVkIGNlcnRpZmljYXRlIGdyb3VwCiAgICAKICAgIDpyZXR1cm46IENlcnRpZmljYXRlIHBvbGljeQogICAgIiIiCiAgICBrZXkgPSBzdHIoKQogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY3dkID0gb3MuZ2V0Y3dkKCkKICAgIGNhdCA9ICJzZXJ2ZXIiCiAgICAKICAgIGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJTZXJ2ZXIiOgogICAgICAgIGNhdCA9ICJzZXJ2ZXIiCiAgICBlbGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJDbGllbnQiOgogICAgICAgIGNhdCA9ICJjbGllbnQiCiAgICBlbGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJDb2RlU2lnbmluZyI6CiAgICAgICAgY2F0ID0gImNvZGVTaWduaW5nIgogICAgICAgIAogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtZ2V0LXBvbGljeS1ieS1ncm91cG5hbWU/Y2VydGlmaWNhdGVHcm91cE5hbWU9e30mY2VydGlmaWNhdGVDYXRlZ29yeT17fT9nd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8YXNzaWduX2dyb3VwPicsY2F0ICwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CgogICAgCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpCiAgICBsb2dnZXIuaW5mbygnZ2V0Q2VydGlmaWNhdGVQb2xpY3kgUmVzcG9uc2UgOiAnK3N0cihyZXNwb25zZSkpCiAgICAKICAgIHJldHVybiByZXNwb25zZS5nZXQoInJlc3BvbnNlIikuZ2V0KCJ0eXBlIikKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgJycnCiAgICBmZXRjaCB0aGUgZ2F0ZXdheSBrZXkgZnJvbSBhcHB2aWV3eCBjb25maWcgZmlsZQogICAgOnJldHVybjogYXBwdmlld3ggZ2F0ZXdheSBrZXkKICAgICcnJwogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCgogICAgcHJvcF9maWxlX3BhdGggPSBhYnNfcGF0aCArICIvLi4vcHJvcGVydGllcy9hcHB2aWV3eC5wcm9wZXJ0aWVzIgogICAgcHJvcF9maWxlID0gb3Blbihwcm9wX2ZpbGVfcGF0aCkKICAgIHByb3BfZmlsZV9saW5lcyA9IHByb3BfZmlsZS5yZWFkbGluZXMoKQogICAgZm9yIGxpbmUgaW4gcHJvcF9maWxlX2xpbmVzOgogICAgICAgIGlmIGxpbmUgaXMgbm90ICJcbiIgYW5kICJHQVRFV0FZX0tFWSIgaW4gbGluZSBvciAiR0FURVdBWV9CQVNFX1VSTCIgaW4gbGluZToKICAgICAgICAgICAgY29uZl9jb250ZW50W2xpbmUuc3BsaXQoIj0iKVswXV0gPSBsaW5lLnNwbGl0KCI9IilbMV0ucmVwbGFjZSgiXG4iLCAiIikKICAgIHJldHVybiBjb25mX2NvbnRlbnRbJ0dBVEVXQVlfQkFTRV9VUkwnXSwgY29uZl9jb250ZW50WydHQVRFV0FZX0tFWSddCiAgICBwcm9wX2ZpbGUuY2xvc2UoKQoKCgpkZWYgZ2V0Q2VydGlmaWNhdGVBdXRob3JpdHkoKToKICAgICIiIgogICAgRnVuY3Rpb24gdG8gRmV0Y2ggdGhlIGNvbmZpZ3VyZWQgY2VydGlmaWNhdGUgZ3JvdXAKICAgIAogICAgOnJldHVybjogQ2VydGlmaWNhdGUgcG9saWN5CiAgICAiIiIKICAgIGtleSA9IHN0cigpCiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICBjd2QgPSBvcy5nZXRjd2QoKQogICAgY2F0ID0gInNlcnZlciIKICAgIGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJTZXJ2ZXIiOgogICAgICAgIGNhdCA9ICJzZXJ2ZXIiCiAgICBlbGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJDbGllbnQiOgogICAgICAgIGNhdCA9ICJjbGllbnQiCiAgICBlbGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJDb2RlU2lnbmluZyI6CiAgICAgICAgY2F0ID0gImNvZGVTaWduaW5nIgogICAgICAgIAogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtZ2V0LXBvbGljeS1ieS1ncm91cG5hbWU/Y2VydGlmaWNhdGVHcm91cE5hbWU9e30mY2VydGlmaWNhdGVDYXRlZ29yeT17fT9nd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8YXNzaWduX2dyb3VwPicsY2F0ICwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CgogICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCB2ZXJpZnk9RmFsc2UpCiAgICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKQogICAgbG9nZ2VyLmluZm8oJ0dldCBDZXJ0IGF1dGhvcml0eSBSZXNwb25zZSA6ICcrc3RyKHJlc3BvbnNlKSkKICAgIAogICAgcmVzcG9uc2UgPSByZXNwb25zZS5nZXQoInJlc3BvbnNlIikuZ2V0KCJjZXJ0aWZpY2F0ZVBvbGljeUNhQWNjb3VudERldGFpbHMiKQogICAgCiAgICBjYSA9IFtdCiAgICAKICAgIGZvciByZXMgaW4gcmVzcG9uc2U6CiAgICAgICAgaWYgcmVzWyJjZXJ0aWZpY2F0ZUF1dGhvcml0eSJdOgogICAgICAgICAgICBjYS5hcHBlbmQocmVzLmdldCgiY2VydGlmaWNhdGVBdXRob3JpdHkiKSkKICAgIHJldHVybiBjYQoKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CgogICAgY2VydGlmaWNhdGVfcG9saWN5ID0gZ2V0Q2VydGlmaWNhdGVQb2xpY3koKQogICAgY2VydGlmaWNhdGVfYXV0aG9yaXR5ID0gZ2V0Q2VydGlmaWNhdGVBdXRob3JpdHkoKQoKICAgIGlmIGNlcnRpZmljYXRlX3BvbGljeToKICAgICAgICBpZiBjZXJ0aWZpY2F0ZV9hdXRob3JpdHk6CiAgICAgICAgICAgIGRhdGEgPSBbeyJjZXJ0X2F1dGhvcml0eSI6dmFsfSBmb3IgdmFsIGluIGNlcnRpZmljYXRlX2F1dGhvcml0eV0KICAgICAgICAgICAgcHJpbnQoanNvbi5kdW1wcyhkYXRhKSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBwcmludChqc29uLmR1bXBzKHsnZXJyb3InOiAnTm8gY2VydGlmaWNhdGUgYXV0aG9yaXR5IGlzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIENlcnRpZmljYXRlIEdyb3VwJ30pKQogICAgZWxzZToKICAgICAgICBwcmludChqc29uLmR1bXBzKHsnZXJyb3InOiAnTm8gcG9saWN5IGlzIGFzc29jaWF0ZWQgd2l0aCB0aGlzIENlcnRpZmljYXRlIEdyb3VwJ30pKQo=",
        "_id" : null,
        "_keywords" : null
      } ],
      "accessType" : null,
      "parentTemplate" : null,
      "hiddenTemplate" : false,
      "groupData" : {
        "treeData" : [ ],
        "listData" : [ ]
      },
      "workflow_template_name" : null,
      "_keywords" : null
    },
    "configuration" : {
      "aclIdentifiers" : [ "super access" ],
      "permission" : [ "super access:submit" ],
      "skipFlow" : false,
      "emailConfiguration" : {
        "emailNotificationEnabled" : false,
        "createdNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "reviewedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "submittedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "rejectedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        }
      },
      "multipleScenarioEnabled" : false,
      "maxScenarioCount" : 0,
      "enableSaveDraft" : true,
      "enableCancel" : true,
      "enableClose" : false,
      "enableBreakDown" : false,
      "labels" : {
        "cancel" : "Cancel",
        "submit" : "Submit",
        "reject" : "Back",
        "saveDraft" : "Save Draft",
        "close" : "Exit"
      },
      "enableAutoApprove" : false,
      "failoverState" : 2,
      "successState" : 1,
      "dynamicAuth" : null,
      "regexList" : null,
      "regexOperation" : null,
      "regexPattern" : null,
      "accessMode" : null
    },
    "data" : null,
    "api_list" : null
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "parallel_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "AppViewX create certificates",
    "subFlowID" : "ec69nhar",
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : null,
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "workflowDetail" : null,
    "workflowTaskComponentDetail" : null,
    "_id" : null,
    "task_id" : "AppViewXcreatecertificates_1",
    "task_name" : "AppViewX create certificates",
    "task_type" : "flow",
    "task_category" : null,
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "CertOOB",
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "parallel_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "DigiCert create certificates",
    "subFlowID" : "MRUKXP9F",
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : null,
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "workflowDetail" : null,
    "workflowTaskComponentDetail" : null,
    "_id" : null,
    "task_id" : "AppViewXcreatecertificates_3",
    "task_name" : "DigiCert create certificates",
    "task_type" : "flow",
    "task_category" : null,
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "CertOOB",
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "parallel_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "MS create certificates",
    "subFlowID" : "Jvvtkpcr",
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : null,
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "workflowDetail" : null,
    "workflowTaskComponentDetail" : null,
    "_id" : null,
    "task_id" : "AppViewXcreatecertificates_4",
    "task_name" : "MS create certificates",
    "task_type" : "flow",
    "task_category" : null,
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "CertOOB",
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "parallel_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Sectigo create certificates",
    "subFlowID" : "QaLFxO3O",
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : null,
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "workflowDetail" : null,
    "workflowTaskComponentDetail" : null,
    "_id" : null,
    "task_id" : "AppViewXcreatecertificates_5",
    "task_name" : "Sectigo create certificates",
    "task_type" : "flow",
    "task_category" : null,
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "CertOOB",
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "createform_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "AppViewX" : [ {
        "taskId" : "AppViewXcreatecertificates_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "flow",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "DigiCert" : [ {
        "taskId" : "AppViewXcreatecertificates_3",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "flow",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "MicrosoftEnterprise" : [ {
        "taskId" : "AppViewXcreatecertificates_4",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "flow",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "ComodoCertificateManager" : [ {
        "taskId" : "AppViewXcreatecertificates_5",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "flow",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : "iM5chT1L",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Switch",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "",
    "helpContent" : null,
    "rules" : {
      "AppViewX" : {
        "not" : false,
        "condition" : "AND",
        "rules" : [ {
          "operator" : "==",
          "value" : "<%cert_authority%>",
          "comparedValue" : "AppViewX"
        } ]
      },
      "MicrosoftEnterprise" : {
        "not" : false,
        "condition" : "AND",
        "rules" : [ {
          "operator" : "==",
          "value" : "<%cert_authority%>",
          "comparedValue" : "Microsoft Enterprise"
        } ]
      },
      "DigiCert" : {
        "not" : false,
        "condition" : "AND",
        "rules" : [ {
          "operator" : "==",
          "value" : "<%cert_authority%>",
          "comparedValue" : "DigiCert"
        } ]
      },
      "ComodoCertificateManager" : {
        "not" : false,
        "condition" : "AND",
        "rules" : [ {
          "operator" : "==",
          "value" : "<%cert_authority%>",
          "comparedValue" : "Comodo Certificate Manager"
        } ]
      }
    },
    "_id" : null,
    "task_id" : "parallel_1",
    "task_name" : "Certificate creation",
    "task_type" : "parallel",
    "task_category" : "parallel",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "CertOOB",
    "sub_group" : "parallel",
    "group_name" : "General",
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "AppViewXcreatecertificates_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "AppViewXcreatecertificates_3",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "AppViewXcreatecertificates_5",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "AppViewXcreatecertificates_4",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "wkzaUXpL",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Join",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "flowIdsToJoin" : [ ],
    "_id" : null,
    "task_id" : "join_1",
    "task_name" : "Join",
    "task_type" : "join",
    "task_category" : "join",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "CertOOB",
    "sub_group" : "join",
    "group_name" : "General",
    "viewable_type" : "default"
  } ],
  "subFlowID" : "wkzaUXpL",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "CertcreateOOB_1" : [ ],
    "createform_1" : [ {
      "name" : "Operation type",
      "key" : "operation_type",
      "value" : "operation_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "Create",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "operation_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Sample CSV for DigiCert",
      "key" : "sample_digi",
      "value" : "sample_digi",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "CA account,Division,Certificate type,Common name,DNS(Subject alternative name),IP address,Organization,Organization unit,Organization address,Locality,State,Country,Zip code,Email address,Validity,Challenge password,Hash function,Key type,Bit length,Server type,CA certificate ID",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sample_digi",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate profile",
      "key" : "certificate_profile",
      "value" : "certificate_profile",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "Server,Client,CodeSigning",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR parameters inputs",
      "key" : "create_cert",
      "value" : "create_cert",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "Manual,CSV file upload",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "create_cert",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "common_name",
      "key" : "common_name",
      "value" : "common_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "common_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Assign group",
      "key" : "assign_group",
      "value" : "assign_group",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "assign_group",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Sample CSV for Microsoft Enterprise",
      "key" : "sample_ms",
      "value" : "sample_ms",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "CA account,Common name,Directory name (Subject alternative names),DNS (Subject alternative names),Email (Suject alternative names),IP Address (Subject alternative names),Registered ID (Subject alternative names),URL (Subject alternative names),Other name (Subject alternative names),Organization,Organization unit,Locality,State,Country,Email address,Challenge password,Hash function,Key type,Bit length,Template name",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sample_ms",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Upload CSV file",
      "key" : "upload_csv",
      "value" : "upload_csv",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upload_csv",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate authority",
      "key" : "cert_authority",
      "value" : "cert_authority",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "AppViewXcreatecertificates_1" : [ ],
    "AppViewXcreatecertificates_2" : [ ],
    "AppViewXcreatecertificates_3" : [ ],
    "AppViewXcreatecertificates_4" : [ ],
    "AppViewXcreatecertificates_5" : [ ],
    "parallel_1" : [ ],
    "join_1" : [ ],
    "AppViewXcreatecertificates_6" : [ ]
  },
  "type" : null,
  "level" : 1,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Renamed Push",
  "description" : "",
  "flowName" : "Cert create OOB",
  "workflowType" : "Default",
  "subFlowType" : "Flow",
  "parentSubFlowID" : "iM5chT1L",
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop flow",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "8DZmIWv7",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "CSV_file_upload_or_Manual_entry" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "Failed" : [ {
        "taskId" : "createform_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "form",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "AppViewX create certificates",
    "subFlowID" : "5QWfKkZF",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "create_cert",
      "value" : "<%create_cert%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "create_cert",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "If",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "iM5chT1L",
    "helpContent" : null,
    "rule" : {
      "not" : false,
      "condition" : "AND",
      "rules" : [ {
        "operator" : "==",
        "value" : "<%create_cert%>",
        "comparedValue" : "CSV file upload"
      } ]
    },
    "_id" : null,
    "task_id" : "decision_1",
    "task_name" : "If",
    "task_type" : "decision",
    "task_category" : "decision",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "decision",
    "group_name" : "General",
    "viewable_type" : "custom",
    "rule_name" : "CSV_file_upload_or_Manual_entry"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "401" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Form",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "dynamicAuth" : null,
    "regexList" : null,
    "regexOperation" : null,
    "regexPattern" : null,
    "accessMode" : null,
    "proceedProcess" : "Submit",
    "breakdownProcess" : "Back",
    "cancelProcess" : "Cancel",
    "saveDraftProcess" : "Save Draft",
    "closeProcess" : "Exit",
    "enableSaveDraft" : false,
    "enableCancel" : true,
    "enableClose" : false,
    "enableAutoApprove" : null,
    "enableBreakDown" : false,
    "availableGlobalData" : null,
    "_id" : null,
    "task_id" : "createform_1",
    "task_name" : "CA and CSR parameters - AppViewX",
    "task_type" : "form",
    "task_category" : "form",
    "component_type" : "form",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "form",
    "group_name" : "User interface",
    "viewable_type" : "default",
    "aclIdentifiers" : null,
    "template" : {
      "name" : "CA and CSR parameters - AppViewX",
      "description" : null,
      "aclIdentifiers" : null,
      "fields" : [ {
        "labelName" : "Autotrigger",
        "elementType" : "Hidden",
        "values" : "",
        "fieldId" : "auto_trigger",
        "fieldScript" : "CA account",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : true,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate authority",
        "elementType" : "Text box",
        "values" : "<%cert_authority%>",
        "fieldId" : "cert_auth",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR generation",
        "elementType" : "Radio button",
        "values" : "AppViewX,Upload CSR",
        "fieldId" : "csr_generation",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Please paste your CSR",
        "elementType" : "Multi-line with file upload",
        "values" : "",
        "fieldId" : "upload_csr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Fetch CSR parameters",
        "elementType" : "Button",
        "values" : "",
        "fieldId" : "button",
        "fieldScript" : "Fetch CSR details",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CA account",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "ca_account",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "renew_auto",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Start renewing",
        "elementType" : "Text box",
        "values" : "0",
        "fieldId" : "start_renew",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&renew_auto:Yes",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regenerate automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "regen_auto",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&renew_auto:No",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Start regenerating",
        "elementType" : "Text box",
        "values" : "0",
        "fieldId" : "start_regen",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&regen_auto:Yes",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Common name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "common_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "DNS (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "dns",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "Multiple SAN values should be separated by comma (,)",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "IP Address (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "ip_address",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "Multiple SAN values should be separated by comma (,)",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization unit",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_unit",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Locality",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "locality",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Validity (in years)",
        "elementType" : "Dropdown",
        "values" : "1,2,3,4,5",
        "fieldId" : "validity",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Challenge password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "challenge_pass",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Confirm password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "confirm_pass",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Hash function",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "hash_function",
        "fieldScript" : "Get key-type and bit length",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Key type - Bit length",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "key_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR parameters",
        "elementType" : "Tabular",
        "values" : "",
        "fieldId" : "csr_parameters",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null,
        "showDefaultView" : false
      }, {
        "labelName" : "CA account",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "ca_account_uploadcsr",
        "fieldScript" : "Fetch CA account",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "renew_auto_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Start renewing",
        "elementType" : "Text box",
        "values" : "0",
        "fieldId" : "start_renew_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR&renew_auto_uploadcsr:Yes",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regenerate automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "regen_auto_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR&renew_auto_uploadcsr:No",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Start regenerating",
        "elementType" : "Text box",
        "values" : "0",
        "fieldId" : "start_regen_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR&regen_auto_uploadcsr:Yes",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Common name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "cn",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "DNS (Subect alternative name)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "dns_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "IP Address (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "ip_address_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization unit",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_unit_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Locality",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "locality_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Validity (in years)",
        "elementType" : "Dropdown",
        "values" : "1,2,3,4,5",
        "fieldId" : "validity_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Hash function",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "hash_function_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Key type",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "key_type_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Bit length",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "bit_length_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR parameters",
        "elementType" : "Tabular",
        "values" : "",
        "fieldId" : "uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null,
        "showDefaultView" : false
      } ],
      "fieldScripts" : [ {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Cancel request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Discard request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Submit request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get CA account",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbApudWxsID0gTm9uZQp0cnVlID0gVHJ1ZQpmYWxzZSA9IEZhbHNlCgpsb2dnZXIgPSBsb2dnZXJfdXRpbC5nZXRfbG9nZ2VyKCdHZXQgQ2VydGlmaWNhdGUgcG9saWN5JykKCmRlZiBnZXRfY2FfYWNjb3VudCgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ1NlcnZlcic6CiAgICAgICAgY2F0ID0gJ3NlcnZlcicKICAgIGVsaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnQ2xpZW50JzoKICAgICAgICBjYXQgPSAnY2xpZW50JwogICAgZWxpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdDb2RlIFNpZ25pbmcnOgogICAgICAgIGNhdCA9ICdjb2RlU2lnbmluZycKICAgICAgICAKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhLXNldHRpbmdzLWdldGJ5Y2FuYW1lP2NlcnRpZmljYXRlQXV0aG9yaXR5PXt9JmNlcnRpZmljYXRlQ2F0ZWdvcnk9e30mY2VydGlmaWNhdGVHcm91cD17fT9nd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8JWNlcnRfYXV0aG9yaXR5JT4nLCBjYXQsICc8JWFzc2lnbl9ncm91cCU+JyxnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7InNlc3Npb25JZCI6ICI8JXNlc3Npb25JZCU+IiwgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIn0KCiAgICAjIHBheWxvYWQgPSB7InBheWxvYWQiOnsibG9nIjogVHJ1ZSwicGFzc3dvcmQiOiBiYXNlNjQuYjY0ZW5jb2RlKGZpbGVfcGFzc3dvcmQuZW5jb2RlKCkpLmRlY29kZSgpLCJ1dUlkIjogY2VydF9pZH19CiAgICAKICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgIyBsb2dnZXIuaW5mbygiPT09PT09PT09Q2VydGlmaWNhdGVTZWFyY2g9PT09PT09PT09IikKICAgICMgQVZYOjpMT0coIj09PT09PT09PUNlcnRpZmljYXRlU2VhcmNoPT09PT09PT09PSIpCiAgICAjIGxvZ2dlci5pbmZvKHJlc3BvbnNlLnRleHQpCiAgICAjIGxvZ2dlci5pbmZvKHJlc3BvbnNlLnJlYXNvbikKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpCiAgICBpZiBub3QgcmVzcG9uc2UuZ2V0KCdyZXNwb25zZScpOgogICAgICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6ICdObyBDQSBBY2NvdW50IGhhcyBiZWVuIGNvbmZpZ3VyZWQnfSkpCiAgICAKICAgIGNhX2xpc3QgPSBbXQogICAgZm9yIGNhIGluIHJlc3BvbnNlLmdldCgncmVzcG9uc2UnKToKICAgICAgICBjYV9saXN0LmFwcGVuZChjYS5nZXQoIm5hbWUiKSkKICAgIGxvZ2dlci5pbmZvKCctLS0+JytzdHIocmVzcG9uc2UpKQogICAgbG9nZ2VyLmluZm8oJz4+Pjw8PCcrc3RyKGNhX2xpc3QpKQogICAgcmV0dXJuIGNhX2xpc3QKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgJycnCiAgICBmZXRjaCB0aGUgZ2F0ZXdheSBrZXkgZnJvbSBhcHB2aWV3eCBjb25maWcgZmlsZQogICAgOnJldHVybjogYXBwdmlld3ggZ2F0ZXdheSBrZXkKICAgICcnJwogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICAjIGxvZ2dlci5pbmZvKCdQQVRIJykKICAgICMgbG9nZ2VyLmluZm8oYWJzX3BhdGgpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBwcm9wX2ZpbGUgPSBvcGVuKHByb3BfZmlsZV9wYXRoKQogICAgcHJvcF9maWxlX2xpbmVzID0gcHJvcF9maWxlLnJlYWRsaW5lcygpCiAgICBmb3IgbGluZSBpbiBwcm9wX2ZpbGVfbGluZXM6CiAgICAgICAgaWYgbGluZSBpcyBub3QgIlxuIiBhbmQgIkdBVEVXQVlfS0VZIiBpbiBsaW5lIG9yICJHQVRFV0FZX0JBU0VfVVJMIiBpbiBsaW5lOgogICAgICAgICAgICBjb25mX2NvbnRlbnRbbGluZS5zcGxpdCgiPSIpWzBdXSA9IGxpbmUuc3BsaXQoIj0iKVsxXS5yZXBsYWNlKCJcbiIsICIiKQogICAgcmV0dXJuIGNvbmZfY29udGVudFsnR0FURVdBWV9CQVNFX1VSTCddLCBjb25mX2NvbnRlbnRbJ0dBVEVXQVlfS0VZJ10KICAgIHByb3BfZmlsZS5jbG9zZSgpCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKCiAgICBjYV9hY2NvdW50ID0gZ2V0X2NhX2FjY291bnQoKQogICAgbG9nZ2VyLmluZm8oc3RyKGNhX2FjY291bnQpKyI8PDw8PCIpCiAgICBpZiBjYV9hY2NvdW50OgogICAgICAgIGxvZ2dlci5pbmZvKHN0cih0eXBlKGNhX2FjY291bnQpKSsiPDw8PDw8IikKICAgICAgICBkYXRhID0gW3siY2FfYWNjb3VudCI6dmFsfSBmb3IgdmFsIGluIGNhX2FjY291bnRdCiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyhkYXRhKSkKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyh7J2Vycm9yJzogJ05vIENBIEFjY291bnQgaGFzIGJlZW4gY29uZmlndXJlZCB3aXRoIHRoaXMgY2VydGlmaWNhdGUgYXV0aG9yaXR5J30pKQ==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "hash_function" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get key-type and bit length",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbAoKbnVsbCA9IE5vbmUKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQoKbG9nZ2VyID0gbG9nZ2VyX3V0aWwuZ2V0X2xvZ2dlcignR2V0IGtleS10eXBlIGFuZCBiaXQgbGVuZ3RoJykKCmRlZiBnZXRfa2V5X2JpdF9sZW5ndGgoKToKICAgICIiIgogICAgRnVuY3Rpb24gdG8gRmV0Y2ggdGhlIGNvbmZpZ3VyZWQgY2VydGlmaWNhdGUgZ3JvdXAKICAgIAogICAgOnJldHVybjogQ2VydGlmaWNhdGUgcG9saWN5CiAgICAiIiIKICAgIGtleSA9IHN0cigpCiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICBjd2QgPSBvcy5nZXRjd2QoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJTZXJ2ZXIiOgogICAgICAgIGNhdCA9ICJzZXJ2ZXIiCiAgICBlbGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJDbGllbnQiOgogICAgICAgIGNhdCA9ICJjbGllbnQiCiAgICBlbGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJDb2RlIFNpZ25pbmciOgogICAgICAgIGNhdCA9ICJjb2RlU2lnbmluZyIKICAgICAgICAKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWdldC1wb2xpY3ktYnktZ3JvdXBuYW1lP2NlcnRpZmljYXRlR3JvdXBOYW1lPXt9JmNlcnRpZmljYXRlQ2F0ZWdvcnk9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwnPCVhc3NpZ25fZ3JvdXAlPicsY2F0ICwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CgogICAgIyBwYXlsb2FkID0geyJwYXlsb2FkIjp7ImxvZyI6IFRydWUsInBhc3N3b3JkIjogYmFzZTY0LmI2NGVuY29kZShmaWxlX3Bhc3N3b3JkLmVuY29kZSgpKS5kZWNvZGUoKSwidXVJZCI6IGNlcnRfaWR9fQogICAgCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgICMgbG9nZ2VyLmluZm8oIj09PT09PT09PUNlcnRpZmljYXRlU2VhcmNoPT09PT09PT09PSIpCiAgICAjIEFWWDo6TE9HKCI9PT09PT09PT1DZXJ0aWZpY2F0ZVNlYXJjaD09PT09PT09PT0iKQogICAgIyBsb2dnZXIuaW5mbyhyZXNwb25zZS50ZXh0KQogICAgIyBsb2dnZXIuaW5mbyhyZXNwb25zZS5yZWFzb24pCiAgICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKQogICAgbG9nZ2VyLmluZm8oJy0tLT4nK3N0cihyZXNwb25zZSkpCiAgICAKICAgIHBvbGljeV9jYV9kZXRhaWxzID0gcmVzcG9uc2UuZ2V0KCJyZXNwb25zZSIpLmdldCgnY2VydGlmaWNhdGVQb2xpY3lDYUFjY291bnREZXRhaWxzJykKICAgIGhhc2hfYWxnbyA9W10KICAgIGtleV90eXBlX2JpdF9sZW4gPSBbXQogICAgZm9yIGNhX2RldGFpbHMgaW4gcG9saWN5X2NhX2RldGFpbHM6CiAgICAgICAgaWYgY2FfZGV0YWlsc1snY2VydGlmaWNhdGVBdXRob3JpdHknXSA9PSAnPCVjZXJ0X2F1dGhvcml0eSU+JzoKICAgICAgICAgICAgaWYgbGVuKGNhX2RldGFpbHNbJ2NhU2V0dGluZ3MnXSkgIT0gMDoKICAgICAgICAgICAgICAgIGNhX3NldHRpbmdzX3ByZXNlbnQgPSBUcnVlCiAgICAgICAgICAgICAgICBoYXNoX2FsZ28uZXh0ZW5kKGNhX2RldGFpbHNbJ3NoYVR5cGUnXSkKICAgICAgICAgICAgICAgIGNlcnRpZmljYXRlS2V5UGFyYW1zID0gY2FfZGV0YWlsc1snY2VydGlmaWNhdGVLZXlQYXJhbXMnXQogICAgICAgICAgICAgICAgY2VydF9rZXlfcGFyYW1zID0gY2VydGlmaWNhdGVLZXlQYXJhbXMuaXRlbXMoKQogICAgICAgICAgICAgICAgZm9yIGtleSx2YWx1ZXMgaW4gY2VydF9rZXlfcGFyYW1zOgogICAgICAgICAgICAgICAgICAgIGlmIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICAgICAgZm9yIGJpdF9sZW4gaW4gdmFsdWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5X3R5cGVfYml0X2xlbi5hcHBlbmQoa2V5ICsgJyAtICcgKyBiaXRfbGVuKQoKICAgIHJldHVybiBjYV9zZXR0aW5nc19wcmVzZW50LCBrZXlfdHlwZV9iaXRfbGVuLCBoYXNoX2FsZ28KCgpkZWYgZmV0Y2hfZ2F0ZXdheV9rZXkoKToKICAgICcnJwogICAgZmV0Y2ggdGhlIGdhdGV3YXkga2V5IGZyb20gYXBwdmlld3ggY29uZmlnIGZpbGUKICAgIDpyZXR1cm46IGFwcHZpZXd4IGdhdGV3YXkga2V5CiAgICAnJycKICAgIGNvbmZfY29udGVudCA9IHt9CiAgICBhYnNfcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKQogICAgIyBsb2dnZXIuaW5mbygnUEFUSCcpCiAgICAjIGxvZ2dlci5pbmZvKGFic19wYXRoKQogICAgcHJvcF9maWxlX3BhdGggPSBhYnNfcGF0aCArICIvLi4vcHJvcGVydGllcy9hcHB2aWV3eC5wcm9wZXJ0aWVzIgogICAgcHJvcF9maWxlID0gb3Blbihwcm9wX2ZpbGVfcGF0aCkKICAgIHByb3BfZmlsZV9saW5lcyA9IHByb3BfZmlsZS5yZWFkbGluZXMoKQogICAgZm9yIGxpbmUgaW4gcHJvcF9maWxlX2xpbmVzOgogICAgICAgIGlmIGxpbmUgaXMgbm90ICJcbiIgYW5kICJHQVRFV0FZX0tFWSIgaW4gbGluZSBvciAiR0FURVdBWV9CQVNFX1VSTCIgaW4gbGluZToKICAgICAgICAgICAgY29uZl9jb250ZW50W2xpbmUuc3BsaXQoIj0iKVswXV0gPSBsaW5lLnNwbGl0KCI9IilbMV0ucmVwbGFjZSgiXG4iLCAiIikKICAgIHJldHVybiBjb25mX2NvbnRlbnRbJ0dBVEVXQVlfQkFTRV9VUkwnXSwgY29uZl9jb250ZW50WydHQVRFV0FZX0tFWSddCiAgICBwcm9wX2ZpbGUuY2xvc2UoKQoKCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgoKICAgIGtleV9wcmVzZW50LCBrZXlfdHlwZV9iaXRfbGVuZ3RoLGhhc2hfYWxnb3JpdGhtID0gZ2V0X2tleV9iaXRfbGVuZ3RoKCkKCiAgICBpZiBrZXlfcHJlc2VudDoKICAgICAgICBpZiBrZXlfdHlwZV9iaXRfbGVuZ3RoOgogICAgICAgICAgICBkYXRhID0gW3sia2V5X3R5cGUiOnZhbH0gZm9yIHZhbCBpbiBrZXlfdHlwZV9iaXRfbGVuZ3RoXSArIFt7Imhhc2hfZnVuY3Rpb24iOnZhbH1mb3IgdmFsIGluIGhhc2hfYWxnb3JpdGhtXQogICAgICAgICAgICBjaGFsbGVuZ2VfcGFzcyA9ICI8Y2hhbGxlbmdlX3Bhc3M+IgogICAgICAgICAgICBjb25maXJtX3Bhc3MgPSAiPGNvbmZpcm1fcGFzcz4iCiAgICAgICAgICAgIGlmIGNvbmZpcm1fcGFzcyAhPSBjaGFsbGVuZ2VfcGFzczoKICAgICAgICAgICAgICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6IlBhc3N3b3JkIG1pc21hdGNoLiBLaW5kbHkgZW50ZXIgdGhlIENvbmZpcm0gcGFzc3dvcmQgc2FtZSBhcyBDaGFsbGVuZ2UgcGFzc3dvcmQiLCJkYXRhIjpbeyJjaGFsbGVuZ2VfcGFzcyI6IiJ9LHsiY29uZmlybV9wYXNzIjoiIn1dfSkpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQogICAgZWxzZToKICAgICAgICBwcmludChqc29uLmR1bXBzKHsnZXJyb3InOiAnQ0Egc2V0dGluZ3MgYXJlIG5vdCBjb25maWd1cmVkIGZvciB0aGUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5JytzdHIoJzwlY2VydF9hdXRob3JpdHklPicpLCJkYXRhIjpbeyJjaGFsbGVuZ2VfcGFzcyI6IiJ9LHsiY29uZmlybV9wYXNzIjoiIn1dfSkpCg==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "ca_account_uploadcsr" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch CA account",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbApudWxsID0gTm9uZQp0cnVlID0gVHJ1ZQpmYWxzZSA9IEZhbHNlCgpsb2dnZXIgPSBsb2dnZXJfdXRpbC5nZXRfbG9nZ2VyKCdHZXQgQ2VydGlmaWNhdGUgcG9saWN5JykKCmRlZiBnZXRfY2FfYWNjb3VudCgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ1NlcnZlcic6CiAgICAgICAgY2F0ID0gJ3NlcnZlcicKICAgIGVsaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnQ2xpZW50JzoKICAgICAgICBjYXQgPSAnY2xpZW50JwogICAgZWxpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdDb2RlIFNpZ25pbmcnOgogICAgICAgIGNhdCA9ICdjb2RlU2lnbmluZycKICAgICAgICAKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhLXNldHRpbmdzLWdldGJ5Y2FuYW1lP2NlcnRpZmljYXRlQXV0aG9yaXR5PXt9JmNlcnRpZmljYXRlQ2F0ZWdvcnk9e30mY2VydGlmaWNhdGVHcm91cD17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8JWNlcnRfYXV0aG9yaXR5JT4nLCBjYXQsICc8JWFzc2lnbl9ncm91cCU+JyxnYXRld2F5X2tleSkKCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CgogICAgIyBwYXlsb2FkID0geyJwYXlsb2FkIjp7ImxvZyI6IFRydWUsInBhc3N3b3JkIjogYmFzZTY0LmI2NGVuY29kZShmaWxlX3Bhc3N3b3JkLmVuY29kZSgpKS5kZWNvZGUoKSwidXVJZCI6IGNlcnRfaWR9fQogICAgCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgICMgbG9nZ2VyLmluZm8oIj09PT09PT09PUNlcnRpZmljYXRlU2VhcmNoPT09PT09PT09PSIpCiAgICAjIEFWWDo6TE9HKCI9PT09PT09PT1DZXJ0aWZpY2F0ZVNlYXJjaD09PT09PT09PT0iKQogICAgIyBsb2dnZXIuaW5mbyhyZXNwb25zZS50ZXh0KQogICAgIyBsb2dnZXIuaW5mbyhyZXNwb25zZS5yZWFzb24pCiAgICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKQoKICAgIGlmIG5vdCByZXNwb25zZS5nZXQoJ3Jlc3BvbnNlJyk6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyh7J2Vycm9yJzogJ05vIENBIEFjY291bnQgaGFzIGJlZW4gY29uZmlndXJlZCd9KSkKICAgIAogICAgY2FfbGlzdCA9IFtdCiAgICBmb3IgY2EgaW4gcmVzcG9uc2UuZ2V0KCdyZXNwb25zZScpOgogICAgICAgIGNhX2xpc3QuYXBwZW5kKGNhLmdldCgibmFtZSIpKQogICAgbG9nZ2VyLmluZm8oJ2dldF9jYV9hY2NvdW50IHJlc3BvbnNlIDonK3N0cihyZXNwb25zZSkpCiAgICBsb2dnZXIuaW5mbygnZ2V0X2NhX2FjY291bnQgQ0EgbGlzdCByZXR1cm5zIDogJytzdHIoY2FfbGlzdCkpCiAgICByZXR1cm4gY2FfbGlzdAoKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICAnJycKICAgIGZldGNoIHRoZSBnYXRld2F5IGtleSBmcm9tIGFwcHZpZXd4IGNvbmZpZyBmaWxlCiAgICA6cmV0dXJuOiBhcHB2aWV3eCBnYXRld2F5IGtleQogICAgJycnCiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKICAgICMgbG9nZ2VyLmluZm8oJ1BBVEgnKQogICAgIyBsb2dnZXIuaW5mbyhhYnNfcGF0aCkKICAgIHByb3BfZmlsZV9wYXRoID0gYWJzX3BhdGggKyAiLy4uL3Byb3BlcnRpZXMvYXBwdmlld3gucHJvcGVydGllcyIKICAgIHByb3BfZmlsZSA9IG9wZW4ocHJvcF9maWxlX3BhdGgpCiAgICBwcm9wX2ZpbGVfbGluZXMgPSBwcm9wX2ZpbGUucmVhZGxpbmVzKCkKICAgIGZvciBsaW5lIGluIHByb3BfZmlsZV9saW5lczoKICAgICAgICBpZiBsaW5lIGlzIG5vdCAiXG4iIGFuZCAiR0FURVdBWV9LRVkiIGluIGxpbmUgb3IgIkdBVEVXQVlfQkFTRV9VUkwiIGluIGxpbmU6CiAgICAgICAgICAgIGNvbmZfY29udGVudFtsaW5lLnNwbGl0KCI9IilbMF1dID0gbGluZS5zcGxpdCgiPSIpWzFdLnJlcGxhY2UoIlxuIiwgIiIpCiAgICByZXR1cm4gY29uZl9jb250ZW50WydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZfY29udGVudFsnR0FURVdBWV9LRVknXQogICAgcHJvcF9maWxlLmNsb3NlKCkKCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgoKICAgIGNhX2FjY291bnQgPSBnZXRfY2FfYWNjb3VudCgpCiAgICBsb2dnZXIuaW5mbygiQ0EgYWNjb3VudCBpbiBtYWluIGZ1bmMgOiIrc3RyKGNhX2FjY291bnQpKQogICAgaWYgY2FfYWNjb3VudDoKICAgICAgICBkYXRhID0gW3siY2FfYWNjb3VudF91cGxvYWRjc3IiOnZhbH0gZm9yIHZhbCBpbiBjYV9hY2NvdW50XQogICAgICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCiAgICBlbHNlOgogICAgICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6ICdObyBDQSBBY2NvdW50IGhhcyBiZWVuIGNvbmZpZ3VyZWQgd2l0aCB0aGlzIGNlcnRpZmljYXRlIGF1dGhvcml0eSd9KSk=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "button" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch CSR details",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQppbXBvcnQgYXBwdmlld3gKaW1wb3J0IGxvZ2dlcl91dGlsCnRydWUgPSBUcnVlCmZhbHNlID0gRmFsc2UKbnVsbCA9IE5vbmUKCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoJ0dldCBrZXktdHlwZSBhbmQgYml0IGxlbmd0aCcpCgoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfY3NyX3BhcmFtZXRlcnMoY3NyKToKICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSA9IGZldGNoX2dhdGV3YXlfa2V5KCkKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNzci11cGxvYWQ/Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5KQogICAgaGVhZGVycyA9IHsKICAgICAgICAic2Vzc2lvbklkIjogJzwlc2Vzc2lvbklkJT4nLAogICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgIkFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgfQogICAgcGF5bG9hZCA9IHsKICAgICAgICAicGF5bG9hZCIgOiB7CiAgICAgICAgICAgICJjc3JDb250ZW50IjogY3NyLAogICAgICAgICAgICAiY2VydGlmaWNhdGVBdXRob3JpdHkiOiAiIiwKICAgICAgICAgICAgImNhdGVnb3J5IjogIiIsCiAgICAgICAgICAgICJjb21tb25OYW1lIjogIiIKICAgICAgICB9CiAgICB9CiAgICBsb2dnZXIuaW5mbyhzdHIocGF5bG9hZCkpCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWpzb24uZHVtcHMocGF5bG9hZCksIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgbG9nZ2VyLmluZm8oJ2dldF9jc3JfcGFyYW1ldGVycyByZXNwb25zZSA6ICcrc3RyKHJlc3BvbnNlKSkKICAgIGRhdGEgPSB7fQogICAgZGF0YVsnY24nXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2NvbW1vbk5hbWUnKSBvciAiIgogICAgZGF0YVsnb3JnX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnb3JnYW5pemF0aW9uJykgb3IgIiIKICAgIGRhdGFbJ29yZ191bml0X3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnb3JnYW5pemF0aW9uVW5pdCcpIG9yICIiCiAgICBkYXRhWydsb2NhbGl0eV91cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2xvY2FsaXR5Jykgb3IgIiIKICAgIGRhdGFbJ2NvdW50cnlfdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdjb3VudHJ5Jykgb3IgIiIKICAgIGRhdGFbJ3N0YXRlX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnc3RhdGUnKSBvciAiIgogICAgZGF0YVsna2V5X3R5cGVfdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdrZXlUeXBlJykgb3IgIiIKICAgIGRhdGFbJ2hhc2hfZnVuY3Rpb25fdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdoYXNoRnVuY3Rpb24nKSBvciAiIgogICAgZGF0YVsnYml0X2xlbmd0aF91cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2JpdExlbmd0aCcpIG9yICIiCiAgICAjIGRhdGFbJ3ZhbGlkaXR5X3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgndmFsaWRpdHlJbkRheXMnKSBvciAiIgogICAgZGF0YVsnZG5zX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpLmdldCgnZE5TTmFtZXMnKSBpZiByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdlbmhhbmNlZFNBTlR5cGVzJykgZWxzZSAiIgogICAgZGF0YVsnaXBfYWRkcmVzc191cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2VuaGFuY2VkU0FOVHlwZXMnKS5nZXQoJ2lQQWRkcmVzc2VzJykgaWYgcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpIGVsc2UgIiIKICAgIGRhdGFbJ2VtYWlsX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnbWFpbEFkZHJlc3MnKSBvciAiIgogICAgcmV0dXJuIGRhdGEKCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGNzciA9IHInJyc8dXBsb2FkX2Nzcj4nJycKICAgIGNzciA9IGNzci5yZXBsYWNlKCJcXG4iLCJcbiIpCiAgICBjc3JfcGFyYW1ldGVycyA9IGdldF9jc3JfcGFyYW1ldGVycyhjc3IpCiAgICBwcmludChqc29uLmR1bXBzKFtjc3JfcGFyYW1ldGVyc10pKQo=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "auto_trigger" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "CA account",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbApudWxsID0gTm9uZQp0cnVlID0gVHJ1ZQpmYWxzZSA9IEZhbHNlCgpsb2dnZXIgPSBsb2dnZXJfdXRpbC5nZXRfbG9nZ2VyKCdHZXQgQ2VydGlmaWNhdGUgcG9saWN5JykKCmRlZiBnZXRfY2FfYWNjb3VudCgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGxvZ2dlci5pbmZvKCJJbnNpZGUgR2V0IENBIGFjY291bnQgOiIrc3RyKGNhdCkpCiAgICBpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdTZXJ2ZXInOgogICAgICAgIGNhdCA9ICdzZXJ2ZXInCiAgICBlbGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ0NsaWVudCc6CiAgICAgICAgY2F0ID0gJ2NsaWVudCcKICAgIGVsaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnQ29kZVNpZ25pbmcnOgogICAgICAgIGNhdCA9ICdDb2RlIFNpZ25pbmcnCiAgICAgICAgCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1jYS1zZXR0aW5ncy1nZXRieWNhbmFtZT9jZXJ0aWZpY2F0ZUF1dGhvcml0eT17fSZjZXJ0aWZpY2F0ZUNhdGVnb3J5PXt9JmNlcnRpZmljYXRlR3JvdXA9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwnPCVjZXJ0X2F1dGhvcml0eSU+JywgY2F0LCAnPCVhc3NpZ25fZ3JvdXAlPicsZ2F0ZXdheV9rZXkpCgogICAgaGVhZGVycyA9IHsic2Vzc2lvbklkIjogIjwlc2Vzc2lvbklkJT4iLCAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24ifQoKICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgbG9nZ2VyLmluZm8oImNlcnQtY2Etc2V0dGluZ3MtZ2V0YnljYW5hbWUgcmVzcG9uc2UgcmVhc29uIDogIisgc3RyKHJlc3BvbnNlLnJlYXNvbikpCiAgICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKQogICAgbG9nZ2VyLmluZm8oImdldF9jYV9hY2NvdW50IFJlYXNvbiA6IitzdHIocmVzcG9uc2UpKQogICAgCiAgICBpZiBub3QgcmVzcG9uc2UuZ2V0KCdyZXNwb25zZScpOgogICAgICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6ICdObyBDQSBBY2NvdW50IGhhcyBiZWVuIGNvbmZpZ3VyZWQnfSkpCiAgICAKICAgIGNhX2xpc3QgPSBbXQogICAgCiAgICBmb3IgY2VydF9wb2xpY3kgaW4gcmVzcG9uc2UuZ2V0KCJyZXNwb25zZSIpOgogICAgCWlmIGNlcnRfcG9saWN5LmdldCgiY2VydGlmaWNhdGVBdXRob3JpdHkiKSA9PSAiQXBwVmlld1giOgogICAgCSAgICBjYV9saXN0LmFwcGVuZChjZXJ0X3BvbGljeS5nZXQoIm5hbWUiKSkKICAgIAkgICAgCiAgICByZXR1cm4gY2FfbGlzdAoKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICAnJycKICAgIGZldGNoIHRoZSBnYXRld2F5IGtleSBmcm9tIGFwcHZpZXd4IGNvbmZpZyBmaWxlCiAgICA6cmV0dXJuOiBhcHB2aWV3eCBnYXRld2F5IGtleQogICAgJycnCiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBwcm9wX2ZpbGUgPSBvcGVuKHByb3BfZmlsZV9wYXRoKQogICAgcHJvcF9maWxlX2xpbmVzID0gcHJvcF9maWxlLnJlYWRsaW5lcygpCiAgICBmb3IgbGluZSBpbiBwcm9wX2ZpbGVfbGluZXM6CiAgICAgICAgaWYgbGluZSBpcyBub3QgIlxuIiBhbmQgIkdBVEVXQVlfS0VZIiBpbiBsaW5lIG9yICJHQVRFV0FZX0JBU0VfVVJMIiBpbiBsaW5lOgogICAgICAgICAgICBjb25mX2NvbnRlbnRbbGluZS5zcGxpdCgiPSIpWzBdXSA9IGxpbmUuc3BsaXQoIj0iKVsxXS5yZXBsYWNlKCJcbiIsICIiKQogICAgcmV0dXJuIGNvbmZfY29udGVudFsnR0FURVdBWV9CQVNFX1VSTCddLCBjb25mX2NvbnRlbnRbJ0dBVEVXQVlfS0VZJ10KICAgIHByb3BfZmlsZS5jbG9zZSgpCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKCiAgICBjYV9hY2NvdW50ID0gZ2V0X2NhX2FjY291bnQoKQogICAgaWYgY2FfYWNjb3VudDoKICAgICAgICBsb2dnZXIuaW5mbyhzdHIodHlwZShjYV9hY2NvdW50KSkpCiAgICAgICAgZGF0YSA9IFt7ImNhX2FjY291bnQiOnZhbH0gZm9yIHZhbCBpbiBjYV9hY2NvdW50XQogICAgICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCiAgICBlbHNlOgogICAgICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6ICdObyBDQSBBY2NvdW50IGhhcyBiZWVuIGNvbmZpZ3VyZWQgd2l0aCB0aGlzIGNlcnRpZmljYXRlIGF1dGhvcml0eSd9KSk=",
        "_id" : null,
        "_keywords" : null
      } ],
      "accessType" : null,
      "parentTemplate" : null,
      "hiddenTemplate" : false,
      "groupData" : {
        "treeData" : [ ],
        "listData" : [ ]
      },
      "workflow_template_name" : null,
      "_keywords" : null
    },
    "configuration" : {
      "aclIdentifiers" : [ "super access" ],
      "permission" : [ "super access:submit" ],
      "skipFlow" : false,
      "emailConfiguration" : {
        "emailNotificationEnabled" : false,
        "createdNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "reviewedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "submittedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "rejectedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        }
      },
      "multipleScenarioEnabled" : false,
      "maxScenarioCount" : 1,
      "enableSaveDraft" : true,
      "enableCancel" : true,
      "enableClose" : false,
      "enableBreakDown" : false,
      "labels" : {
        "submit" : "Submit",
        "reject" : "Back"
      },
      "enableAutoApprove" : false,
      "failoverState" : 2,
      "successState" : 1,
      "dynamicAuth" : null,
      "regexList" : null,
      "regexOperation" : null,
      "regexPattern" : null,
      "accessMode" : null
    },
    "data" : null,
    "api_list" : null
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "AppViewX create certificates",
    "subFlowID" : "ec69nhar",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "assign_group",
      "value" : "<%assign_group%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "assign_group",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "upload_csv",
      "value" : "<%upload_csv%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upload_csv",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_1",
    "task_name" : "Processing CSV data",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import json\nimport sys\nimport gridfs\nfrom bson import ObjectId\nimport csv\nimport requests\nimport time\n\nsys.path.append(AVX::DEPENDENCIES)\nsys.path.append(AVX::HELPER)\n\nimport appviewx\nimport logger_util\nlogger = logger_util.get_logger('CSV file upload')\n\nconn = appviewx.db_connection()\ndb = conn.appviewx\n\nfalse = False\ntrue = True\nnull = None\n\n\ndef write_file_to_appviewx(request_id, field_id, task_id, file_name):\n   \"\"\"\n   Method to write the given file to /var/tmp in AppViewX\n   :param db: Database connection object to AppViewX\n   :param request_id: RequestID of the uploaded file\n   :param field_id: FieldID of the uploaded file\n   :param task_id: TaskID of the uploaded file\n   :param file_name: Name of the uploaded file\n   :return: Path of the uploaded file\n   \"\"\"\n   with open(str(file_name), \"wb\") as obj_file:\n       uploaded_file_id = str(db.visualworkflow_request_uploaded_files.files.\\\n           find_one({\"metadata.requestId\": request_id, \\\n           \"metadata.fieldId\": field_id, \"metadata.taskId\": task_id},\\\n            {\"_id\": 1})[\"_id\"])\n       gfs = gridfs.GridFS(db, collection=\"visualworkflow_request_uploaded_files\")\n       content = gfs.get(ObjectId(uploaded_file_id)).read()\n       obj_file.write(content)\n   return str(file_name)\n\ndef get_file(uploaded_file):\n   \"\"\"\n   Method to get the metadata of the uploaded file from the database\n   :param db: Database connection object to AppViewX\n   :param uploaded_file: Name of the uploaded file\n   :return: Path of the uploaded file\n   \"\"\"\n   file_name = uploaded_file.get(\"fileName\", \"certificate_file.cer\")\n   request_id = uploaded_file[\"requestId\"]\n   field_id = uploaded_file[\"fieldId\"]\n   task_id = uploaded_file[\"taskId\"]\n   return write_file_to_appviewx(request_id, field_id, task_id, file_name)\n\n\ndef getCertificateGroup():\n    \"\"\"\n    Function to Fetch the configured certificate group\n    \n    :return (list): Certificate policy/policies\n    \"\"\"\n    key = str()\n    gateway_url, gateway_key = fetch_gateway_key()\n    cwd = os.getcwd()\n    url = \"{}avxapi/cert-group-search?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    payload = {\"payload\":{ \"startIndex\":0,\"displayLength\":100,\"searchText\":\"\",\"sortOrder\":\"asc\",\"sortColumn\":\"name\"}}\n    \n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    \n    if response.status_code != 200:\n        raise Exception(str(response.reason))\n    response = response.json()\n    logger.info('getCertificateGroup response : '+str(response))\n    response = response.get(\"response\").get(\"data\")\n    \n    groups = []\n    for cert_group in response:\n        groups.append(cert_group.get(\"name\"))\n    return groups\n\ndef fetch_gateway_key():\n    '''\n    fetch the gateway key from appviewx config file\n    :return: appviewx gateway key\n    '''\n    conf_content = {}\n    abs_path = os.path.dirname(os.path.abspath(__file__))\n    # logger.info('PATH')\n    # logger.info(abs_path)\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\n    prop_file = open(prop_file_path)\n    prop_file_lines = prop_file.readlines()\n    for line in prop_file_lines:\n        if line is not \"\\n\" and \"GATEWAY_KEY\" in line or \"GATEWAY_BASE_URL\" in line:\n            conf_content[line.split(\"=\")[0]] = line.split(\"=\")[1].replace(\"\\n\", \"\")\n    return conf_content['GATEWAY_BASE_URL'], conf_content['GATEWAY_KEY']\n    prop_file.close()\n\ndef cert_ca_connector_info(csr):\n    '''\n    The cert_ca_connector_info function is used to save the cert CA connector information\n    :param1 csr (dict): CSR parameters of a certiificate to be created\n    :return uuid (str): Returns the uuid of the certificate to be submitted\n    '''\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    san_select = []\n    \n    if csr[5]:\n        san_select.append(\"dNSNames\")\n        san_select.append(\"iPAddresses\")\n        san_select.insert(0,\"multiselect-all\")\n    if csr[4]:\n        san_select.append(\"dNSNames\")\n    dns_names = []\n    if csr[4]:\n        dns_names = csr[4].split(\"|\")\n        dns_names.append(csr[3])\n    \n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"AppViewX\",\n        \t\t\"isAutoRenewal\": false,\n        \t\t\"renewBefore\": \"0\",\n        \t\t\"autoRegenerateEnabled\": false,\n        \t\t\"regenerateBeforeInDays\": \"0\",\n        \t\t\"caSettingName\": csr[2],\n        \t\t\"certificateProfileName\": csr[1],\n        \t\t\"certificateType\": \"\",\n        \t\t\"name\": str(csr[0])+\" CA connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": csr[3],\n        \t\t\t\"subjectAlternativeNames\": san_select,\n        \t\t\t\"dNSNames\": ','.join(csr[4].split(\"|\")),\n        \t\t\t\"iPAddresses\": ','.join(csr[5].split(\"|\")),\n        \t\t\t\"organization\": csr[6] or \"\",\n        \t\t\t\"organizationUnit\": csr[7] or \"\",\n        \t\t\t\"locality\": csr[8] or \"\",\n        \t\t\t\"state\": csr[9] or \"\",\n        \t\t\t\"country\": csr[10] or \"\",\n        \t\t\t\"mailAddress\": csr[11] or \"\",\n        \t\t\t\"encryptedChallengePassword\": \"\",\n        \t\t\t\"hashFunction\": csr[13],\n        \t\t\t\"keyType\": csr[14],\n        \t\t\t\"bitLength\": csr[15],\n        \t\t\t\"postalCode\": \"\",\n        \t\t\t\"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": dns_names if csr[4] else [str(csr[3])],\n        \t\t\t\t\"iPAddresses\": csr[5].split(\"|\") if csr[5] else []\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(csr[12]),\n        \t\t\"vendorSpecificDetails\": {}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n    \n    logger.info('cert_ca_connector_info payload : ' +str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json().get(\"response\")\n    logger.info(response)\n    return response.get(\"uuid\")\n\ndef cert_submit_csr_hsv(uuid):\n    '''\n    The function is to submit the CSR\n    :param1 uuid (str) : UUID of the certificate to be submitted\n    :return response (dict): Certificate CSR content\n    NOTE : The UUID of the certificate changes after the issuance of the certificate\n    '''\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-submit-csr-hv?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    payload =  {\n        \"payload\":{\n            \"certificateUuid\":uuid,\n            \"comments\":\"\",\n            \"action\":\"Submit\",\n            \"submit\":true\n        }\n    }\n    \n    logger.info('cert_submit_csr_hsv payload :  '+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json()\n    logger.info(response)\n    return response\n\n\nif __name__ == \"__main__\":\n    \n    certificate_group = getCertificateGroup()\n    a = '<%upload_csv%>'\n    file_name = get_file('<%upload_csv%>')\n    c = 1\n    with open(file_name, 'r') as data_file:\n        reader = csv.reader(data_file, delimiter='\\n')\n        for row in reader:\n            if c == 1:\n                c+=1\n                continue\n            \n            csr = row[0].split(\",\")\n            uuid = cert_ca_connector_info(csr)\n            if uuid:\n                resp = cert_submit_csr_hsv(uuid)\n                time.sleep(3)\n\n            \n    AVX::OUTPUT({})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "createform_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "AppViewX create certificates",
    "subFlowID" : "ec69nhar",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "validity",
      "value" : "<%validity%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "validity",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "validity_uploadcsr",
      "value" : "<%validity_uploadcsr%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "validity_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "assign_group",
      "value" : "<%assign_group%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "assign_group",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "uploadcsr",
      "value" : "<%uploadcsr%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "csr_parameters",
      "value" : "<%csr_parameters%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_parameters",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_2",
    "task_name" : "Create certificate",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import sys\nimport json\nimport requests\nimport ast\nimport os\nfrom configobj import ConfigObj\n\nsys.path.insert(0,AVX::HELPER)\nsys.path.insert(0,AVX::DEPENDENCIES)\nimport appviewx\nimport logger_util\ntrue = True\nfalse = False\nnull = None\n\nimport base64\n\nlogger = logger_util.get_logger('Get key-type and bit length')\n\ndef encrypt_password(password):\n    '''\n    The function encrypt_password is to encrypt the plain text password to encrypted password\n    :param1 password (str): The password in plain text\n    :return encrypted_pass (str): The encrypted password\n    '''\n    if password:\n        enc_pass = base64.b64encode(password.encode(\"utf-8\"))\n        encrypted_pass = str(enc_pass,\"utf-8\")\n        return encrypted_pass\n    return ''\n\ndef fetch_gateway_key():\n    '''\n    The function is to get the gateway url and gateway key of the instance\n    :return : Returns the gateway URL and gateway key\n    '''\n    conf_content = {}\n    abs_path = os.path.dirname(os.path.abspath(__file__))\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\n    config = ConfigObj(prop_file_path)\n    return config['GATEWAY_BASE_URL'], config['GATEWAY_KEY']\n\n\ndef cert_ca_connector_info(csr):\n    '''\n    The cert_ca_connector_info function takes in csr parameters and gives the UUID for submission of certificate\n    params csr(dict): CSR parameters\n    return (str): Returns UUID of the new certificates\n    '''\n    \n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    dns_select = [\"dNSNames\"]\n    if csr.get(\"ip_address\"):\n        dns_select.append('iPAddresses')\n        dns_select.insert(0,\"multiselect-all\")\n        \n    san_dns = []\n    \n    if csr.get(\"dns\"):\n        san_dns.append(csr.get(\"common_name\"))\n        san_dns.extend(csr.get(\"dns\").split(\",\"))\n        \n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"AppViewX\",\n        \t\t\"isAutoRenewal\": true if csr.get(\"renew_auto\") == \"Yes\" else false,\n        \t\t\"renewBefore\":csr.get(\"start_renew\",\"0\") if csr.get(\"renew_auto\") == \"Yes\" else \"0\",\n        \t\t\"autoRegenerateEnabled\": true if csr.get(\"regen_auto\") == \"Yes\" else false,\n        \t\t\"regenerateBeforeInDays\":csr.get(\"start_regen\",\"0\") if csr.get(\"regen_auto\") == \"Yes\" else \"0\",\n        \t\t\"caSettingName\": csr.get(\"ca_account\"),\n        \t\t\"certificateProfileName\": str(\"<%certificate_profile%>\"),\n        \t\t\"certificateType\": \"\",\n        \t\t\"name\": str(\"<%cert_authority%>\")+\" CA connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": csr.get(\"common_name\"),\n        \t\t\t\"subjectAlternativeNames\": dns_select,\n        \t\t\t\"dNSNames\": csr.get(\"dns\") or \"\",\n        \t\t\t\"iPAddresses\": csr.get(\"ip_address\") or \"\",\n        \t\t\t\"organization\": csr.get(\"org\") or \"\",\n        \t\t\t\"organizationUnit\": csr.get(\"org_unit\") or \"\",\n        \t\t\t\"locality\": csr.get(\"locality\") or \"\",\n        \t\t\t\"state\": csr.get(\"state\") or \"\",\n        \t\t\t\"country\": csr.get(\"country\") or \"\",\n        \t\t\t\"mailAddress\": csr.get(\"email\") or \"\",\n        \t\t\t\"encryptedChallengePassword\": encrypt_password(csr.get(\"confirm_pass\")) or \"\",\n        \t\t\t\"hashFunction\": csr.get(\"hash_function\"),\n        \t\t\t\"keyType\": csr.get(\"key_type\").split('-')[0].strip(),\n        \t\t\t\"bitLength\": csr.get(\"key_type\").split('-')[1].strip(),\n        \t\t\t\"postalCode\": \"\",\n        \t\t\t\"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": san_dns,\n        \t\t\t\t\"iPAddresses\": csr.get(\"ip_address\").split(\",\") if csr.get(\"ip_address\") else [],\n        \t\t\t\t\"rfc822Names\" : san_dns if \"<%certificate_profile%>\" == \"Client\" else []\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(\"<%validity%>\"),\n        \t\t\"vendorSpecificDetails\": {}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n    \n    logger.info(\"Full Response : Cert CA connector info \" + str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    if response.status_code != 200:\n        logger.info(\"Full REASON : Cert CA connector info \" + str(response.reason))\n        raise Exception(str(response.reason))\n        \n    response = response.json().get(\"response\")\n    logger.info(response)\n    return response.get(\"uuid\")\n\ndef cert_ca_connector_info_from_upload_csr(csr):\n    '''\n    The cert_ca_connector_info_from_upload_csr function takes in csr parameters and gives the UUID for submission of certificate\n    params csr(dict): All the csr parameters are available\n    return uuid(str): Returns UUID of the new certificates\n    '''\n    \n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    dns_select = [\"dNSNames\"]\n    if csr.get(\"ip_address_uploadcsr\"):\n        dns_select.append('iPAddresses')\n        dns_select.insert(0,\"multiselect-all\")\n        \n    san_dns = []\n    \n    if csr.get(\"dns_uploadcsr\"):\n        san_dns.append(csr.get(\"cn\"))\n        san_dns.extend(csr.get(\"dns_uploadcsr\").split(\",\"))\n    \n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"AppViewX\",\n        \t\t\"isAutoRenewal\": false if csr.get(\"renew_auto_uploadcsr\") == \"No\" else true,\n        \t\t\"renewBefore\":csr.get(\"start_renew_uploadcsr\",\"0\") if csr.get(\"renew_auto_uploadcsr\") == \"Yes\" else \"0\",\n        \t\t\"autoRegenerateEnabled\": false if csr.get(\"regen_auto_uploadcsr\") == \"No\" else true,\n        \t\t\"regenerateBeforeInDays\":csr.get(\"start_renew_uploadcsr\",\"0\") if csr.get(\"renew_auto_uploadcsr\") == \"Yes\" else \"0\",\n        \t\t\"caSettingName\": csr.get(\"ca_account_uploadcsr\"),\n        \t\t\"certificateProfileName\": str(\"<%certificate_profile%>\"),\n        \t\t\"certificateType\": \"\",\n        \t\t\"name\": str(\"<%cert_authority%>\")+\" CA connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": csr.get(\"cn\"),\n        \t\t\t\"subjectAlternativeNames\": dns_select,\n        \t\t\t\"dNSNames\": san_dns,\n        \t\t\t\"iPAddresses\": csr.get(\"ip_address_uploadcsr\") or \"\",\n        \t\t\t\"organization\": csr.get(\"org_uploadcsr\") or \"\",\n        \t\t\t\"organizationUnit\": csr.get(\"org_unit_uploadcsr\") or \"\",\n        \t\t\t\"locality\": csr.get(\"locality_uploadcsr\") or \"\",\n        \t\t\t\"state\": csr.get(\"state_uploadcsr\") or \"\",\n        \t\t\t\"country\": csr.get(\"country_uploadcsr\") or \"\",\n        \t\t\t\"mailAddress\": csr.get(\"email_uploadcsr\") or \"\",\n        \t\t\t\"encryptedChallengePassword\": \"\",\n        \t\t\t\"hashFunction\": csr.get(\"hash_function_uploadcsr\"),\n        \t\t\t\"keyType\": csr.get(\"key_type_uploadcsr\"),\n        \t\t\t\"bitLength\": csr.get(\"bit_length_uploadcsr\"),\n        \t\t\t\"postalCode\": \"\",\n        \t\t\t\"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": san_dns,\n        \t\t\t\t\"iPAddresses\": csr.get(\"ip_address_uploadcsr\").split(\",\") if csr.get(\"ip_address_uploadcsr\") else [],\n        \t\t\t\t\"rfc822Names\" : san_dns if \"<%certificate_profile%>\" == \"Client\" else []\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(\"<%validity_uploadcsr%>\"),\n        \t\t\"vendorSpecificDetails\": {}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n    \n    logger.info(str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    if response.status_code != 200:\n        raise Exception(str(response.reason))\n    response = response.json().get(\"response\")\n    logger.info(response)\n    return response.get(\"uuid\")\n\ndef cert_submit_new_csr(uuid):\n    '''\n    The cert_submit_new_csr function takes in uuid for submission of certificate\n    params uuid: uuid for submission of certificate\n    return : Returns the response of the following API /cert-submit-csr-hv\n    '''\n    \n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-submit-csr-hv?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    payload =  {\n        \"payload\":{\n            \"certificateUuid\":uuid,\n            \"comments\":\"\",\n            \"action\":\"Submit\",\n            \"submit\":true\n        }\n    }\n    \n    logger.info('Payload of cert_submit_new_csr : '+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    if response.status_code != 200:\n        raise Exception(str(response.reason))\n    response = response.json()\n    logger.info(response)\n    return response\n\ndef check_strict_or_suggestive():\n    \"\"\"\n    Function to Fetch the configured certificate group\n    \n    :return: \"Strict\" or \"Suggestive\"\n    \"\"\"\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    if response.status_code != 200:\n        raise Exception(str(response.reason))\n    \n    response = response.json()\n    return response.get(\"response\").get(\"type\")\n\n\ndef strict_cert_ca_connector_info(csr):\n    '''\n    The strict_cert_ca_connector_info function takes in csr parameters and gives the UUID for submission of certificate, replaces the csr parameters from the policy\n    params csr(dict): All the csr parameters are available\n    return uuid(str): Returns UUID of the new certificates\n    '''\n    logger.info(\"---Strict---\")\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n\n    data = {}\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\n\n            data['org'] = csr_params.get(\"organization\")\n            data['org_unit'] = csr_params.get('organizationUnit')\n            data['locality'] = csr_params.get('locality')\n            data['state'] = csr_params.get('state')\n            data['country'] = csr_params.get('country')\n            data['email'] = ','.join(csr_params.get('mailAddress'))\n    \n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    san = [\"dNSNames\"]\n    \n    if csr.get(\"ip_address\"):\n        san.append(\"iPAddresses\")\n    if len(san)>1:\n        san.insert(0,\"multiselect-all\")\n        \n    san_dns = []\n    san_dns.append(csr.get(\"common_name\"))\n    \n    if csr.get(\"dns\"):\n        san_dns.extend(csr.get(\"dns\").split(\",\"))\n    \n    \n    payload = {\n        \"payload\" : {\n            \"csrGenerationSource\": \"appviewx\",\n            \"caConnectorInfo\": {\n                \"_id\": \"\",\n                \"certificateUuid\": \"\",\n                \"existingUuid\": \"\",\n                \"certificateAuthority\": \"AppViewX\",\n                \"isAutoRenewal\": true if csr.get(\"renew_auto\")==\"Yes\" else false,\n                \"renewBefore\":csr.get(\"start_renew\") if csr.get(\"renew_auto\") == \"Yes\" else \"0\",\n                \"autoRegenerateEnabled\": true if csr.get(\"regen_auto\")==\"Yes\" else false,\n                \"regenerateBeforeInDays\": csr.get(\"start_regen\") if csr.get(\"regen_auto\") == \"Yes\" else \"0\",\n                \"caSettingName\": csr.get(\"ca_account\"),\n                \"certificateProfileName\": str(\"<%certificate_profile%>\"),\n                \"certificateType\": \"\",\n                \"name\": str(\"<%cert_authority%>\")+\" CA connector\",\n                \"description\": \"\",\n                \"file\": \"\",\n                \"csrParameters\": {\n                    \"commonName\": csr.get(\"common_name\"),\n                    \"subjectAlternativeNames\": san,\n                    \"dNSNames\": san_dns,\n        \t\t\t\"iPAddresses\": csr.get(\"ip_address\") or \"\",\n                    \"organization\": data.get('org') if data.get(\"org\") else csr.get(\"org\"),\n                    \"organizationUnit\": data.get(\"org_unit\") if data.get(\"org_unit\") else csr.get(\"org_unit\"),\n                    \"locality\": data.get(\"locality\") if data.get(\"locality\") else csr.get(\"locality\"),\n                    \"state\": data.get(\"state\") if data.get(\"state\") else csr.get(\"state\"),\n                    \"country\": data.get(\"country\") if data.get(\"country\") else csr.get(\"country\"),\n                    \"mailAddress\": data.get(\"email\") if data.get(\"email\") else csr.get(\"email\"),\n                    \"encryptedChallengePassword\": encrypt_password(csr.get(\"confirm_pass\")) or \"\",\n                    \"hashFunction\": csr.get(\"hash_function\"),\n                    \"keyType\": csr.get(\"key_type\").split('-')[0].strip(),\n                    \"bitLength\": csr.get(\"key_type\").split('-')[1].strip(),\n                    \"postalCode\": \"\",\n                    \"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n                    \"enhancedSANTypes\": {\n                        \"dNSNames\": san_dns,\n                        \"iPAddresses\": csr.get(\"ip_address\").split(\",\") if csr.get(\"ip_address\") else [],\n                    }\n                },\n                \"certAttachments\": {\n                    \"userDefinedFileName\": \"\",\n                    \"comments\": \"\",\n                    \"fileName\": \"\",\n                    \"attachmentFile\": \"\"\n                },\n                \"certAttributes\": {\n                },\n                \"genericFields\": {\n                },\n                \"validityInDays\": 365*int(\"<%validity%>\"),\n                \"vendorSpecificDetails\": {}\n            },\n            \"certificateGroup\": {\n                \"name\": \"<%assign_group%>\"\n            },\n            \"fileIds\": []\n        }\n    }\n    \n    logger.info('CERT PAYLOAD : '+str(payload))\n    \n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    if response.status_code != 200:\n        raise Exception(str(response.reason))\n    response = response.json().get(\"response\")\n    logger.info(response)\n    return response.get(\"uuid\")\n\n\nif __name__ == \"__main__\":\n    \n    policy_type = check_strict_or_suggestive()\n    if '<%csr_parameters%>':\n        for csr in <%csr_parameters%>:\n            if policy_type == \"Strict\":\n                uuid = strict_cert_ca_connector_info(csr)\n                AVX::LOG(str(\"Since the certificate policy is Strict, the certificate policy CSR parameters have been updated for the following common name : \")+str(csr.get(\"common_name\")))\n            else:\n                uuid = cert_ca_connector_info(csr)\n            resp = cert_submit_new_csr(uuid)\n            \n    elif '<%uploadcsr%>':\n        for csr in <%uploadcsr%>:\n            uuid = cert_ca_connector_info_from_upload_csr(csr)\n            resp = cert_submit_new_csr(uuid)\n            \n            \n    AVX::OUTPUT({})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Join",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "flowIdsToJoin" : [ ],
    "_id" : null,
    "task_id" : "join_1",
    "task_name" : "Join",
    "task_type" : "join",
    "task_category" : "join",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "join",
    "group_name" : "General",
    "viewable_type" : "default"
  } ],
  "subFlowID" : "ec69nhar",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "decision_1" : [ ],
    "createform_1" : [ {
      "name" : "Start regenerating",
      "key" : "start_regen",
      "value" : "start_regen",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "0",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "start_regen",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Bit length",
      "key" : "bit_length_uploadcsr",
      "value" : "bit_length_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "bit_length_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Start regenerating",
      "key" : "start_regen_uploadcsr",
      "value" : "start_regen_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "0",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "start_regen_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Start renewing",
      "key" : "start_renew",
      "value" : "start_renew",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "0",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "start_renew",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "DNS (Subect alternative name)",
      "key" : "dns_uploadcsr",
      "value" : "dns_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "dns_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Renew automatically",
      "key" : "renew_auto",
      "value" : "renew_auto",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "renew_auto",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Locality",
      "key" : "locality",
      "value" : "locality",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "locality",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Regenerate automatically",
      "key" : "regen_auto_uploadcsr",
      "value" : "regen_auto_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "regen_auto_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Renew automatically",
      "key" : "renew_auto_uploadcsr",
      "value" : "renew_auto_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "renew_auto_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Validity (in years)",
      "key" : "validity",
      "value" : "validity",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "1,2,3,4,5",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "validity",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization",
      "key" : "org",
      "value" : "org",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Common name",
      "key" : "common_name",
      "value" : "common_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "common_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Start renewing",
      "key" : "start_renew_uploadcsr",
      "value" : "start_renew_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "0",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "start_renew_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Email address",
      "key" : "email",
      "value" : "email",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "email",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization unit",
      "key" : "org_unit",
      "value" : "org_unit",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org_unit",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Country",
      "key" : "country",
      "value" : "country",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "country",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Key type - Bit length",
      "key" : "key_type",
      "value" : "key_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "key_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR parameters",
      "key" : "csr_parameters",
      "value" : "csr_parameters",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_parameters",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR generation",
      "key" : "csr_generation",
      "value" : "csr_generation",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "AppViewX,Upload CSR",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_generation",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Email",
      "key" : "email_uploadcsr",
      "value" : "email_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "email_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Country",
      "key" : "country_uploadcsr",
      "value" : "country_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "country_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Common name",
      "key" : "cn",
      "value" : "cn",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cn",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization",
      "key" : "org_uploadcsr",
      "value" : "org_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Regenerate automatically",
      "key" : "regen_auto",
      "value" : "regen_auto",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "regen_auto",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Please paste your CSR",
      "key" : "upload_csr",
      "value" : "upload_csr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upload_csr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Locality",
      "key" : "locality_uploadcsr",
      "value" : "locality_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "locality_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "State",
      "key" : "state_uploadcsr",
      "value" : "state_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "state_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CA account",
      "key" : "ca_account_uploadcsr",
      "value" : "ca_account_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_account_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Hash function",
      "key" : "hash_function_uploadcsr",
      "value" : "hash_function_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "hash_function_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CA account",
      "key" : "ca_account",
      "value" : "ca_account",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_account",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "IP Address (Subject alternative names)",
      "key" : "ip_address",
      "value" : "ip_address",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ip_address",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Validity (in years)",
      "key" : "validity_uploadcsr",
      "value" : "validity_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "1,2,3,4,5",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "validity_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "DNS (Subject alternative names)",
      "key" : "dns",
      "value" : "dns",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "dns",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Hash function",
      "key" : "hash_function",
      "value" : "hash_function",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "hash_function",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "IP Address (Subject alternative names)",
      "key" : "ip_address_uploadcsr",
      "value" : "ip_address_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ip_address_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate authority",
      "key" : "cert_auth",
      "value" : "cert_auth",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "<%cert_authority%>",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_auth",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR parameters",
      "key" : "uploadcsr",
      "value" : "uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "State",
      "key" : "state",
      "value" : "state",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "state",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Key type",
      "key" : "key_type_uploadcsr",
      "value" : "key_type_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "key_type_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization unit",
      "key" : "org_unit_uploadcsr",
      "value" : "org_unit_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org_unit_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Challenge password",
      "key" : "challenge_pass",
      "value" : "challenge_pass",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "challenge_pass",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "script_1" : [ ],
    "script_2" : [ {
      "name" : "uuid_list",
      "key" : "uuid_list",
      "value" : "uuid_list",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "uuid_list",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "join_1" : [ ]
  },
  "type" : null,
  "level" : 2,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Renamed Push",
  "description" : "",
  "flowName" : "AppViewX create certificates",
  "workflowType" : "Default",
  "subFlowType" : "Flow",
  "parentSubFlowID" : "wkzaUXpL",
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop flow",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "Ig7MFeOt",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "CSV_file_upload_or_Manual_entry" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "Failed" : [ {
        "taskId" : "createform_3",
        "taskName" : null,
        "subflowId" : "Ig7MFeOt",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "form",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "AppViewX create certificates",
    "subFlowID" : "5QWfKkZF",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "create_cert",
      "value" : "<%create_cert%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "create_cert",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "If",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "iM5chT1L",
    "helpContent" : null,
    "rule" : {
      "not" : false,
      "condition" : "AND",
      "rules" : [ {
        "operator" : "==",
        "value" : "<%create_cert%>",
        "comparedValue" : "CSV file upload"
      } ]
    },
    "_id" : null,
    "task_id" : "decision_1",
    "task_name" : "If",
    "task_type" : "decision",
    "task_category" : "decision",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "decision",
    "group_name" : "General",
    "viewable_type" : "custom",
    "rule_name" : "CSV_file_upload_or_Manual_entry"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "DigiCert create certificates",
    "subFlowID" : "MRUKXP9F",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "assign_group",
      "value" : "<%assign_group%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "assign_group",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "upload_csv",
      "value" : "<%upload_csv%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upload_csv",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_1",
    "task_name" : "Processing CSV data",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import json\nimport sys\nimport gridfs\nfrom bson import ObjectId\nimport csv\nimport requests\nimport time\n\nsys.path.append(AVX::DEPENDENCIES)\nsys.path.append(AVX::HELPER)\n\nimport appviewx\nimport logger_util\nlogger = logger_util.get_logger('Cert Expiry Report')\n\nconn = appviewx.db_connection()\ndb = conn.appviewx\n\ntrue = True\nfalse = False\nnull = None\n\ndef write_file_to_appviewx(request_id, field_id, task_id, file_name):\n   \"\"\"\n   Method to write the given file to /var/tmp in AppViewX\n   :param db: Database connection object to AppViewX\n   :param request_id: RequestID of the uploaded file\n   :param field_id: FieldID of the uploaded file\n   :param task_id: TaskID of the uploaded file\n   :param file_name: Name of the uploaded file\n   :return: Path of the uploaded file\n   \"\"\"\n   with open(str(file_name), \"wb\") as obj_file:\n       uploaded_file_id = str(db.visualworkflow_request_uploaded_files.files.\\\n           find_one({\"metadata.requestId\": request_id, \\\n           \"metadata.fieldId\": field_id, \"metadata.taskId\": task_id},\\\n            {\"_id\": 1})[\"_id\"])\n       gfs = gridfs.GridFS(db, collection=\"visualworkflow_request_uploaded_files\")\n       content = gfs.get(ObjectId(uploaded_file_id)).read()\n       obj_file.write(content)\n   return str(file_name)\n\ndef get_file(uploaded_file):\n   \"\"\"\n   Method to get the metadata of the uploaded file from the database\n   :param db: Database connection object to AppViewX\n   :param uploaded_file: Name of the uploaded file\n   :return: Path of the uploaded file\n   \"\"\"\n   file_name = uploaded_file.get(\"fileName\", \"certificate_file.cer\")\n   request_id = uploaded_file[\"requestId\"]\n   field_id = uploaded_file[\"fieldId\"]\n   task_id = uploaded_file[\"taskId\"]\n   return write_file_to_appviewx(request_id, field_id, task_id, file_name)\n\n\ndef getCertificateGroup():\n    \"\"\"\n    Function to Fetch the configured certificate group\n    \n    :return: Certificate policy\n    \"\"\"\n    key = str()\n    gateway_url, gateway_key = fetch_gateway_key()\n    cwd = os.getcwd()\n    url = \"{}avxapi/cert-group-search?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n\n    # payload = {\"payload\":{\"log\": True,\"password\": base64.b64encode(file_password.encode()).decode(),\"uuId\": cert_id}}\n\n    payload = {\"payload\":{ \"startIndex\":0,\"displayLength\":100,\"searchText\":\"\",\"sortOrder\":\"asc\",\"sortColumn\":\"name\"}}\n    \n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    # logger.info(\"=========CertificateSearch==========\")\n    # AVX::LOG(\"=========CertificateSearch==========\")\n    # logger.info(response.text)\n    # logger.info(response.reason)\n    response = response.json()\n    logger.info('--->'+str(response))\n    # return type(response), type(response['response'])\n    response = response.get(\"response\").get(\"data\")\n    \n    groups = []\n    for cert_group in response:\n        groups.append(cert_group.get(\"name\"))\n    \n    return groups\n\ndef fetch_gateway_key():\n    '''\n    fetch the gateway key from appviewx config file\n    :return: appviewx gateway key\n    '''\n    conf_content = {}\n    abs_path = os.path.dirname(os.path.abspath(__file__))\n    # logger.info('PATH')\n    # logger.info(abs_path)\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\n    prop_file = open(prop_file_path)\n    prop_file_lines = prop_file.readlines()\n    for line in prop_file_lines:\n        if line is not \"\\n\" and \"GATEWAY_KEY\" in line or \"GATEWAY_BASE_URL\" in line:\n            conf_content[line.split(\"=\")[0]] = line.split(\"=\")[1].replace(\"\\n\", \"\")\n    return conf_content['GATEWAY_BASE_URL'], conf_content['GATEWAY_KEY']\n    prop_file.close()\n\n\ndef cert_ca_connector_info(csr):\n    '''\n    The cert_ca_connector_info function is used to save the cert CA connector information\n    :param1 csr (dict): CSR parameters of a certiificate to be created\n    :return uuid (str): Returns the uuid of the certificate to be submitted\n    '''\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    san = []\n    san_dns = []\n    \n    if csr[4]:\n        san.append(\"dNSNames\")\n        san_dns.extend(csr[4].split(\"|\"))\n    if csr[5]:\n        san.append(\"iPAddresses\")\n        # san.insert(\"multiselect-all\",0)\n    if not csr[5] and not csr[4]:\n        san = null\n    \n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"DigiCert\",\n        \t\t\"isAutoRenewal\": false,\n        \t\t\"renewBefore\":\"0\",\n        \t\t\"autoRegenerateEnabled\": false,\n    \t\t\t\"regenerateBeforeInDays\": \"0\",\n        \t\t\"caSettingName\": csr[0],\n        \t\t\"divisionId\": get_divisionId(\"<%assign_group%>\",csr[0],csr[1]),\n        \t    \n        \t\t\"certificateType\": csr[2],\n        \t\t\"name\": \"DigiCert \"+csr[2]+\" connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": csr[3],\n        \t\t\t\"subjectAlternativeNames\": san,\n        \t\t\t\"dNSNames\": csr[4],\n        \t\t\t\"iPAddresses\": csr[5],\n        \t\t\t\"organization\": csr[6],\n        \t\t\t\"organizationUnit\": csr[7],\n        \t\t\t\"streetAddress\":csr[8],\n        \t\t\t\"locality\": csr[9],\n        \t\t\t\"state\": csr[10],\n        \t\t\t\"country\": csr[11],\n        \t\t\t\"postalCode\": csr[12],\n        \t\t\t\"mailAddress\": csr[13],\n        \t\t\t\"encryptedChallengePassword\": csr[15],\n        \t\t\t\"hashFunction\": csr[16],\n        \t\t\t\"keyType\": csr[17],\n        \t\t\t\"bitLength\": csr[18],\n        \t\t\t\"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": san_dns,\n        \t\t\t\t\"iPAddresses\": csr[5].split(\",\") if csr[5] else []\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(csr[14]),\n        \t\t\"vendorSpecificDetails\": {\n        \t\t    \"orderId\": \"\",\n\t\t        \t\"serverType\": csr[19] or \"\",\n        \t\t\t\"caCertId\": csr[20] or \"\"\n        \t\t}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n    \n    logger.info(str(payload))\n    AVX::LOG(\"PAY--->\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    if response.status_code != 200:\n        AVX::LOG(\"The certificate with the common name \"+str(csr[3])+\" CSR submission has failed due to \"+str(response.reason))\n        return ''\n    response = response.json().get(\"response\")\n    logger.info(response)\n    return response.get(\"uuid\")\n\ndef cert_submit_csr_hsv(uuid):\n    '''\n    The function is to submit the CSR\n    :param1 uuid (str) : UUID of the certificate to be submitted\n    :return response (dict): Certificate CSR content\n    NOTE : The UUID of the certificate changes after the issuance of the certificate\n    '''\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-submit-csr-hv?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    payload =  {\n        \"payload\":{\n            \"certificateUuid\":uuid,\n            \"comments\":\"\",\n            \"action\":\"Submit\",\n            \"submit\":true\n        }\n    }\n    \n    logger.info('+++++++'+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json()\n    logger.info(response)\n    return response\n\ndef get_divisionId(group_name, ca_setting_name, ca_division):\n    '''\n    The function get_divisionId is to get the Division ID from Certificate Group,CA setting and CA division name\n    :param1 group_name (str): Certificate group\n    :param2 ca_setting_name (str): Certificate CA setting\n    :param3 ca_division (str): Certificate CA division\n    :return : Certificate CA division ID\n    '''\n    digicert_divisions = []\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-settings-getbycaname?certificateAuthority=DigiCert&certificateCategory=Server&certificateGroup={}&gwkey={}&gwsource=external\".format(\n    gateway_url, group_name, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json().get(\"response\")\n    for setting in response:\n        if setting['name'] == ca_setting_name:\n            cert_divisions = setting['rbacCertTypesHierarchy']['divisions']\n            for div in cert_divisions:\n                if div['name'] == ca_division:\n                    return div['id']\n                \n    return \"\"\n\n\nif __name__ == \"__main__\":\n    \n    certificate_group = getCertificateGroup()\n    AVX::LOG(\"CERT GROUP\")\n    AVX::LOG(str(certificate_group))\n    a = '<%upload_csv%>'\n    file_name = get_file('<%upload_csv%>')\n    c = 1\n    with open(file_name, 'r') as data_file:\n        reader = csv.reader(data_file, delimiter='\\n')\n        for row in reader:\n            if c == 1:\n                c+=1\n                continue\n            AVX::LOG(str(row))\n            AVX::LOG(str(type(row)))\n            AVX::LOG(str(len(row)))\n            csr = row[0].split(\",\")\n            uuid = cert_ca_connector_info(csr)\n            if uuid:\n                resp = cert_submit_csr_hsv(uuid)\n                time.sleep(3)\n    \n    AVX::OUTPUT({})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "createform_3",
        "taskName" : null,
        "subflowId" : "Ig7MFeOt",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "DigiCert create certificates",
    "subFlowID" : "MRUKXP9F",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "operation_type",
      "value" : "<%operation_type%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "operation_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "csr_uploadcsr",
      "value" : "<%csr_uploadcsr%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "csr_avx",
      "value" : "<%csr_avx%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_avx",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "assign_group",
      "value" : "<%assign_group%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "assign_group",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_2",
    "task_name" : "Create certificate",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import sys\nimport json\nimport requests\nimport ast\nimport os\nfrom configobj import ConfigObj\n\nsys.path.insert(0,AVX::HELPER)\nsys.path.insert(0,AVX::DEPENDENCIES)\nimport logger_util\n\ntrue = True\nfalse = False\nnull = None\n\nimport base64\ndivision_id =\"\"\nlogger = logger_util.get_logger(\"DigiCert Create Certificate\")\n\noperation_type = '<%operation_type%>'\n\ndef encrypt_pass(password):\n    '''\n    The function encrypt_password is to encrypt the plain text password to encrypted password\n    :param1 password (str): The password in plain text\n    :return encrypted_pass (str): The encrypted password\n    '''\n    \n    encrypted_pass = \"\"\n    \n    if password:\n    \tenc_pass = base64.b64encode(password.encode(\"utf-8\"))\n    \tencrypted_pass = str(enc_pass,\"utf-8\")\n    \n    return encrypted_pass\n\n\ndef fetch_gateway_key():\n    '''\n    The function is to get the gateway url and gateway key of the instance\n    '''\n    conf_content = {}\n    abs_path = os.path.dirname(os.path.abspath(__file__))\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\n    config = ConfigObj(prop_file_path)\n    return config['GATEWAY_BASE_URL'], config['GATEWAY_KEY']\n\n\ndef cert_ca_connector_info(csr):\n    '''\n    The cert_ca_connector_info function takes in csr parameters and gives the UUID for submission of certificate\n    params csr(dict): CSR parameters\n    return (str): Returns UUID of the new certificates\n    '''\n    \n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    san = []\n    san_dns = []\n    \n    if csr.get(\"dns\"):\n        san.append(\"multiselect-all\")\n        san.append(\"dNSNames\")\n        if operation_type == 'Create':\n            san_dns.append(csr.get(\"cert_cn\"))\n            # san_dns.append(',')\n        san_dns.extend(csr.get(\"dns\").split(\",\"))\n    if csr.get(\"ip_address\"):\n        san.append(\"iPAddresses\")\n    if not csr.get(\"ip_address\") and not csr.get(\"dns\"):\n        san = null\n    \n    certificateCategories = \"\"\n    if operation_type == 'Create':\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\n    else:\n        cert_profile = csr.get('cert_profile_regen')\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\n        \n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"DigiCert\",\n        \t\t\"isAutoRenewal\": false if csr.get(\"renew_automatically\") == \"No\" else true,\n        \t\t\"renewBefore\": csr.get(\"renew_before\",\"0\"),\n        \t\t\"autoRegenerateEnabled\": false if csr.get(\"regen_automatically\") == \"No\" else true,\n        \t\t\"regenerateBeforeInDays\": csr.get(\"regen_before\",\"0\"),\n        \t\t\"caSettingName\": csr.get(\"ca_account\") or \"\",\n        \t\t\"divisionId\": division_id or \"\",\n        \t    \n        \t\t\"certificateType\": csr.get(\"cert_type\") or \"\",\n        \t\t\"name\": \"DigiCert \"+csr.get(\"cert_type\")+\" connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": csr.get(\"cert_cn\"),\n        \t\t\t\"subjectAlternativeNames\": san,\n        \t\t\t\"dNSNames\": csr.get(\"dns\") or \"\",\n        \t\t\t\"iPAddresses\": csr.get(\"ip_address\") or \"\",\n        \t\t\t\"organization\": csr.get(\"org\") or \"\",\n        \t\t\t\"organizationUnit\": csr.get(\"org_unit\") or \"\",\n        \t\t\t\"streetAddress\":csr.get(\"org_address\") or \"\",\n        \t\t\t\"locality\": csr.get(\"city\") or \"\",\n        \t\t\t\"state\": csr.get(\"state\") or \"\",\n        \t\t\t\"country\": csr.get(\"country\") or \"\",\n        \t\t\t\"postalCode\": csr.get(\"zip_code\") or \"\",\n        \t\t\t\"mailAddress\": csr.get(\"email_address\") or \"\",\n        \t\t\t\"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\")) or \"\",\n        \t\t\t\"hashFunction\": csr.get(\"hash_function\"),\n        \t\t\t\"keyType\": csr.get(\"key_type_bit_len\").split('-')[0].strip(),\n        \t\t\t\"bitLength\": csr.get(\"key_type_bit_len\").split('-')[1].strip(),\n        \t\t\t\"certificateCategories\": certificateCategories,\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": san_dns,\n        \t\t\t\t\"iPAddresses\": csr.get(\"ip_address\").split(\",\") if csr.get(\"ip_address\") else []\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(csr.get(\"validity\")),\n        \t\t\"vendorSpecificDetails\": {\n        \t\t    \"orderId\": \"\",\n        \t\t\t\"caCertId\": csr.get(\"ca_cert_id\") or \"\",\n\t\t        \t\"serverType\": csr.get(\"server_type\") or \"\"\n        \t\t}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n    \n    logger.info(\"Save CA Connector info payload:\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    response = response.json().get(\"response\")\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    return response.get(\"uuid\")\n\n\ndef cert_ca_connector_info_from_upload_csr(csr):\n    '''\n    The cert_ca_connector_info_from_upload_csr function takes in csr parameters and gives the UUID for submission of certificate\n    params csr(dict): All the csr parameters are available\n    return uuid(str): Returns UUID of the new certificates\n    '''\n    \n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    san = []\n    san_dns = []\n    \n    if csr.get(\"dns_uploadcsr\"):\n        san.append(\"multiselect-all\")\n        san.append(\"dNSNames\")\n        if operation_type == 'Create':\n            san_dns.append(csr.get(\"cn_uploadcsr\"))\n            # san_dns.append(',')\n        san_dns.extend(csr.get(\"dns_uploadcsr\").split(\",\"))\n    if csr.get(\"ip_address_uploadcsr\"):\n        san.append(\"iPAddresses\")\n    if not csr.get(\"ip_address_uploadcsr\") and not csr.get(\"dns_uploadcsr\"):\n        san = null\n    \n    certificateCategories = \"\"\n    if operation_type == 'Create':\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\n    else:\n        cert_profile = csr.get('cert_profile_regen_uploadcsr')\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\n    \n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"DigiCert\",\n        \t\t\"isAutoRenewal\": false if csr.get(\"renew_uploadcsr\") == \"No\" else true,\n        \t\t\"renewBefore\": csr.get(\"renew_before_uploadcsr\",\"0\"),\n        \t\t\"autoRegenerateEnabled\": false if csr.get(\"regen_uploadcsr\") == \"No\" else true,\n        \t\t\"regenerateBeforeInDays\": csr.get(\"regen_before_uploadcsr\",\"0\"),\n        \t\t\"caSettingName\": csr.get(\"ca_account_uploadcsr\"),\n        \t\t\"divisionId\": division_id or \"\",\n        \t\t\"certificateType\": csr.get(\"cert_type_uploadcsr\"),\n        \t\t\"name\": \"DigiCert \"+csr.get(\"cert_type_uploadcsr\")+\" connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": csr.get(\"cn_uploadcsr\"),\n        \t\t\t\"subjectAlternativeNames\": san,\n        \t\t\t\"dNSNames\": csr.get(\"dns_uploadcsr\") or \"\",\n        \t\t\t\"iPAddresses\": csr.get(\"ip_address_uploadcsr\") or \"\",\n        \t\t\t\"organization\": csr.get(\"org_uploadcsr\") or \"\",\n        \t\t\t\"organizationUnit\": csr.get(\"org_unit_uploadcsr\") or \"\",\n        \t\t\t\"locality\": csr.get(\"city_uploadcsr\") or \"\",\n        \t\t\t\"state\": csr.get(\"state_uploadcsr\") or \"\",\n        \t\t\t\"country\": csr.get(\"country_uploadcsr\") or \"\",\n        \t\t\t\"mailAddress\": csr.get(\"email_uploadcsr\") or \"\",\n        \t\t\t\"encryptedChallengePassword\": \"\",#check challenge password\n        \t\t\t\"hashFunction\": csr.get(\"hash_uploadcsr\"),\n        \t\t\t\"keyType\": csr.get(\"key_uploadcsr\"),\n        \t\t\t\"bitLength\": csr.get(\"bit_uploadcsr\"),\n        \t\t\t\"postalCode\": csr.get(\"zip_uploadcsr\"),\n        \t\t\t\"certificateCategories\": certificateCategories,\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": san_dns,\n        \t\t\t\t\"iPAddresses\": csr.get(\"ip_address_uploadcsr\").split(\",\") if csr.get(\"ip_address_uploadcsr\") else []\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(csr.get(\"validity_uploadcsr\")),\n        \t\t\"vendorSpecificDetails\": {\n        \t\t\t\"orderId\": \"\",\n        \t\t\t\"caCertId\": \"\",\n        \t\t\t\"serverType\": csr.get(\"server_type_uploadcsr\")\n        \t\t}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n    \n    logger.info(\"Save CA Connector info payload:\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    logger.info(\"Save CA Connector info response:\"+str(response.json()))\n    response = response.json().get(\"response\")\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    return response.get(\"uuid\")\n\n\ndef cert_submit_new_csr(uuid):\n    '''\n    The cert_submit_new_csr function takes in uuid for submission of certificate\n    params uuid: uuid for submission of certificate\n    return : Returns the response of the following API /cert-submit-csr-hv\n    '''\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-submit-csr-hv?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    payload =  {\n        \"payload\":{\n            \"certificateUuid\":uuid,\n            \"comments\":\"\",\n            \"action\":\"Submit\",\n            \"submit\":true\n        }\n    }\n    \n    logger.info('Cert Submit CSR Payload'+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json()\n    logger.info(\"Cert Submit CSR response\"+str(response))\n    return response\n\n\ndef get_divisionId(group_name, ca_setting_name, ca_division):\n    '''\n    The function get_divisionId is to get the Division ID from Certificate Group,CA setting and CA division name\n    :param1 group_name (str): Certificate group\n    :param2 ca_setting_name (str): Certificate CA setting\n    :param3 ca_division (str): Certificate CA division\n    :return : Certificate CA division ID\n    '''\n    digicert_divisions = []\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-settings-getbycaname?certificateAuthority=DigiCert&certificateCategory=Server&certificateGroup={}&gwkey={}&gwsource=external\".format(\n    gateway_url, group_name, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json().get(\"response\")\n    for setting in response:\n        if setting['name'] == ca_setting_name:\n            cert_divisions = setting['rbacCertTypesHierarchy']['divisions']\n            for div in cert_divisions:\n                if div['name'] == ca_division:\n                    return div['id']\n                \n    return \"\"\n    \n\ndef trigger_regenerate_api(old_uuid, new_uuid):\n    '''\n    The function trigger_regenerate_api takes in the old_uuid and new_uuid and regenerates the Certificate\n    :param old_uuid(str): Old uuid\n    :param new_uuid(str): New uuid\n    :return : Returns True if the Regenerate is successful else returns False\n    '''\n    gateway_url, gateway_key = fetch_gateway_key()\n    url_submit_csr = \"{}avxapi/cert-lifecycle?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    payload_data = {\"payload\": {\"action\":\"Regenerate\",\"certificateUuid\":new_uuid,\"sourceUuid\":old_uuid,\"comments\":\"\"}}\n    logger.info(\"Regenerate payload:\"+str(payload_data))\n    headers = {\"sessionId\":'<%sessionId%>',\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"}\n    response = requests.post(url_submit_csr, headers = headers, data = json.dumps(payload_data), verify = False)\n    #submit_csr_response = json.loads(submit_csr_response.text)\n    logger.info(\"Trigger regenerate response\"+str(response))\n    if response.status_code == 200:\n        return True\n    else:\n        return False\n\n\ndef strict_cert_ca_connector_info(csr):\n    '''\n    The strict_cert_ca_connector_info function takes in csr parameters and gives the UUID for submission of certificate, replaces the csr parameters from the policy\n    params csr(dict): All the csr parameters are available\n    return uuid(str): Returns UUID of the new certificates\n    '''\n    logger.info(\"---Strict---\")\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n\n    data = {}\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\n\n            data['org'] = csr_params.get(\"organization\")\n            data['org_unit'] = csr_params.get('organizationUnit')\n            data['locality'] = csr_params.get('locality')\n            data['state'] = csr_params.get('state')\n            data['country'] = csr_params.get('country')\n            data['email'] = ','.join(csr_params.get('mailAddress'))\n            if cat == \"client\":\n                data['rfc822Names'] = csr_params.get('subjectAlternativeNames')\n    \n    \n    \n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    san = []\n    san_dns = []\n    \n    if csr.get(\"dns\"):\n        san.append(\"multiselect-all\")\n        san.append(\"dNSNames\")\n        if operation_type == 'Create':\n            san_dns.append(csr.get(\"cert_cn\"))\n            # san_dns.append(',')\n        san_dns.extend(csr.get(\"dns\").split(\",\"))\n    if csr.get(\"ip_address\"):\n        san.append(\"iPAddresses\")\n    if not csr.get(\"ip_address\") and not csr.get(\"dns\"):\n        san = null\n    \n    certificateCategories = \"\"\n    if operation_type == 'Create':\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\n    else:\n        cert_profile = csr.get('cert_profile_regen')\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\n    \n    \n    \n    payload = {\n        \"payload\" : {\n            \"csrGenerationSource\": \"appviewx\",\n            \"caConnectorInfo\": {\n                \"_id\": \"\",\n                \"certificateUuid\": \"\",\n                \"existingUuid\": \"\",\n                \"certificateAuthority\": \"DigiCert\",\n                \"isAutoRenewal\": false if csr.get(\"renew_automatically\") == \"No\" else true,\n        \t\t\"renewBefore\": csr.get(\"renew_before\",\"0\"),\n        \t\t\"autoRegenerateEnabled\": false if csr.get(\"regen_automatically\") == \"No\" else true,\n        \t\t\"regenerateBeforeInDays\": csr.get(\"regen_before\",\"0\"),\n                \"caSettingName\": csr.get(\"ca_account\") or \"\",\n                \"divisionId\": division_id or \"\",\n                \n                \"certificateType\": csr.get(\"cert_type\") or \"\",\n                \"name\": \"DigiCert \"+csr.get(\"cert_type\")+\" connector\",\n                \"description\": \"\",\n                \"file\": \"\",\n                \"csrParameters\": {\n                    \"commonName\": csr.get(\"cert_cn\"),\n                    \"subjectAlternativeNames\": san,\n                    \"dNSNames\": csr.get(\"dns\") or \"\",\n                    \"iPAddresses\": csr.get(\"ip_address\") or \"\",\n                    \"organization\": data.get('org') if data.get(\"org\") else csr.get(\"org\"),\n                    \"organizationUnit\": data.get(\"org_unit\") if data.get(\"org_unit\") else csr.get(\"org_unit\"),\n                    \"locality\": data.get(\"locality\") if data.get(\"locality\") else csr.get(\"locality\"),\n                    \"state\": data.get(\"state\") if data.get(\"state\") else csr.get(\"state\"),\n                    \"country\": data.get(\"country\") if data.get(\"country\") else csr.get(\"country\"),\n                    \"postalCode\": csr.get(\"zip_code\") or \"\",\n                    \"mailAddress\": data.get(\"email\") if data.get(\"email\") else csr.get(\"email\"),\n                    \"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\")) or \"\",\n                    \"hashFunction\": csr.get(\"hash_function\"),\n                    \"keyType\": csr.get(\"key_type_bit_len\").split('-')[0].strip(),\n                    \"bitLength\": csr.get(\"key_type_bit_len\").split('-')[1].strip(),\n                    \"certificateCategories\": certificateCategories,\n                    \"enhancedSANTypes\": {\n                        \"dNSNames\": san_dns,\n                        \"iPAddresses\": csr.get(\"ip_address\").split(\",\") if csr.get(\"ip_address\") else [],\n                        \"rfc822Names\": data.get(\"rfc822Names\") if data.get(\"rfc822Names\") else []\n                    }\n                },\n                \"certAttachments\": {\n                    \"userDefinedFileName\": \"\",\n                    \"comments\": \"\",\n                    \"fileName\": \"\",\n                    \"attachmentFile\": \"\"\n                },\n                \"certAttributes\": {\n                },\n                \"genericFields\": {\n                },\n                \"validityInDays\": 365*int(csr.get(\"validity\")),\n                \"vendorSpecificDetails\": {\n                    \"orderId\": \"\",\n                    \"caCertId\": csr.get(\"ca_cert_id\") or \"\",\n                    \"serverType\": csr.get(\"server_type\") or \"\"\n                }\n            },\n            \"certificateGroup\": {\n                \"name\": \"<%assign_group%>\"\n            },\n            \"fileIds\": []\n        }\n    }\n\n    logger.info(\"Save CA Connector info payload:\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json().get(\"response\")\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    return response.get(\"uuid\")\n\n\ndef check_strict_or_suggestive():\n    \"\"\"\n    Function to Fetch the configured certificate group\n    \n    :return: \"Strict\" or \"Suggestive\"\n    \"\"\"\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n\n    return response.get(\"response\").get(\"type\")\n\n\nif __name__ == \"__main__\":\n    uuid_list = []\n    status = True\n    policy_type = check_strict_or_suggestive()\n    if '<%csr_avx%>':\n        for csr in <%csr_avx%>:\n            division_id = get_divisionId(\"<%assign_group%>\", csr.get(\"ca_account\"), csr.get(\"ca_division\"))\n            if policy_type == \"Strict\":\n                new_uuid = strict_cert_ca_connector_info(csr)\n            else:\n                new_uuid = cert_ca_connector_info(csr)\n            if operation_type == 'Create':\n                status = cert_submit_new_csr(new_uuid)\n            else:\n                status = trigger_regenerate_api(csr.get('cert_uuid'),new_uuid)\n    elif '<%csr_uploadcsr%>':\n        for csr in <%csr_uploadcsr%>:\n            division_id = get_divisionId(\"<%assign_group%>\", csr.get(\"ca_account_uploadcsr\"), csr.get(\"ca_division_uploadcsr\"))\n            if policy_type == \"Strict\":\n                new_uuid = strict_cert_ca_connector_info(csr)\n            else:\n                new_uuid = cert_ca_connector_info(csr)\n            if operation_type == 'Create':\n                status = cert_submit_new_csr(new_uuid)\n            else:\n                status = trigger_regenerate_api(csr.get('cert_uuid'),new_uuid)\n    if status:\n        AVX::OUTPUT({\"uuid_list\":uuid_list})\n    else:\n        AVX::LOG(\"CSR Submission failed.\")\n        AVX::OUTPUT({})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Join",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "flowIdsToJoin" : [ ],
    "_id" : null,
    "task_id" : "join_1",
    "task_name" : "Join",
    "task_type" : "join",
    "task_category" : "join",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "join",
    "group_name" : "General",
    "viewable_type" : "default"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "Ig7MFeOt",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "Ig7MFeOt",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "operation_type",
      "value" : "<%operation_type%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "operation_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "common_name",
      "value" : "<%common_name%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "common_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "401" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Form",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "dynamicAuth" : null,
    "regexList" : null,
    "regexOperation" : null,
    "regexPattern" : null,
    "accessMode" : null,
    "proceedProcess" : "Submit",
    "breakdownProcess" : "Back",
    "cancelProcess" : "Cancel",
    "saveDraftProcess" : "Save Draft",
    "closeProcess" : "Exit",
    "enableSaveDraft" : false,
    "enableCancel" : true,
    "enableClose" : false,
    "enableAutoApprove" : null,
    "enableBreakDown" : false,
    "availableGlobalData" : null,
    "_id" : null,
    "task_id" : "createform_3",
    "task_name" : "DigiCert",
    "task_type" : "form",
    "task_category" : "form",
    "component_type" : "form",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "form",
    "group_name" : "User interface",
    "viewable_type" : "default",
    "aclIdentifiers" : null,
    "template" : {
      "name" : "DigiCert",
      "description" : null,
      "aclIdentifiers" : null,
      "fields" : [ {
        "labelName" : "Certificate Authority",
        "elementType" : "Text box",
        "values" : "<%cert_authority%>",
        "fieldId" : "ca",
        "fieldScript" : "Fetch Policy Details",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : true,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate profile",
        "elementType" : "Hidden",
        "values" : "<%certificate_profile%>",
        "fieldId" : "cert_profile",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate profile",
        "elementType" : "Hidden",
        "values" : "<%certificate_profile%>",
        "fieldId" : "certificate_profile_form",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Operation Type",
        "elementType" : "Hidden",
        "values" : "<%operation_type%>",
        "fieldId" : "op",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR Generation",
        "elementType" : "Radio button",
        "values" : "AppViewX,Upload CSR",
        "fieldId" : "csr_gen",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Fetch Certificate Details",
        "elementType" : "Button",
        "values" : "",
        "fieldId" : "fetch_certificate_details",
        "fieldScript" : "Fetch Certificate Details",
        "aclFilter" : "None",
        "dependsOn" : "op:Regenerate&csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Fetch Policy Details",
        "elementType" : "Button",
        "values" : "",
        "fieldId" : "fetch_policy_details",
        "fieldScript" : "Fetch CA Settings and policy details for Regenerate",
        "aclFilter" : "None",
        "dependsOn" : "op:Regenerate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CA Account",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "ca_account",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CA Account",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "ca_account_uploadcsr",
        "fieldScript" : "Fetch Policy Details Upload CSR",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Division",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "ca_division",
        "fieldScript" : "Fetch Digicert Divisions",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Division",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "ca_division_uploadcsr",
        "fieldScript" : "Fetch DigiCert Divisions Upload CSR",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate Type",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "cert_type",
        "fieldScript" : "Fetch Certificate Types",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "renew_automatically",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew Before",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "renew_before",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&renew_automatically:Yes",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regenerate automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "regen_automatically",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&renew_automatically:No",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regenerate Before",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "regen_before",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&regen_automatically:Yes",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew Automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "renew_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew Before",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "renew_before_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR&renew_uploadcsr:Yes",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regen Automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "regen_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR&renew_uploadcsr:No",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regen  Before",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "regen_before_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR&regen_uploadcsr:Yes",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Common Name",
        "elementType" : "Text box",
        "values" : "<%common_name%>",
        "fieldId" : "cert_cn",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Uuid",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "cert_uuid",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&op:Regenerate",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate Profile",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "cert_profile_regen",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&op:Regenerate",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "DNS (Subject alternative name)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "dns",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_profile:Server",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "IP address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "ip_address",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&certificate_profile_form:Server",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization unit",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_unit",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_address",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "City",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "city",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Zip code",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "zip_code",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email_address",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Validity (in years)",
        "elementType" : "Dropdown",
        "values" : "1,2,3",
        "fieldId" : "validity",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Challenge password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "challenge_pwd",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Confirm password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "confirm_pwd",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Hash Function",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "hash_function",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Key Type - Bit Length",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "key_type_bit_len",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CA certificate ID",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "ca_certificate_id",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "cert_type:Private SSL Multi Domain|cert_type:Private SSL Plus|cert_type:Private SSL Wildcard",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Server type",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "server_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR Parameters",
        "elementType" : "Tabular",
        "values" : "",
        "fieldId" : "csr_avx",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null,
        "showDefaultView" : false
      }, {
        "labelName" : "Certificate Type",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "cert_type_uploadcsr",
        "fieldScript" : "Fetch Cert type upload CSR",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Upload CSR",
        "elementType" : "Multi-line with file upload",
        "values" : "",
        "fieldId" : "upload_csr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Fetch CSR Parameters",
        "elementType" : "Button",
        "values" : "",
        "fieldId" : "fetch_csr_parameters",
        "fieldScript" : "Fetch CSR Parameters from uploaded CSR",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Common Name",
        "elementType" : "Text box",
        "values" : "<%common_name%>",
        "fieldId" : "cn_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Uuid",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "uuid_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR&op:Regenerate",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate Profile",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "cert_profile_regen_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "DNS (Subject alternative name)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "dns_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "IP Address (Subject alternative name)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "ip_address_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR&certificate_profile_form:Server",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization unit",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_unit_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_address_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "City",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "city_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Zip code",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "zip_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Validity (in years)",
        "elementType" : "Dropdown",
        "values" : "1,2,3",
        "fieldId" : "validity_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Challenge password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "challenge_pwd_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Confirm password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "confirm_pwd_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Hash function",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "hash_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Key type",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "key_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Bit length",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "bit_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Server type",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "server_type_uploadcsr",
        "fieldScript" : "Fetch server types for CSR upload",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR Parameters",
        "elementType" : "Tabular",
        "values" : "",
        "fieldId" : "csr_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null,
        "showDefaultView" : false
      } ],
      "fieldScripts" : [ {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Cancel request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Discard request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Submit request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "server_type_uploadcsr" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch server types for CSR upload",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQppbXBvcnQgYXBwdmlld3gKaW1wb3J0IGxvZ2dlcl91dGlsCnRydWUgPSBUcnVlCmZhbHNlID0gRmFsc2UKbnVsbCA9IE5vbmUKCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoJ1NlcnZlciB0eXBlcycpCgoKZ3JvdXBfbmFtZSA9ICI8JWFzc2lnbl9ncm91cCU+IgoKCgpkZWYgZmV0Y2hfZ2F0ZXdheV9rZXkoKToKICAgIGNvbmZfY29udGVudCA9IHt9CiAgICBhYnNfcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKQogICAgcHJvcF9maWxlX3BhdGggPSBhYnNfcGF0aCArICIvLi4vcHJvcGVydGllcy9hcHB2aWV3eC5wcm9wZXJ0aWVzIgogICAgY29uZmlnID0gQ29uZmlnT2JqKHByb3BfZmlsZV9wYXRoKQogICAgcmV0dXJuIGNvbmZpZ1snR0FURVdBWV9CQVNFX1VSTCddLCBjb25maWdbJ0dBVEVXQVlfS0VZJ10KCgpkZWYgZ2V0X2NhX3NwZWNpZmljX2ZpZWxkcygpOgogICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhc3BlY2lmaWMtZmllbGRzP2dyb3VwTmFtZT17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCBncm91cF9uYW1lLCBnYXRld2F5X2tleSkKICAgaGVhZGVycyA9IHsKICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgIkFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uIgogICB9CiAgIHBheWxvYWQgPSB7CiAgICAgICAicGF5bG9hZCIgOiB7CiAgICAgICAgICAgImNlcnRpZmljYXRlQXV0aG9yaXR5IjogIjwlY2VydF9hdXRob3JpdHklPiIsCiAgICAgICAgICAgImNhU2V0dGluZ3NOYW1lIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVUeXBlIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVDYXRlZ29yeSI6IiIsCiAgICAgICAgICAgImFjdGlvbiI6IlJlbmV3IgogICAgICAgfQogICB9CiAgIAogICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCBkYXRhID0ganNvbi5kdW1wcyhwYXlsb2FkKSwgdmVyaWZ5PUZhbHNlKQogICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKS5nZXQoInJlc3BvbnNlIikKICAgbG9nZ2VyLmluZm8oIlNlcnZlciBUeXBlczoiK3N0cihyZXNwb25zZSkpCiAgIHNlcnZlcl90eXBlcyA9IFtdCiAgIHZlbmRvclNwZWNpZmljRGV0YWlscyA9IHJlc3BvbnNlWyd2ZW5kb3JTcGVjaWZpY0RldGFpbHMnXQogICBmb3IgZGV0YWlscyBpbiB2ZW5kb3JTcGVjaWZpY0RldGFpbHM6CiAgICAgICBpZiBkZXRhaWxzWydpZCddID09ICdzZXJ2ZXJUeXBlQXR0cmlidXRlJzoKICAgICAgICAgICBmb3IgdmFsIGluIGRldGFpbHNbJ3ZhbHVlcyddOgogICAgICAgICAgICAgICBzZXJ2ZXJfdHlwZXMuYXBwZW5kKHZhbFsndmFsdWUnXSkKICAgcmV0dXJuIHNlcnZlcl90eXBlcwogICAKaWYgX19uYW1lX189PSJfX21haW5fXyI6CiAgICBzZXJ2ZXJfdHlwZXMgPSBnZXRfY2Ffc3BlY2lmaWNfZmllbGRzKCkKICAgIHByaW50KGpzb24uZHVtcHMoW3sic2VydmVyX3R5cGVfdXBsb2FkY3NyIjp2YWx9IGZvciB2YWwgaW4gc2VydmVyX3R5cGVzXSkpCiAgICAKICAgIAogICAg",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "ca_division_uploadcsr" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch DigiCert Divisions Upload CSR",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lKToKICAgIGRpZ2ljZXJ0X2RpdmlzaW9ucyA9IFtdCiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1jYS1zZXR0aW5ncy1nZXRieWNhbmFtZT9jZXJ0aWZpY2F0ZUF1dGhvcml0eT1EaWdpQ2VydCZjZXJ0aWZpY2F0ZUNhdGVnb3J5PVNlcnZlciZjZXJ0aWZpY2F0ZUdyb3VwPXt9Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoCiAgICBnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgZm9yIHNldHRpbmcgaW4gcmVzcG9uc2U6CiAgICAgICAgaWYgc2V0dGluZ1snbmFtZSddID09IGNhX3NldHRpbmdfbmFtZToKICAgICAgICAgICAgY2VydF9kaXZpc2lvbnMgPSBzZXR0aW5nWydyYmFjQ2VydFR5cGVzSGllcmFyY2h5J11bJ2RpdmlzaW9ucyddCiAgICAgICAgICAgIGZvciBkaXYgaW4gY2VydF9kaXZpc2lvbnM6CiAgICAgICAgICAgICAgICBkaWdpY2VydF9kaXZpc2lvbnMuYXBwZW5kKGRpdlsnbmFtZSddKQogICAgcmV0dXJuIGRpZ2ljZXJ0X2RpdmlzaW9ucwogICAgCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgZ3JvdXBfbmFtZSA9ICc8JWFzc2lnbl9ncm91cCU+JwogICAgY2Ffc2V0dGluZ19uYW1lID0gJzxjYV9hY2NvdW50X3VwbG9hZGNzcj4nCiAgICBjYV9kaXZpc2lvbnMgPSBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lKQogICAgZGF0YSA9IFt7ImNhX2RpdmlzaW9uX3VwbG9hZGNzciI6ZGl2fSBmb3IgZGl2IGluIGNhX2RpdmlzaW9uc10KICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCg==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "fetch_certificate_details" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Certificate Details",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQoKaW1wb3J0IGxvZ2dlcl91dGlsCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoIkNlcnQgUmVnZW5lcmF0ZSBPT0IgLSBVcGxvYWQgQ1NSIikKCgpkZWYgZmV0Y2hfZ2F0ZXdheV9rZXkoKToKICAgIGNvbmZfY29udGVudCA9IHt9CiAgICBhYnNfcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKQogICAgcHJvcF9maWxlX3BhdGggPSBhYnNfcGF0aCArICIvLi4vcHJvcGVydGllcy9hcHB2aWV3eC5wcm9wZXJ0aWVzIgogICAgY29uZmlnID0gQ29uZmlnT2JqKHByb3BfZmlsZV9wYXRoKQogICAgcmV0dXJuIGNvbmZpZ1snR0FURVdBWV9CQVNFX1VSTCddLCBjb25maWdbJ0dBVEVXQVlfS0VZJ10KCgpkZWYgZ2V0X3BvbGljeV9uYW1lKGdyb3VwX25hbWUpOgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtZ3JvdXAtZmV0Y2gtYnktbmFtZT9ncm91cE5hbWU9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJldHVybiByZXNwb25zZS5qc29uKCkuZ2V0KCJyZXNwb25zZSIpLmdldCgicG9saWN5TmFtZSIpCgoKZGVmIGdldF9jZXJ0X2RldGFpbHMoY2VydCk6CiAgICByZWdlbl9kYXRhID0ge30KICAgIHJlZ2VuX2RhdGFbJ2NhX2FjY291bnRfdXBsb2FkY3NyJ10gPSAiIgogICAgcmVnZW5fZGF0YVsnY2VydF90eXBlX3VwbG9hZGNzciddID0gIiIgICAgCiAgICB1dWlkID0gZ2V0X2NlcnRfdXVpZChjZXJ0KQogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtY2EtY29ubmVjdG9yaW5mby1nZXRieWNlcnR1dWlkP2NlcnRpZmljYXRlVXVpZD17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCB1dWlkLCBnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7InNlc3Npb25JZCI6Jzwlc2Vzc2lvbklkJT4nLCJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiJ9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmwsIGhlYWRlcnMgPSBoZWFkZXJzLCB2ZXJpZnkgPSBGYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgncmVzcG9uc2UnKQogICAgbG9nZ2VyLmluZm8oIlJlc3BvbnNlOiIrc3RyKHJlc3BvbnNlKSkKICAgIGNzcl9wYXJhbWV0ZXJzID0gcmVzcG9uc2UuZ2V0KCdjc3JQYXJhbWV0ZXJzJykKICAgIHJlZ2VuX2RhdGFbJ2NuX3VwbG9hZGNzciddID0gY3NyX3BhcmFtZXRlcnNbJ2NvbW1vbk5hbWUnXQogICAgcmVnZW5fZGF0YVsndXVpZF91cGxvYWRjc3InXSA9IHV1aWQKICAgIHJlZ2VuX2RhdGFbJ29yZ191cGxvYWRjc3InXSA9ICIiIGlmIGNzcl9wYXJhbWV0ZXJzWydvcmdhbml6YXRpb24nXSA9PSBOb25lIGVsc2UgY3NyX3BhcmFtZXRlcnNbJ29yZ2FuaXphdGlvbiddCiAgICByZWdlbl9kYXRhWydvcmdfdW5pdF91cGxvYWRjc3InXSA9ICIiIGlmIGNzcl9wYXJhbWV0ZXJzWydvcmdhbml6YXRpb25Vbml0J10gPT0gTm9uZSBlbHNlIGNzcl9wYXJhbWV0ZXJzWydvcmdhbml6YXRpb25Vbml0J10KICAgIHJlZ2VuX2RhdGFbJ29yZ19hZGRyZXNzX3VwbG9hZGNzciddID0gIiIgaWYgY3NyX3BhcmFtZXRlcnNbJ3N0cmVldEFkZHJlc3MnXSA9PSBOb25lIGVsc2UgY3NyX3BhcmFtZXRlcnNbJ3N0cmVldEFkZHJlc3MnXQogICAgcmVnZW5fZGF0YVsnY2l0eV91cGxvYWRjc3InXSA9ICIiIGlmIGNzcl9wYXJhbWV0ZXJzWydsb2NhbGl0eSddID09IE5vbmUgZWxzZSBjc3JfcGFyYW1ldGVyc1snbG9jYWxpdHknXQogICAgcmVnZW5fZGF0YVsnc3RhdGVfdXBsb2FkY3NyJ10gPSAiIiBpZiBjc3JfcGFyYW1ldGVyc1snc3RhdGUnXSA9PSBOb25lIGVsc2UgY3NyX3BhcmFtZXRlcnNbJ3N0YXRlJ10KICAgIHJlZ2VuX2RhdGFbJ2NvdW50cnlfdXBsb2FkY3NyJ10gPSAiIiBpZiBjc3JfcGFyYW1ldGVyc1snY291bnRyeSddID09IE5vbmUgZWxzZSBjc3JfcGFyYW1ldGVyc1snY291bnRyeSddCiAgICByZWdlbl9kYXRhWyd6aXBfdXBsb2FkY3NyJ10gPSAiIiBpZiBjc3JfcGFyYW1ldGVyc1sncG9zdGFsQ29kZSddID09IE5vbmUgZWxzZSBjc3JfcGFyYW1ldGVyc1sncG9zdGFsQ29kZSddCiAgICByZWdlbl9kYXRhWydlbWFpbF91cGxvYWRjc3InXSA9ICIiIGlmIGNzcl9wYXJhbWV0ZXJzWydtYWlsQWRkcmVzcyddID09IE5vbmUgZWxzZSBjc3JfcGFyYW1ldGVyc1snbWFpbEFkZHJlc3MnXQogICAgcmVnZW5fZGF0YVsnZG5zX3VwbG9hZGNzciddID0gIiIKICAgIHJlZ2VuX2RhdGFbJ2lwX2FkZHJlc3NfdXBsb2FkY3NyJ10gPSAiIgogICAgaWYgY3NyX3BhcmFtZXRlcnNbJ2VuaGFuY2VkU0FOVHlwZXMnXVsnZE5TTmFtZXMnXSAhPSBOb25lOgogICAgICAgIGZvciBkbnMgaW4gY3NyX3BhcmFtZXRlcnNbJ2VuaGFuY2VkU0FOVHlwZXMnXVsnZE5TTmFtZXMnXToKICAgICAgICAgICAgaWYgcmVnZW5fZGF0YVsnZG5zX3VwbG9hZGNzciddID09ICIiOgogICAgICAgICAgICAgICAgcmVnZW5fZGF0YVsnZG5zX3VwbG9hZGNzciddICs9IGRucwogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmVnZW5fZGF0YVsnZG5zX3VwbG9hZGNzciddID0gcmVnZW5fZGF0YVsnZG5zX3VwbG9hZGNzciddICsgJywnICsgZG5zCiAgICBpZiBjc3JfcGFyYW1ldGVyc1snZW5oYW5jZWRTQU5UeXBlcyddWydpUEFkZHJlc3NlcyddICE9IE5vbmUgOgogICAgICAgIGZvciBpcCBpbiBjc3JfcGFyYW1ldGVyc1snZW5oYW5jZWRTQU5UeXBlcyddWydpUEFkZHJlc3NlcyddOgogICAgICAgICAgICBpZiByZWdlbl9kYXRhWydpcF9hZGRyZXNzX3VwbG9hZGNzciddID09ICIiOgogICAgICAgICAgICAgICAgcmVnZW5fZGF0YVsnaXBfYWRkcmVzc191cGxvYWRjc3InXSArPSBzdHIoaXApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICByZWdlbl9kYXRhWydpcF9hZGRyZXNzX3VwbG9hZGNzciddID0gcmVnZW5fZGF0YVsnaXBfYWRkcmVzc191cGxvYWRjc3InXSArICcsJyArIHN0cihpcCkKCiAgICByZWdlbl9kYXRhWydjZXJ0X3Byb2ZpbGVfcmVnZW5fdXBsb2FkY3NyJ10gPSBjc3JfcGFyYW1ldGVyc1snY2VydGlmaWNhdGVDYXRlZ29yaWVzJ11bMF0KICAgIHJlZ2VuX2RhdGFbJ3JlbmV3X3VwbG9hZGNzciddID0gJ1llcycgaWYgcmVzcG9uc2UuZ2V0KCdpc0F1dG9SZW5ld2FsJykgZWxzZSAnTm8nCiAgICByZWdlbl9kYXRhWydyZWdlbl91cGxvYWRjc3InXSA9ICdZZXMnIGlmIHJlc3BvbnNlLmdldCgnYXV0b1JlZ2VuZXJhdGVFbmFibGVkJykgZWxzZSAnTm8nCiAgICByZWdlbl9kYXRhWydyZW5ld19iZWZvcmVfdXBsb2FkY3NyJ10gPSBpbnQocmVzcG9uc2UuZ2V0KCdyZW5ld0JlZm9yZScpKQogICAgcmVnZW5fZGF0YVsncmVnZW5fYmVmb3JlX3VwbG9hZGNzciddID0gaW50KHJlc3BvbnNlLmdldCgncmVnZW5lcmF0ZUJlZm9yZUluRGF5cycpKQogICAgcmVnZW5fZGF0YVsnY2FfZGl2aXNpb25fdXBsb2FkY3NyJ10gPSAiIgogICAgcmVnZW5fZGF0YVsndmFsaWRpdHlfdXBsb2FkY3NyJ10gPSAiIgogICAgcmVnZW5fZGF0YVsnY2hhbGxlbmdlX3B3ZF91cGxvYWRjc3InXSA9ICIiCiAgICByZWdlbl9kYXRhWydjb25maXJtX3B3ZF91cGxvYWRjc3InXSA9ICIiCiAgICByZWdlbl9kYXRhWydoYXNoX3VwbG9hZGNzciddID0gIiIKICAgIHJlZ2VuX2RhdGFbJ2tleV91cGxvYWRjc3InXSA9ICIiCiAgICByZWdlbl9kYXRhWydiaXRfdXBsb2FkY3NyJ10gPSAiIgogICAgcmVnZW5fZGF0YVsnc2VydmVyX3R5cGVfdXBsb2FkY3NyJ10gPSAiIgogICAgcmV0dXJuIHJlZ2VuX2RhdGEKICAgIAoKZGVmIGdldF9jZXJ0X3V1aWQoY2VydCk6CiAgICBjbl9zbiA9IGNlcnQuc3BsaXQoJ3wnKQogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtZmV0Y2gtdXVpZC1ieS1jbi1zZXJpYWwtbnVtYmVyP2d3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoCiAgICAgICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5KQogICAgaGVhZGVycyA9IHsKICAgICAgICAic2Vzc2lvbklkIjogJzwlc2Vzc2lvbklkJT4nLAogICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgIkFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgfQogICAgcGF5bG9hZCA9IHsicGF5bG9hZCI6IHsiY29tbW9uTmFtZSI6IGNuX3NuWzBdLCAic2VyaWFsTnVtYmVyIjogY25fc25bMV19fQogICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KAogICAgICAgIHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgZGF0YT1qc29uLmR1bXBzKHBheWxvYWQpLCB2ZXJpZnk9RmFsc2UpCiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgCiAgICAKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGdyb3VwX25hbWUgPSAnPCVhc3NpZ25fZ3JvdXAlPicKICAgIGNzcl91cGxvYWRjc3IgPSBbXQogICAgY2VydGlmaWNhdGVzID0gJzwlY2VydGlmaWNhdGVzJT4nCiAgICBjZXJ0aWZpY2F0ZXMgPSBjZXJ0aWZpY2F0ZXMuc3BsaXQoJywnKQogICAgZm9yIGNlcnQgaW4gY2VydGlmaWNhdGVzOgogICAgICAgIGNzcl91cGxvYWRjc3IuYXBwZW5kKGdldF9jZXJ0X2RldGFpbHMoY2VydCkpCiAgICBwcmludChqc29uLmR1bXBzKGNzcl91cGxvYWRjc3IpKQo=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "fetch_policy_details" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch CA Settings and policy details for Regenerate",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQoKaW1wb3J0IGxvZ2dlcl91dGlsCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoIkNlcnQgUmVnZW5lcmF0ZSBPT0IgLSBGZXRjaCBDQSBTZXR0aW5ncyBhbmQgcG9saWN5IGRldGFpbHMiKQoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfcG9saWN5X25hbWUoZ3JvdXBfbmFtZSk6CiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1ncm91cC1mZXRjaC1ieS1uYW1lP2dyb3VwTmFtZT17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCBncm91cF9uYW1lLCBnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7CiAgICAgICAgInNlc3Npb25JZCI6ICc8JXNlc3Npb25JZCU+JywKICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKS5nZXQoInJlc3BvbnNlIikuZ2V0KCJwb2xpY3lOYW1lIikKCgpkZWYgZ2V0X3BvbGljeV9kZXRhaWxzKHBvbGljeV9uYW1lKToKICAgIGNhX3NldHRpbmdzID0gW10KICAgIGhhc2hfYWxnbyA9IFtdCiAgICBrZXlfdHlwZV9iaXRfbGVuID0gW10KICAgIGNhX2RpdmlzaW9ucyA9IFtdCiAgICBjYV9zZXR0aW5nc19wcmVzZW50ID0gRmFsc2UKICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSA9IGZldGNoX2dhdGV3YXlfa2V5KCkKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LXBvbGljeS1nZXQtYnktbmFtZT9wb2xpY3lOYW1lPXt9Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoZ2F0ZXdheV91cmwsIHBvbGljeV9uYW1lLCBnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7CiAgICAgICAgInNlc3Npb25JZCI6ICc8JXNlc3Npb25JZCU+JywKICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgcG9saWN5X2RldGFpbHMgPSByZXNwb25zZS5qc29uKCkuZ2V0KCJyZXNwb25zZSIpCiAgICBwb2xpY3lfY2FfZGV0YWlscyA9IHBvbGljeV9kZXRhaWxzWydjZXJ0aWZpY2F0ZVBvbGljeUNhQWNjb3VudERldGFpbHMnXQogICAgZm9yIGNhX2RldGFpbHMgaW4gcG9saWN5X2NhX2RldGFpbHM6CiAgICAgICAgaWYgY2FfZGV0YWlsc1snY2VydGlmaWNhdGVBdXRob3JpdHknXSA9PSAnRGlnaUNlcnQnOgogICAgICAgICAgICBoYXNoX2FsZ28uZXh0ZW5kKGNhX2RldGFpbHNbJ3NoYVR5cGUnXSkKICAgICAgICAgICAgY2VydGlmaWNhdGVLZXlQYXJhbXMgPSBjYV9kZXRhaWxzWydjZXJ0aWZpY2F0ZUtleVBhcmFtcyddCiAgICAgICAgICAgIGNlcnRfa2V5X3BhcmFtcyA9IGNlcnRpZmljYXRlS2V5UGFyYW1zLml0ZW1zKCkKICAgICAgICAgICAgZm9yIGtleSx2YWx1ZXMgaW4gY2VydF9rZXlfcGFyYW1zOgogICAgICAgICAgICAgICAgaWYgdmFsdWVzOgogICAgICAgICAgICAgICAgICAgIGZvciBiaXRfbGVuIGluIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICAgICAga2V5X3R5cGVfYml0X2xlbi5hcHBlbmQoa2V5ICsgJyAtICcgKyBiaXRfbGVuKQogICAgICAgICAgICBmb3Igc2V0dGluZ3MgaW4gY2FfZGV0YWlsc1snY2FTZXR0aW5ncyddOgogICAgICAgICAgICAgICAgY2Ffc2V0dGluZ3MuYXBwZW5kKHN0cihzZXR0aW5nc1snbmFtZSddKSkKICAgICAgICAgICAgICAgIGZvciBkaXZpc2lvbnMgaW4gc2V0dGluZ3NbJ2RpdmlzaW9ucyddOgogICAgICAgICAgICAgICAgICAgIGNhX2RpdmlzaW9ucy5hcHBlbmQoc3RyKGRpdmlzaW9uc1snbmFtZSddKSkKICAgIHJldHVybiBjYV9zZXR0aW5ncywgY2FfZGl2aXNpb25zLCBoYXNoX2FsZ28sIGtleV90eXBlX2JpdF9sZW4KICAgIAoKZGVmIGdldF9jYV9zcGVjaWZpY19maWVsZHMoKToKICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICB1cmwgPSAie31hdnhhcGkvY2VydC1jYXNwZWNpZmljLWZpZWxkcz9ncm91cE5hbWU9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgIGhlYWRlcnMgPSB7CiAgICAgICAic2Vzc2lvbklkIjogJzwlc2Vzc2lvbklkJT4nLAogICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgfQogICBwYXlsb2FkID0gewogICAgICAgInBheWxvYWQiIDogewogICAgICAgICAgICJjZXJ0aWZpY2F0ZUF1dGhvcml0eSI6ICJEaWdpQ2VydCIsCiAgICAgICAgICAgImNhU2V0dGluZ3NOYW1lIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVUeXBlIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVDYXRlZ29yeSI6IiIsCiAgICAgICAgICAgImFjdGlvbiI6ICdTdWJtaXQnCiAgICAgICB9CiAgIH0KICAgCiAgIHJlc3BvbnNlID0gcmVxdWVzdHMucG9zdCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIGRhdGEgPSBqc29uLmR1bXBzKHBheWxvYWQpLCB2ZXJpZnk9RmFsc2UpCiAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICBzZXJ2ZXJfdHlwZXMgPSBbXQogICB2ZW5kb3JTcGVjaWZpY0RldGFpbHMgPSByZXNwb25zZVsndmVuZG9yU3BlY2lmaWNEZXRhaWxzJ10KICAgZm9yIGRldGFpbHMgaW4gdmVuZG9yU3BlY2lmaWNEZXRhaWxzOgogICAgICAgaWYgZGV0YWlsc1snaWQnXSA9PSAnc2VydmVyVHlwZUF0dHJpYnV0ZSc6CiAgICAgICAgICAgZm9yIHZhbCBpbiBkZXRhaWxzWyd2YWx1ZXMnXToKICAgICAgICAgICAgICAgc2VydmVyX3R5cGVzLmFwcGVuZCh2YWxbJ3ZhbHVlJ10pCiAgIHJldHVybiBzZXJ2ZXJfdHlwZXMKCgogICAgCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBncm91cF9uYW1lID0gJzwlYXNzaWduX2dyb3VwJT4nCiAgICBjc3JfZ2VuZXJhdGlvbl90eXBlID0gJzxjc3JfZ2VuPicKICAgIHBvbGljeV9uYW1lID0gZ2V0X3BvbGljeV9uYW1lKGdyb3VwX25hbWUpCiAgICBjYV9zZXR0aW5ncywgY2FfZGl2aXNpb25zLCBoYXNoX2FsZ28sIGtleV90eXBlX2JpdF9sZW4gPSBnZXRfcG9saWN5X2RldGFpbHMocG9saWN5X25hbWUpCiAgICBzZXJ2ZXJfdHlwZXMgPSBnZXRfY2Ffc3BlY2lmaWNfZmllbGRzKCkKICAgIGlmIGNzcl9nZW5lcmF0aW9uX3R5cGUgPT0gJ0FwcFZpZXdYJzoKICAgICAgICBkYXRhID0gW3siY2FfYWNjb3VudCI6IGFjY30gZm9yIGFjYyBpbiBjYV9zZXR0aW5nc10gKyBbeyJoYXNoX2Z1bmN0aW9uIjp2YWx9IGZvciB2YWwgaW4gaGFzaF9hbGdvXSArIFt7ImtleV90eXBlX2JpdF9sZW4iOiB2YWx9IGZvciB2YWwgaW4ga2V5X3R5cGVfYml0X2xlbl0gKyBbeyJzZXJ2ZXJfdHlwZSI6dmFsfSBmb3IgdmFsIGluIHNlcnZlcl90eXBlc10KICAgICAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQogICAgZWxzZToKICAgICAgICBkYXRhID0gW3siY2FfYWNjb3VudF91cGxvYWRjc3IiOiBhY2N9IGZvciBhY2MgaW4gY2Ffc2V0dGluZ3NdICsgW3sic2VydmVyX3R5cGVfdXBsb2FkY3NyIjp2YWx9IGZvciB2YWwgaW4gc2VydmVyX3R5cGVzXQogICAgICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCgo=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "fetch_csr_parameters" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch CSR Parameters from uploaded CSR",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQppbXBvcnQgbG9nZ2VyX3V0aWwKCnRydWUgPSBUcnVlCmZhbHNlID0gRmFsc2UKbnVsbCA9IE5vbmUKCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoJ0NlcnQgUmVnZW5lcmF0ZSBPT0IgLSBGZXRjaCBDU1IgUGFyYW1ldGVycyBmcm9tIHVwbG9hZGVkIENTUicpCgoKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKICAgIHByb3BfZmlsZV9wYXRoID0gYWJzX3BhdGggKyAiLy4uL3Byb3BlcnRpZXMvYXBwdmlld3gucHJvcGVydGllcyIKICAgIGNvbmZpZyA9IENvbmZpZ09iaihwcm9wX2ZpbGVfcGF0aCkKICAgIHJldHVybiBjb25maWdbJ0dBVEVXQVlfQkFTRV9VUkwnXSwgY29uZmlnWydHQVRFV0FZX0tFWSddCgoKZGVmIGdldF9jc3JfcGFyYW1ldGVycyhjc3IpOgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtY3NyLXVwbG9hZD8mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICBwYXlsb2FkID0gewogICAgICAgICJwYXlsb2FkIiA6IHsKICAgICAgICAgICAgImNzckNvbnRlbnQiOiBjc3IsCiAgICAgICAgICAgICJjZXJ0aWZpY2F0ZUF1dGhvcml0eSI6ICIiLAogICAgICAgICAgICAiY2F0ZWdvcnkiOiAiIiwKICAgICAgICAgICAgImNvbW1vbk5hbWUiOiAiIgogICAgICAgIH0KICAgIH0KICAgIGxvZ2dlci5pbmZvKCJVcGxvYWQgQ1NSIFBheWxvYWQ6IitzdHIocGF5bG9hZCkpCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWpzb24uZHVtcHMocGF5bG9hZCksIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgbG9nZ2VyLmluZm8oIlVwbG9hZCBDU1IgUmVzcG9uc2U6IitzdHIocmVzcG9uc2UpKQogICAgZGF0YSA9IHt9CiAgICBkYXRhWydjbl91cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2NvbW1vbk5hbWUnKQogICAgZGF0YVsnb3JnX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnb3JnYW5pemF0aW9uJykKICAgIGRhdGFbJ29yZ191bml0X3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnb3JnYW5pemF0aW9uVW5pdCcpCiAgICBkYXRhWydjaXR5X3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnbG9jYWxpdHknKQogICAgZGF0YVsnY291bnRyeV91cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2NvdW50cnknKQogICAgZGF0YVsnc3RhdGVfdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdzdGF0ZScpCiAgICBkYXRhWydrZXlfdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdrZXlUeXBlJykKICAgIGRhdGFbJ2hhc2hfdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdoYXNoRnVuY3Rpb24nKQogICAgZGF0YVsnYml0X3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnYml0TGVuZ3RoJykKICAgIGRhdGFbJ2VtYWlsX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnbWFpbEFkZHJlc3MnKQogICAgZGF0YVsnZG5zX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpLmdldCgnZE5TTmFtZXMnKSBpZiByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdlbmhhbmNlZFNBTlR5cGVzJykgZWxzZSBbXQogICAgZGF0YVsnaXBfYWRkcmVzc191cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2VuaGFuY2VkU0FOVHlwZXMnKS5nZXQoJ2lQQWRkcmVzc2VzJykgaWYgcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpIGVsc2UgW10KICAgIHJldHVybiBkYXRhCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGNzciA9IHInJyc8dXBsb2FkX2Nzcj4nJycKICAgIGNzciA9IGNzci5yZXBsYWNlKCJcXG4iLCJcbiIpCiAgICBjc3JfcGFyYW1ldGVycyA9IGdldF9jc3JfcGFyYW1ldGVycyhjc3IpCiAgICBwcmludChqc29uLmR1bXBzKFtjc3JfcGFyYW1ldGVyc10pKQogICAg",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "ca_account_uploadcsr" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Policy Details Upload CSR",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfcG9saWN5X25hbWUoZ3JvdXBfbmFtZSk6CiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1ncm91cC1mZXRjaC1ieS1uYW1lP2dyb3VwTmFtZT17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCBncm91cF9uYW1lLCBnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7CiAgICAgICAgInNlc3Npb25JZCI6ICc8JXNlc3Npb25JZCU+JywKICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKS5nZXQoInJlc3BvbnNlIikuZ2V0KCJwb2xpY3lOYW1lIikKCgpkZWYgZ2V0X3BvbGljeV9kZXRhaWxzKHBvbGljeV9uYW1lKToKICAgIGNhX3NldHRpbmdzID0gW10KICAgIGhhc2hfYWxnbyA9IFtdCiAgICBrZXlfdHlwZV9iaXRfbGVuID0gW10KICAgIGNhX2RpdmlzaW9ucyA9IFtdCiAgICBjYV9zZXR0aW5nc19wcmVzZW50ID0gRmFsc2UKICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSA9IGZldGNoX2dhdGV3YXlfa2V5KCkKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LXBvbGljeS1nZXQtYnktbmFtZT9wb2xpY3lOYW1lPXt9Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoZ2F0ZXdheV91cmwsIHBvbGljeV9uYW1lLCBnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7CiAgICAgICAgInNlc3Npb25JZCI6ICc8JXNlc3Npb25JZCU+JywKICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgcG9saWN5X2RldGFpbHMgPSByZXNwb25zZS5qc29uKCkuZ2V0KCJyZXNwb25zZSIpCiAgICBwb2xpY3lfY2FfZGV0YWlscyA9IHBvbGljeV9kZXRhaWxzWydjZXJ0aWZpY2F0ZVBvbGljeUNhQWNjb3VudERldGFpbHMnXQogICAgZm9yIGNhX2RldGFpbHMgaW4gcG9saWN5X2NhX2RldGFpbHM6CiAgICAgICAgaWYgY2FfZGV0YWlsc1snY2VydGlmaWNhdGVBdXRob3JpdHknXSA9PSAnRGlnaUNlcnQnOgogICAgICAgICAgICBoYXNoX2FsZ28uZXh0ZW5kKGNhX2RldGFpbHNbJ3NoYVR5cGUnXSkKICAgICAgICAgICAgY2VydGlmaWNhdGVLZXlQYXJhbXMgPSBjYV9kZXRhaWxzWydjZXJ0aWZpY2F0ZUtleVBhcmFtcyddCiAgICAgICAgICAgIGNlcnRfa2V5X3BhcmFtcyA9IGNlcnRpZmljYXRlS2V5UGFyYW1zLml0ZW1zKCkKICAgICAgICAgICAgZm9yIGtleSx2YWx1ZXMgaW4gY2VydF9rZXlfcGFyYW1zOgogICAgICAgICAgICAgICAgaWYgdmFsdWVzOgogICAgICAgICAgICAgICAgICAgIGZvciBiaXRfbGVuIGluIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICAgICAga2V5X3R5cGVfYml0X2xlbi5hcHBlbmQoa2V5ICsgJyAtICcgKyBiaXRfbGVuKQogICAgICAgICAgICBmb3Igc2V0dGluZ3MgaW4gY2FfZGV0YWlsc1snY2FTZXR0aW5ncyddOgogICAgICAgICAgICAgICAgY2Ffc2V0dGluZ3MuYXBwZW5kKHN0cihzZXR0aW5nc1snbmFtZSddKSkKICAgICAgICAgICAgICAgIGZvciBkaXZpc2lvbnMgaW4gc2V0dGluZ3NbJ2RpdmlzaW9ucyddOgogICAgICAgICAgICAgICAgICAgIGNhX2RpdmlzaW9ucy5hcHBlbmQoc3RyKGRpdmlzaW9uc1snbmFtZSddKSkKICAgIHJldHVybiBjYV9zZXR0aW5ncywgY2FfZGl2aXNpb25zLCBoYXNoX2FsZ28sIGtleV90eXBlX2JpdF9sZW4KICAgIAoKZGVmIGdldF9jYV9zcGVjaWZpY19maWVsZHMoKToKICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICB1cmwgPSAie31hdnhhcGkvY2VydC1jYXNwZWNpZmljLWZpZWxkcz9ncm91cE5hbWU9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgIGhlYWRlcnMgPSB7CiAgICAgICAic2Vzc2lvbklkIjogJzwlc2Vzc2lvbklkJT4nLAogICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgfQogICBwYXlsb2FkID0gewogICAgICAgInBheWxvYWQiIDogewogICAgICAgICAgICJjZXJ0aWZpY2F0ZUF1dGhvcml0eSI6ICJEaWdpQ2VydCIsCiAgICAgICAgICAgImNhU2V0dGluZ3NOYW1lIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVUeXBlIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVDYXRlZ29yeSI6IiIsCiAgICAgICAgICAgImFjdGlvbiI6IlN1Ym1pdCIKICAgICAgIH0KICAgfQogICAKICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgZGF0YSA9IGpzb24uZHVtcHMocGF5bG9hZCksIHZlcmlmeT1GYWxzZSkKICAgcmVzcG9uc2UgPSByZXNwb25zZS5qc29uKCkuZ2V0KCJyZXNwb25zZSIpCiAgIGxvZ2dlci5pbmZvKCJTZXJ2ZXIgVHlwZXM6IitzdHIocmVzcG9uc2UpKQogICBzZXJ2ZXJfdHlwZXMgPSBbXQogICB2ZW5kb3JTcGVjaWZpY0RldGFpbHMgPSByZXNwb25zZVsndmVuZG9yU3BlY2lmaWNEZXRhaWxzJ10KICAgZm9yIGRldGFpbHMgaW4gdmVuZG9yU3BlY2lmaWNEZXRhaWxzOgogICAgICAgaWYgZGV0YWlsc1snaWQnXSA9PSAnc2VydmVyVHlwZUF0dHJpYnV0ZSc6CiAgICAgICAgICAgZm9yIHZhbCBpbiBkZXRhaWxzWyd2YWx1ZXMnXToKICAgICAgICAgICAgICAgc2VydmVyX3R5cGVzLmFwcGVuZCh2YWxbJ3ZhbHVlJ10pCiAgIHJldHVybiBzZXJ2ZXJfdHlwZXMKCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgZ3JvdXBfbmFtZSA9ICdEZWZhdWx0JwogICAgcG9saWN5X25hbWUgPSBnZXRfcG9saWN5X25hbWUoZ3JvdXBfbmFtZSkKICAgIGNhX3NldHRpbmdzLCBjYV9kaXZpc2lvbnMsIGhhc2hfYWxnbywga2V5X3R5cGVfYml0X2xlbiA9IGdldF9wb2xpY3lfZGV0YWlscyhwb2xpY3lfbmFtZSkKICAgIHNlcnZlcl90eXBlcyA9IGdldF9jYV9zcGVjaWZpY19maWVsZHMoKQogICAgZGF0YSA9IFt7ImNhX2FjY291bnRfdXBsb2FkY3NyIjogYWNjfSBmb3IgYWNjIGluIGNhX3NldHRpbmdzXSArIFt7InNlcnZlcl90eXBlX3VwbG9hZGNzciI6dmFsfSBmb3IgdmFsIGluIHNlcnZlcl90eXBlc10KICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCg==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "ca" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Policy Details",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "ca_division" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Digicert Divisions",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lKToKICAgIGRpZ2ljZXJ0X2RpdmlzaW9ucyA9IFtdCiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1jYS1zZXR0aW5ncy1nZXRieWNhbmFtZT9jZXJ0aWZpY2F0ZUF1dGhvcml0eT1EaWdpQ2VydCZjZXJ0aWZpY2F0ZUNhdGVnb3J5PVNlcnZlciZjZXJ0aWZpY2F0ZUdyb3VwPXt9Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoCiAgICBnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgZm9yIHNldHRpbmcgaW4gcmVzcG9uc2U6CiAgICAgICAgaWYgc2V0dGluZ1snbmFtZSddID09IGNhX3NldHRpbmdfbmFtZToKICAgICAgICAgICAgY2VydF9kaXZpc2lvbnMgPSBzZXR0aW5nWydyYmFjQ2VydFR5cGVzSGllcmFyY2h5J11bJ2RpdmlzaW9ucyddCiAgICAgICAgICAgIGZvciBkaXYgaW4gY2VydF9kaXZpc2lvbnM6CiAgICAgICAgICAgICAgICBkaWdpY2VydF9kaXZpc2lvbnMuYXBwZW5kKGRpdlsnbmFtZSddKQogICAgcmV0dXJuIGRpZ2ljZXJ0X2RpdmlzaW9ucwogICAgCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgZ3JvdXBfbmFtZSA9ICc8JWFzc2lnbl9ncm91cCU+JwogICAgY2Ffc2V0dGluZ19uYW1lID0gJzxjYV9hY2NvdW50PicKICAgIGNhX2RpdmlzaW9ucyA9IGdldF9jYV9zZXR0aW5ncyhncm91cF9uYW1lLCBjYV9zZXR0aW5nX25hbWUpCiAgICBkYXRhID0gW3siY2FfZGl2aXNpb24iOmRpdn0gZm9yIGRpdiBpbiBjYV9kaXZpc2lvbnNdCiAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQo=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "cert_type" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Certificate Types",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lLCBjYV9kaXZpc2lvbik6CiAgICBjZXJ0aWZpY2F0ZV90eXBlcyA9IFtdCiAgICBkaXZpc2lvbl9pZCA9ICcnCiAgICBjYXQgPSAnc2VydmVyJwogICAgaWYgIjwlY2VydGlmaWNhdGVfcHJvZmlsZSU+IiA9PSAiQ2xpZW50IjoKICAgICAgICBjYXQgPSAiY2xpZW50IgogICAgaWYgIjwlY2VydGlmaWNhdGVfcHJvZmlsZSU+IiA9PSAiQ29kZVNpZ25pbmciOgogICAgICAgIGNhdCA9ICJjb2RlU2lnbmluZyIKICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSA9IGZldGNoX2dhdGV3YXlfa2V5KCkKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhLXNldHRpbmdzLWdldGJ5Y2FuYW1lP2NlcnRpZmljYXRlQXV0aG9yaXR5PURpZ2lDZXJ0JmNlcnRpZmljYXRlQ2F0ZWdvcnk9U2VydmVyJmNlcnRpZmljYXRlR3JvdXA9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdCgKICAgIGdhdGV3YXlfdXJsLCBncm91cF9uYW1lLCBnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7CiAgICAgICAgInNlc3Npb25JZCI6ICc8JXNlc3Npb25JZCU+JywKICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgcmVzcG9uc2UgPSByZXNwb25zZS5qc29uKCkuZ2V0KCJyZXNwb25zZSIpCiAgICBmb3Igc2V0dGluZyBpbiByZXNwb25zZToKICAgICAgICBpZiBzZXR0aW5nWyduYW1lJ10gPT0gY2Ffc2V0dGluZ19uYW1lOgogICAgICAgICAgICBjZXJ0X2RpdmlzaW9ucyA9IHNldHRpbmdbJ3JiYWNDZXJ0VHlwZXNIaWVyYXJjaHknXVsnZGl2aXNpb25zJ10KICAgICAgICAgICAgZm9yIGRpdiBpbiBjZXJ0X2RpdmlzaW9uczoKICAgICAgICAgICAgICAgIGlmIGRpdlsnbmFtZSddID09IGNhX2RpdmlzaW9uOgogICAgICAgICAgICAgICAgICAgIGRpdmlzaW9uX2lkID0gZGl2WydpZCddCiAgICAgICAgICAgICAgICAgICAgY2VydF90eXBlcyA9IGRpdlsnY2VydFR5cGVzJ10KICAgICAgICAgICAgICAgICAgICBmb3IgY2VydF90eXBlIGluIGNlcnRfdHlwZXM6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGNlcnRfdHlwZVsndHlwZSddID09IGNhdDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlcnRpZmljYXRlX3R5cGVzLmFwcGVuZChjZXJ0X3R5cGVbJ25hbWUnXSkKICAgIHJldHVybiBjZXJ0aWZpY2F0ZV90eXBlcywgZGl2aXNpb25faWQKICAgIAoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGdyb3VwX25hbWUgPSAnPCVhc3NpZ25fZ3JvdXAlPicKICAgIGNhX3NldHRpbmdfbmFtZSA9ICc8Y2FfYWNjb3VudD4nCiAgICBjYV9kaXZpc2lvbiA9ICc8Y2FfZGl2aXNpb24+JwogICAgY2VydGlmaWNhdGVfdHlwZXMsIGRpdmlzaW9uX2lkID0gZ2V0X2NhX3NldHRpbmdzKGdyb3VwX25hbWUsIGNhX3NldHRpbmdfbmFtZSwgY2FfZGl2aXNpb24pCiAgICBkYXRhID0gW3siY2VydF90eXBlIjp2YWx9IGZvciB2YWwgaW4gY2VydGlmaWNhdGVfdHlwZXNdICsgW3siZGl2aXNpb25JZCI6ZGl2aXNpb25faWR9XSArIFt7ImNlcnRfdHlwZV91cGxvYWRjc3IiOiB2YWx9IGZvciB2YWwgaW4gY2VydGlmaWNhdGVfdHlwZXNdCiAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQo=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "cert_type_uploadcsr" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Cert type upload CSR",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lLCBjYV9kaXZpc2lvbik6CiAgICBjZXJ0aWZpY2F0ZV90eXBlcyA9IFtdCiAgICBkaXZpc2lvbl9pZCA9ICcnCiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1jYS1zZXR0aW5ncy1nZXRieWNhbmFtZT9jZXJ0aWZpY2F0ZUF1dGhvcml0eT1EaWdpQ2VydCZjZXJ0aWZpY2F0ZUNhdGVnb3J5PVNlcnZlciZjZXJ0aWZpY2F0ZUdyb3VwPXt9Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoCiAgICBnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgZm9yIHNldHRpbmcgaW4gcmVzcG9uc2U6CiAgICAgICAgaWYgc2V0dGluZ1snbmFtZSddID09IGNhX3NldHRpbmdfbmFtZToKICAgICAgICAgICAgY2VydF9kaXZpc2lvbnMgPSBzZXR0aW5nWydyYmFjQ2VydFR5cGVzSGllcmFyY2h5J11bJ2RpdmlzaW9ucyddCiAgICAgICAgICAgIGZvciBkaXYgaW4gY2VydF9kaXZpc2lvbnM6CiAgICAgICAgICAgICAgICBpZiBkaXZbJ25hbWUnXSA9PSBjYV9kaXZpc2lvbjoKICAgICAgICAgICAgICAgICAgICBkaXZpc2lvbl9pZCA9IGRpdlsnaWQnXQogICAgICAgICAgICAgICAgICAgIGNlcnRfdHlwZXMgPSBkaXZbJ2NlcnRUeXBlcyddCiAgICAgICAgICAgICAgICAgICAgZm9yIGNlcnRfdHlwZSBpbiBjZXJ0X3R5cGVzOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBjZXJ0X3R5cGVbJ3R5cGUnXSA9PSAnc2VydmVyJzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlcnRpZmljYXRlX3R5cGVzLmFwcGVuZChjZXJ0X3R5cGVbJ25hbWUnXSkKICAgIHJldHVybiBjZXJ0aWZpY2F0ZV90eXBlcywgZGl2aXNpb25faWQKICAgIAoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGdyb3VwX25hbWUgPSAnPCVhc3NpZ25fZ3JvdXAlPicKICAgIGNhX3NldHRpbmdfbmFtZSA9ICc8Y2FfYWNjb3VudF91cGxvYWRjc3I+JwogICAgY2FfZGl2aXNpb24gPSAnPGNhX2RpdmlzaW9uX3VwbG9hZGNzcj4nCiAgICBjZXJ0aWZpY2F0ZV90eXBlcywgZGl2aXNpb25faWQgPSBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lLCBjYV9kaXZpc2lvbikKICAgIGRhdGEgPSBbeyJkaXZpc2lvbklkIjpkaXZpc2lvbl9pZH1dICsgW3siY2VydF90eXBlX3VwbG9hZGNzciI6IHZhbH0gZm9yIHZhbCBpbiBjZXJ0aWZpY2F0ZV90eXBlc10KICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCg==",
        "_id" : null,
        "_keywords" : null
      } ],
      "accessType" : null,
      "parentTemplate" : null,
      "hiddenTemplate" : false,
      "groupData" : {
        "treeData" : [ ],
        "listData" : [ ]
      },
      "workflow_template_name" : null,
      "_keywords" : null
    },
    "configuration" : {
      "aclIdentifiers" : [ "super access" ],
      "permission" : [ "super access:submit" ],
      "skipFlow" : false,
      "emailConfiguration" : {
        "emailNotificationEnabled" : false,
        "createdNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "reviewedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "submittedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "rejectedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        }
      },
      "multipleScenarioEnabled" : false,
      "maxScenarioCount" : 1,
      "enableSaveDraft" : true,
      "enableCancel" : true,
      "enableClose" : false,
      "enableBreakDown" : false,
      "labels" : {
        "submit" : "Submit",
        "reject" : "Back"
      },
      "enableAutoApprove" : false,
      "failoverState" : 2,
      "successState" : 1,
      "dynamicAuth" : null,
      "regexList" : null,
      "regexOperation" : null,
      "regexPattern" : null,
      "accessMode" : null
    },
    "data" : null,
    "api_list" : null
  } ],
  "subFlowID" : "MRUKXP9F",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "decision_1" : [ ],
    "script_1" : [ ],
    "script_2" : [ {
      "name" : "uuid_list",
      "key" : "uuid_list",
      "value" : "uuid_list",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "uuid_list",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "join_1" : [ ],
    "createform_3" : [ {
      "name" : "CA certificate ID",
      "key" : "ca_certificate_id",
      "value" : "ca_certificate_id",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_certificate_id",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Renew automatically",
      "key" : "renew_automatically",
      "value" : "renew_automatically",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "renew_automatically",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR Generation",
      "key" : "csr_gen",
      "value" : "csr_gen",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "AppViewX,Upload CSR",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_gen",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Regenerate automatically",
      "key" : "regen_automatically",
      "value" : "regen_automatically",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "regen_automatically",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Upload CSR",
      "key" : "upload_csr",
      "value" : "upload_csr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upload_csr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR Parameters",
      "key" : "csr_avx",
      "value" : "csr_avx",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_avx",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CA Account",
      "key" : "ca_account_uploadcsr",
      "value" : "ca_account_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_account_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Division",
      "key" : "ca_division_uploadcsr",
      "value" : "ca_division_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_division_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Division",
      "key" : "ca_division",
      "value" : "ca_division",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_division",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR Parameters",
      "key" : "csr_uploadcsr",
      "value" : "csr_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Common Name",
      "key" : "cert_cn",
      "value" : "cert_cn",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "<%common_name%>",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_cn",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CA Account",
      "key" : "ca_account",
      "value" : "ca_account",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_account",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate Authority",
      "key" : "ca",
      "value" : "ca",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "<%cert_authority%>",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate Type",
      "key" : "cert_type",
      "value" : "cert_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ]
  },
  "type" : null,
  "level" : 2,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Renamed Push",
  "description" : "",
  "flowName" : "DigiCert create certificates",
  "workflowType" : "Default",
  "subFlowType" : "Flow",
  "parentSubFlowID" : "wkzaUXpL",
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop flow",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "Ig7MFeOt",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "CSV_file_upload_or_Manual_entry" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "Failed" : [ {
        "taskId" : "createform_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "form",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "AppViewX create certificates",
    "subFlowID" : "5QWfKkZF",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "create_cert",
      "value" : "<%create_cert%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "create_cert",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "If",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "iM5chT1L",
    "helpContent" : null,
    "rule" : {
      "not" : false,
      "condition" : "AND",
      "rules" : [ {
        "operator" : "==",
        "value" : "<%create_cert%>",
        "comparedValue" : "CSV file upload"
      } ]
    },
    "_id" : null,
    "task_id" : "decision_1",
    "task_name" : "If",
    "task_type" : "decision",
    "task_category" : "decision",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "decision",
    "group_name" : "General",
    "viewable_type" : "custom",
    "rule_name" : "CSV_file_upload_or_Manual_entry"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "401" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Form",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "dynamicAuth" : null,
    "regexList" : null,
    "regexOperation" : null,
    "regexPattern" : null,
    "accessMode" : null,
    "proceedProcess" : "Submit",
    "breakdownProcess" : "Back",
    "cancelProcess" : "Cancel",
    "saveDraftProcess" : "Save Draft",
    "closeProcess" : "Exit",
    "enableSaveDraft" : false,
    "enableCancel" : true,
    "enableClose" : false,
    "enableAutoApprove" : null,
    "enableBreakDown" : false,
    "availableGlobalData" : null,
    "_id" : null,
    "task_id" : "createform_1",
    "task_name" : "CA and CSR parameters - AppViewX",
    "task_type" : "form",
    "task_category" : "form",
    "component_type" : "form",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "form",
    "group_name" : "User interface",
    "viewable_type" : "default",
    "aclIdentifiers" : null,
    "template" : {
      "name" : "CA and CSR parameters - AppViewX",
      "description" : null,
      "aclIdentifiers" : null,
      "fields" : [ {
        "labelName" : "Autotrigger",
        "elementType" : "Hidden",
        "values" : "",
        "fieldId" : "auto_trigger",
        "fieldScript" : "CA account",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : true,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "cert_profile",
        "elementType" : "Hidden",
        "values" : "<%certificate_profile%>",
        "fieldId" : "cert_profile",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate authority",
        "elementType" : "Text box",
        "values" : "<%cert_authority%>",
        "fieldId" : "cert_auth",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR generation",
        "elementType" : "Radio button",
        "values" : "AppViewX,Upload CSR",
        "fieldId" : "csr_generation",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Please paste your CSR",
        "elementType" : "Multi-line with file upload",
        "values" : "",
        "fieldId" : "upload_csr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Fetch CSR parameters",
        "elementType" : "Button",
        "values" : "",
        "fieldId" : "button",
        "fieldScript" : "Fetch CSR details",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CA account",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "ca_account",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "renew_auto",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Start renewing",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "start_renew",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&renew_auto:Yes",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regenerate automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "regen_auto",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&renew_auto:No",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Start regenerating",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "start_regen",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&regen_auto:Yes",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Common name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "common_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Directory name (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "directory_name",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&cert_profile:Server",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "Multiple SAN values should be separated by semicolon (;)",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "DNS (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "dns",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "By default, common name is prefixed to DNS during Upload CSR action Multiple SAN values should be separated by comma (,)",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email (Suject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email_san",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&cert_profile:Server",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "Multiple SAN values should be separated by comma (,)",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "IP Address (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "ip_address_san",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&cert_profile:Server",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "Multiple SAN values should be separated by comma (,)",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Registered ID",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "registered_id_san",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&cert_profile:Server",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "Multiple SAN values should be separated by comma (,)",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "URL (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "url_san",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&cert_profile:Server",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "Multiple SAN values should be separated by comma (,)\n\nPlease enter valid URL such as http://www.appviewx.com",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Other name (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "other_name_san",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX&cert_profile:Server",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "Multiple SAN values should be separated by comma (,)",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization unit",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_unit",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Locality",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "locality",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Challenge password",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "challenge_pass",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Confirm password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "confirm_pass",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Hash function",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "hash_function",
        "fieldScript" : "Get key-type and bit length",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Key type - Bit length",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "key_type",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Template name",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "template_name",
        "fieldScript" : "Fetch Template",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_parameters",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR parameters",
        "elementType" : "Tabular",
        "values" : "",
        "fieldId" : "csr_parameters",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:AppViewX",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null,
        "showDefaultView" : false
      }, {
        "labelName" : "CA account",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "ca_account_uploadcsr",
        "fieldScript" : "Fetch CA account",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "renew_auto_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Start renewing",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "start_renew_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR&renew_auto_uploadcsr:Yes",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regenerate automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "regen_auto_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR&renew_auto_uploadcsr:No",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Start regenerating",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "start_regen_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR&regen_auto_uploadcsr:Yes",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Common name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "cn",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Directory name (Subject alternative name)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "directory_name_san_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "DNS (Subect alternative name)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "dns_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email_san_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "IP Address (Subject alternative names)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "ip_address_san_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Registered ID",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "registered_id_san_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "URL (Subject alternative name)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "url_san_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Other name (Subject alternative name)",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "other_name_san_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization unit",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_unit_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Locality",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "locality_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Hash function",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "hash_function_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Key type",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "key_type_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Bit length",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "bit_length_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Template name",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "template_name_uploadcsr",
        "fieldScript" : "Template names",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR parameters",
        "elementType" : "Tabular",
        "values" : "",
        "fieldId" : "uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_generation:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null,
        "showDefaultView" : false
      } ],
      "fieldScripts" : [ {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Cancel request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Discard request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Submit request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get CA account",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbApudWxsID0gTm9uZQp0cnVlID0gVHJ1ZQpmYWxzZSA9IEZhbHNlCgpsb2dnZXIgPSBsb2dnZXJfdXRpbC5nZXRfbG9nZ2VyKCdHZXQgQ2VydGlmaWNhdGUgcG9saWN5JykKCmRlZiBnZXRfY2FfYWNjb3VudCgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ1NlcnZlcic6CiAgICAgICAgY2F0ID0gJ3NlcnZlcicKICAgIGVsaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnQ2xpZW50JzoKICAgICAgICBjYXQgPSAnY2xpZW50JwogICAgZWxpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdDb2RlIFNpZ25pbmcnOgogICAgICAgIGNhdCA9ICdjb2RlU2lnbmluZycKICAgICAgICAKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhLXNldHRpbmdzLWdldGJ5Y2FuYW1lP2NlcnRpZmljYXRlQXV0aG9yaXR5PXt9JmNlcnRpZmljYXRlQ2F0ZWdvcnk9e30mY2VydGlmaWNhdGVHcm91cD17fT9nd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8JWNlcnRfYXV0aG9yaXR5JT4nLCBjYXQsICc8JWFzc2lnbl9ncm91cCU+JyxnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7InNlc3Npb25JZCI6ICI8JXNlc3Npb25JZCU+IiwgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIn0KCiAgICAjIHBheWxvYWQgPSB7InBheWxvYWQiOnsibG9nIjogVHJ1ZSwicGFzc3dvcmQiOiBiYXNlNjQuYjY0ZW5jb2RlKGZpbGVfcGFzc3dvcmQuZW5jb2RlKCkpLmRlY29kZSgpLCJ1dUlkIjogY2VydF9pZH19CiAgICAKICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgIyBsb2dnZXIuaW5mbygiPT09PT09PT09Q2VydGlmaWNhdGVTZWFyY2g9PT09PT09PT09IikKICAgICMgQVZYOjpMT0coIj09PT09PT09PUNlcnRpZmljYXRlU2VhcmNoPT09PT09PT09PSIpCiAgICAjIGxvZ2dlci5pbmZvKHJlc3BvbnNlLnRleHQpCiAgICAjIGxvZ2dlci5pbmZvKHJlc3BvbnNlLnJlYXNvbikKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpCiAgICBpZiBub3QgcmVzcG9uc2UuZ2V0KCdyZXNwb25zZScpOgogICAgICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6ICdObyBDQSBBY2NvdW50IGhhcyBiZWVuIGNvbmZpZ3VyZWQnfSkpCiAgICAKICAgIGNhX2xpc3QgPSBbXQogICAgZm9yIGNhIGluIHJlc3BvbnNlLmdldCgncmVzcG9uc2UnKToKICAgICAgICBjYV9saXN0LmFwcGVuZChjYS5nZXQoIm5hbWUiKSkKICAgIGxvZ2dlci5pbmZvKCctLS0+JytzdHIocmVzcG9uc2UpKQogICAgbG9nZ2VyLmluZm8oJz4+Pjw8PCcrc3RyKGNhX2xpc3QpKQogICAgcmV0dXJuIGNhX2xpc3QKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgJycnCiAgICBmZXRjaCB0aGUgZ2F0ZXdheSBrZXkgZnJvbSBhcHB2aWV3eCBjb25maWcgZmlsZQogICAgOnJldHVybjogYXBwdmlld3ggZ2F0ZXdheSBrZXkKICAgICcnJwogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICAjIGxvZ2dlci5pbmZvKCdQQVRIJykKICAgICMgbG9nZ2VyLmluZm8oYWJzX3BhdGgpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBwcm9wX2ZpbGUgPSBvcGVuKHByb3BfZmlsZV9wYXRoKQogICAgcHJvcF9maWxlX2xpbmVzID0gcHJvcF9maWxlLnJlYWRsaW5lcygpCiAgICBmb3IgbGluZSBpbiBwcm9wX2ZpbGVfbGluZXM6CiAgICAgICAgaWYgbGluZSBpcyBub3QgIlxuIiBhbmQgIkdBVEVXQVlfS0VZIiBpbiBsaW5lIG9yICJHQVRFV0FZX0JBU0VfVVJMIiBpbiBsaW5lOgogICAgICAgICAgICBjb25mX2NvbnRlbnRbbGluZS5zcGxpdCgiPSIpWzBdXSA9IGxpbmUuc3BsaXQoIj0iKVsxXS5yZXBsYWNlKCJcbiIsICIiKQogICAgcmV0dXJuIGNvbmZfY29udGVudFsnR0FURVdBWV9CQVNFX1VSTCddLCBjb25mX2NvbnRlbnRbJ0dBVEVXQVlfS0VZJ10KICAgIHByb3BfZmlsZS5jbG9zZSgpCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKCiAgICBjYV9hY2NvdW50ID0gZ2V0X2NhX2FjY291bnQoKQogICAgbG9nZ2VyLmluZm8oc3RyKGNhX2FjY291bnQpKyI8PDw8PCIpCiAgICBpZiBjYV9hY2NvdW50OgogICAgICAgIGxvZ2dlci5pbmZvKHN0cih0eXBlKGNhX2FjY291bnQpKSsiPDw8PDw8IikKICAgICAgICBkYXRhID0gW3siY2FfYWNjb3VudCI6dmFsfSBmb3IgdmFsIGluIGNhX2FjY291bnRdCiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyhkYXRhKSkKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyh7J2Vycm9yJzogJ05vIENBIEFjY291bnQgaGFzIGJlZW4gY29uZmlndXJlZCB3aXRoIHRoaXMgY2VydGlmaWNhdGUgYXV0aG9yaXR5J30pKQ==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "template_name" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Template",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbAoKbnVsbCA9IE5vbmUKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQoKbG9nZ2VyID0gbG9nZ2VyX3V0aWwuZ2V0X2xvZ2dlcignR2V0IHRlbXBsYXRlIG5hbWUnKQoKZGVmIGdldF90ZW1wbGF0ZV9uYW1lcygpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgdGVtcGxhdGUgbmFtZQogICAgCiAgICA6cmV0dXJuOiB0ZW1wbGF0ZSBuYW1lcwogICAgIiIiCiAgICBrZXkgPSBzdHIoKQogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY3dkID0gb3MuZ2V0Y3dkKCkKICAgIGNhdCA9ICdzZXJ2ZXInCiAgICBpZiAnPGNlcnRpZmljYXRlX3Byb2ZpbGU+JyA9PSAiU2VydmVyIjoKICAgICAgICBjYXQgPSAic2VydmVyIgogICAgZWxpZiAnPGNlcnRpZmljYXRlX3Byb2ZpbGU+JyA9PSAiQ2xpZW50IjoKICAgICAgICBjYXQgPSAiY2xpZW50IgogICAgZWxpZiAnPGNlcnRpZmljYXRlX3Byb2ZpbGU+JyA9PSAiQ29kZSBTaWduaW5nIjoKICAgICAgICBjYXQgPSAiY29kZVNpZ25pbmciCiAgICAgICAgCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1nZXQtcG9saWN5LWJ5LWdyb3VwbmFtZT9jZXJ0aWZpY2F0ZUdyb3VwTmFtZT17fSZjZXJ0aWZpY2F0ZUNhdGVnb3J5PXt9Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoZ2F0ZXdheV91cmwsJzwlYXNzaWduX2dyb3VwJT4nLGNhdCwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CgogICAgIyBwYXlsb2FkID0geyJwYXlsb2FkIjp7ImxvZyI6IFRydWUsInBhc3N3b3JkIjogYmFzZTY0LmI2NGVuY29kZShmaWxlX3Bhc3N3b3JkLmVuY29kZSgpKS5kZWNvZGUoKSwidXVJZCI6IGNlcnRfaWR9fQogICAgCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpCiAgICAKICAgIHRlbXBsYXRlcyA9IFtdCiAgICBsb2dnZXIuaW5mbyhzdHIoInRlbXBsYXRlIG5hbWVzIHJlc3BvbnNlIikpCiAgICBsb2dnZXIuaW5mbyhzdHIocmVzcG9uc2UpKQogICAgCiAgICAKICAgIGZvciBwb2xpY3kgaW4gcmVzcG9uc2UuZ2V0KCJyZXNwb25zZSIpLmdldCgiY2VydGlmaWNhdGVQb2xpY3lDYUFjY291bnREZXRhaWxzIik6CiAgICAgICAgaWYgcG9saWN5LmdldCgiY2VydGlmaWNhdGVBdXRob3JpdHkiKSA9PSAiTWljcm9zb2Z0IEVudGVycHJpc2UiOgogICAgICAgICAgICBmb3IgdGVtcCBpbiBwb2xpY3kuZ2V0KCJjYVNldHRpbmdzIik6CiAgICAgICAgICAgICAgICB0ZW1wbGF0ZXMuZXh0ZW5kKHRlbXAuZ2V0KCJ0ZW1wbGF0ZXMiKSkKICAgIAogICAgcmV0dXJuIHRlbXBsYXRlcwogICAgCgoKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICAnJycKICAgIGZldGNoIHRoZSBnYXRld2F5IGtleSBmcm9tIGFwcHZpZXd4IGNvbmZpZyBmaWxlCiAgICA6cmV0dXJuOiBhcHB2aWV3eCBnYXRld2F5IGtleQogICAgJycnCiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKICAgICMgbG9nZ2VyLmluZm8oJ1BBVEgnKQogICAgIyBsb2dnZXIuaW5mbyhhYnNfcGF0aCkKICAgIHByb3BfZmlsZV9wYXRoID0gYWJzX3BhdGggKyAiLy4uL3Byb3BlcnRpZXMvYXBwdmlld3gucHJvcGVydGllcyIKICAgIHByb3BfZmlsZSA9IG9wZW4ocHJvcF9maWxlX3BhdGgpCiAgICBwcm9wX2ZpbGVfbGluZXMgPSBwcm9wX2ZpbGUucmVhZGxpbmVzKCkKICAgIGZvciBsaW5lIGluIHByb3BfZmlsZV9saW5lczoKICAgICAgICBpZiBsaW5lIGlzIG5vdCAiXG4iIGFuZCAiR0FURVdBWV9LRVkiIGluIGxpbmUgb3IgIkdBVEVXQVlfQkFTRV9VUkwiIGluIGxpbmU6CiAgICAgICAgICAgIGNvbmZfY29udGVudFtsaW5lLnNwbGl0KCI9IilbMF1dID0gbGluZS5zcGxpdCgiPSIpWzFdLnJlcGxhY2UoIlxuIiwgIiIpCiAgICByZXR1cm4gY29uZl9jb250ZW50WydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZfY29udGVudFsnR0FURVdBWV9LRVknXQogICAgcHJvcF9maWxlLmNsb3NlKCkKCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKCiAgICB0ZW1wbGF0ZV9uYW1lcyA9IGdldF90ZW1wbGF0ZV9uYW1lcygpCiAgICAKICAgIGlmIHRlbXBsYXRlX25hbWVzOgogICAgICAgIGRhdGEgPSBbeyJ0ZW1wbGF0ZV9uYW1lIjp2YWx9IGZvciB2YWwgaW4gdGVtcGxhdGVfbmFtZXNdCiAgICAgICAgaWYgJzxjaGFsbGVuZ2VfcGFzcz4nICE9ICc8Y29uZmlybV9wYXNzPic6CiAgICAgICAgICAgICAgICBwcmludChqc29uLmR1bXBzKHsiZXJyb3IiOiJQYXNzd29yZCBtaXNtYXRjaCIsImRhdGEiOlt7ImNoYWxsZW5nZV9wYXNzIjoiIiwiY29uZmlybV9wYXNzIjoiIn1dfSkpCiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyhkYXRhKSkKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyh7J2Vycm9yJzogJ05vIHRlbXBsYXRlIG5hbWVzIGFyZSBub3QgY29uZmlndXJlZCBmb3IgJytzdHIoJzwlY2VydF9hdXRob3JpdHklPicpfSkpCg==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "button" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch CSR details",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQppbXBvcnQgYXBwdmlld3gKaW1wb3J0IGxvZ2dlcl91dGlsCnRydWUgPSBUcnVlCmZhbHNlID0gRmFsc2UKbnVsbCA9IE5vbmUKCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoJ0dldCBrZXktdHlwZSBhbmQgYml0IGxlbmd0aCcpCgoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfY3NyX3BhcmFtZXRlcnMoY3NyKToKICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSA9IGZldGNoX2dhdGV3YXlfa2V5KCkKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNzci11cGxvYWQ/Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5KQogICAgaGVhZGVycyA9IHsKICAgICAgICAic2Vzc2lvbklkIjogJzwlc2Vzc2lvbklkJT4nLAogICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgIkFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgfQogICAgcGF5bG9hZCA9IHsKICAgICAgICAicGF5bG9hZCIgOiB7CiAgICAgICAgICAgICJjc3JDb250ZW50IjogY3NyLAogICAgICAgICAgICAiY2VydGlmaWNhdGVBdXRob3JpdHkiOiAiIiwKICAgICAgICAgICAgImNhdGVnb3J5IjogIiIsCiAgICAgICAgICAgICJjb21tb25OYW1lIjogIiIKICAgICAgICB9CiAgICB9CiAgICBsb2dnZXIuaW5mbyhzdHIocGF5bG9hZCkpCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWpzb24uZHVtcHMocGF5bG9hZCksIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQoKICAgIGRhdGEgPSB7fQogICAgZGF0YVsnY24nXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2NvbW1vbk5hbWUnKSBvciAiIgogICAgZGF0YVsnZGlyZWN0b3J5X25hbWVfc2FuX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpLmdldCgnZGlyZWN0b3J5TmFtZXMnKSBpZiByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdlbmhhbmNlZFNBTlR5cGVzJykgZWxzZSAiIgogICAgZGF0YVsnZW1haWxfc2FuX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpLmdldCgncmZjODIyTmFtZXMnKSBpZiByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdlbmhhbmNlZFNBTlR5cGVzJykgZWxzZSAiIgogICAgZGF0YVsncmVnaXN0ZXJlZF9pZF9zYW5fdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdlbmhhbmNlZFNBTlR5cGVzJykuZ2V0KCdyZWdpc3RlcmVkSURzJykgaWYgcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpIGVsc2UgIiIKICAgIGRhdGFbJ3VybF9zYW5fdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdlbmhhbmNlZFNBTlR5cGVzJykuZ2V0KCd1bmlmb3JtUmVzb3VyY2VJZGVudGlmaWVycycpIGlmIHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2VuaGFuY2VkU0FOVHlwZXMnKSBlbHNlICIiCiAgICBkYXRhWydvdGhlcl9uYW1lX3Nhbl91cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2VuaGFuY2VkU0FOVHlwZXMnKS5nZXQoJ290aGVyTmFtZXMnKSBpZiByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdlbmhhbmNlZFNBTlR5cGVzJykgZWxzZSAiIgogICAgZGF0YVsnb3JnX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnb3JnYW5pemF0aW9uJykgb3IgIiIKICAgIGRhdGFbJ29yZ191bml0X3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnb3JnYW5pemF0aW9uVW5pdCcpIG9yICIiCiAgICBkYXRhWydsb2NhbGl0eV91cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2xvY2FsaXR5Jykgb3IgIiIKICAgIGRhdGFbJ2NvdW50cnlfdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdjb3VudHJ5Jykgb3IgIiIKICAgIGRhdGFbJ3N0YXRlX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnc3RhdGUnKSBvciAiIgogICAgZGF0YVsna2V5X3R5cGVfdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdrZXlUeXBlJykgb3IgIiIKICAgIGRhdGFbJ2hhc2hfZnVuY3Rpb25fdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdoYXNoRnVuY3Rpb24nKSBvciAiIgogICAgZGF0YVsnYml0X2xlbmd0aF91cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2JpdExlbmd0aCcpIG9yICIiCiAgICBkYXRhWydkbnNfdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdlbmhhbmNlZFNBTlR5cGVzJykuZ2V0KCdkTlNOYW1lcycpIGlmIHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2VuaGFuY2VkU0FOVHlwZXMnKSBlbHNlICIiCiAgICBkYXRhWydpcF9hZGRyZXNzX3Nhbl91cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2VuaGFuY2VkU0FOVHlwZXMnKS5nZXQoJ2lQQWRkcmVzc2VzJykgaWYgcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpIGVsc2UgIiIKICAgIGRhdGFbJ2VtYWlsX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnbWFpbEFkZHJlc3MnKSBvciAiIgogICAgcmV0dXJuIGRhdGEKCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGNzciA9IHInJyc8dXBsb2FkX2Nzcj4nJycKICAgIGNzciA9IGNzci5yZXBsYWNlKCJcXG4iLCJcbiIpCiAgICBjc3JfcGFyYW1ldGVycyA9IGdldF9jc3JfcGFyYW1ldGVycyhjc3IpCiAgICBwcmludChqc29uLmR1bXBzKFtjc3JfcGFyYW1ldGVyc10pKQo=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "auto_trigger" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "CA account",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbApudWxsID0gTm9uZQp0cnVlID0gVHJ1ZQpmYWxzZSA9IEZhbHNlCgpsb2dnZXIgPSBsb2dnZXJfdXRpbC5nZXRfbG9nZ2VyKCdHZXQgQ2VydGlmaWNhdGUgcG9saWN5JykKCmRlZiBnZXRfY2FfYWNjb3VudCgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ1NlcnZlcic6CiAgICAgICAgY2F0ID0gJ3NlcnZlcicKICAgIGVsaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnQ2xpZW50JzoKICAgICAgICBjYXQgPSAnY2xpZW50JwogICAgZWxpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdDb2RlU2lnbmluZyc6CiAgICAgICAgY2F0ID0gJ0NvZGUgU2lnbmluZycKICAgICAgICAKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhLXNldHRpbmdzLWdldGJ5Y2FuYW1lP2NlcnRpZmljYXRlQXV0aG9yaXR5PXt9JmNlcnRpZmljYXRlQ2F0ZWdvcnk9e30mY2VydGlmaWNhdGVHcm91cD17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8JWNlcnRfYXV0aG9yaXR5JT4nLCBjYXQsICc8JWFzc2lnbl9ncm91cCU+JyxnYXRld2F5X2tleSkKCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpCiAgICAKICAgIGlmIG5vdCByZXNwb25zZS5nZXQoJ3Jlc3BvbnNlJyk6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyh7J2Vycm9yJzogJ05vIENBIEFjY291bnQgaGFzIGJlZW4gY29uZmlndXJlZCd9KSkKICAgIAogICAgY2FfbGlzdCA9IFtdCiAgICBmb3IgY2VydF9wb2xpY3kgaW4gcmVzcG9uc2UuZ2V0KCJyZXNwb25zZSIpOgogICAgICAgIGlmIGNlcnRfcG9saWN5LmdldCgiY2VydGlmaWNhdGVBdXRob3JpdHkiKSA9PSAiTWljcm9zb2Z0IEVudGVycHJpc2UiOgogICAgICAgICAgICBjYV9saXN0LmFwcGVuZChjZXJ0X3BvbGljeS5nZXQoIm5hbWUiKSkKCiAgICByZXR1cm4gY2FfbGlzdAoKZGVmIGdldF9wb2xpY3lfYnlfZ3JvdXBfbmFtZSgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ1NlcnZlcic6CiAgICAgICAgY2F0ID0gJ3NlcnZlcicKICAgIGVsaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnQ2xpZW50JzoKICAgICAgICBjYXQgPSAnY2xpZW50JwogICAgZWxpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdDb2RlU2lnbmluZyc6CiAgICAgICAgY2F0ID0gJ2NvZGVTaWduaW5nJwogICAgICAgIAogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtZ2V0LXBvbGljeS1ieS1ncm91cG5hbWU/Y2VydGlmaWNhdGVHcm91cE5hbWU9e30mY2VydGlmaWNhdGVDYXRlZ29yeT17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8JWFzc2lnbl9ncm91cCU+JywgY2F0LCBnYXRld2F5X2tleSkKCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpCgogICAgZGF0YSA9IHt9CiAgICBmb3IgY2VydF9wb2xpY3lfY2FfYWNjX2RldGFpbCBpbiByZXNwb25zZS5nZXQoInJlc3BvbnNlIikuZ2V0KCJjZXJ0aWZpY2F0ZVBvbGljeUNhQWNjb3VudERldGFpbHMiKToKICAgICAgICBpZiBjZXJ0X3BvbGljeV9jYV9hY2NfZGV0YWlsLmdldCgiY2VydGlmaWNhdGVBdXRob3JpdHkiKSA9PSAiPCVjZXJ0X2F1dGhvcml0eSU+IjoKICAgICAgICAgICAgY3NyID0gY2VydF9wb2xpY3lfY2FfYWNjX2RldGFpbC5nZXQoImNlcnRQb2xpY3lDc3JQYXJhbWV0ZXIiKQogICAgICAgICAgICBkYXRhWydjb21tb25fbmFtZSddID0gY3NyLmdldCgiY29tbW9uTmFtZSIpCiAgICAgICAgICAgIGRhdGFbImRucyJdID0gJywnLmpvaW4oY3NyLmdldCgic3ViamVjdEFsdGVybmF0aXZlTmFtZXMiKSkKICAgICAgICAgICAgZGF0YVsnb3JnJ10gPSBjc3IuZ2V0KCJvcmdhbml6YXRpb24iKQogICAgICAgICAgICBkYXRhWydvcmdfdW5pdCddID0gY3NyLmdldCgnb3JnYW5pemF0aW9uVW5pdCcpCiAgICAgICAgICAgIGRhdGFbJ2xvY2FsaXR5J10gPSBjc3IuZ2V0KCdsb2NhbGl0eScpCiAgICAgICAgICAgIGRhdGFbJ3N0YXRlJ10gPSBjc3IuZ2V0KCdzdGF0ZScpCiAgICAgICAgICAgIGRhdGFbJ2NvdW50cnknXSA9IGNzci5nZXQoJ2NvdW50cnknKQogICAgICAgICAgICBkYXRhWydlbWFpbCddID0gJywnLmpvaW4oY3NyLmdldCgnbWFpbEFkZHJlc3MnKSkKICAgIHJldHVybiBkYXRhCiAgICAKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgJycnCiAgICBmZXRjaCB0aGUgZ2F0ZXdheSBrZXkgZnJvbSBhcHB2aWV3eCBjb25maWcgZmlsZQogICAgOnJldHVybjogYXBwdmlld3ggZ2F0ZXdheSBrZXkKICAgICcnJwogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCgogICAgcHJvcF9maWxlX3BhdGggPSBhYnNfcGF0aCArICIvLi4vcHJvcGVydGllcy9hcHB2aWV3eC5wcm9wZXJ0aWVzIgogICAgcHJvcF9maWxlID0gb3Blbihwcm9wX2ZpbGVfcGF0aCkKICAgIHByb3BfZmlsZV9saW5lcyA9IHByb3BfZmlsZS5yZWFkbGluZXMoKQogICAgZm9yIGxpbmUgaW4gcHJvcF9maWxlX2xpbmVzOgogICAgICAgIGlmIGxpbmUgaXMgbm90ICJcbiIgYW5kICJHQVRFV0FZX0tFWSIgaW4gbGluZSBvciAiR0FURVdBWV9CQVNFX1VSTCIgaW4gbGluZToKICAgICAgICAgICAgY29uZl9jb250ZW50W2xpbmUuc3BsaXQoIj0iKVswXV0gPSBsaW5lLnNwbGl0KCI9IilbMV0ucmVwbGFjZSgiXG4iLCAiIikKICAgIHJldHVybiBjb25mX2NvbnRlbnRbJ0dBVEVXQVlfQkFTRV9VUkwnXSwgY29uZl9jb250ZW50WydHQVRFV0FZX0tFWSddCiAgICBwcm9wX2ZpbGUuY2xvc2UoKQoKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CgogICAgY2FfYWNjb3VudCA9IGdldF9jYV9hY2NvdW50KCkKICAgIHBvbGljeSA9IGdldF9wb2xpY3lfYnlfZ3JvdXBfbmFtZSgpCiAgICBpZiBjYV9hY2NvdW50OgogICAgICAgIGRhdGEgPSBbeyJjYV9hY2NvdW50Ijp2YWx9IGZvciB2YWwgaW4gY2FfYWNjb3VudF0rW3BvbGljeV0KICAgICAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQogICAgZWxzZToKICAgICAgICBwcmludChqc29uLmR1bXBzKHsnZXJyb3InOiAnTm8gQ0EgQWNjb3VudCBoYXMgYmVlbiBjb25maWd1cmVkIHdpdGggdGhpcyBjZXJ0aWZpY2F0ZSBhdXRob3JpdHknfSkp",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "hash_function" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get key-type and bit length",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbAoKbnVsbCA9IE5vbmUKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQoKbG9nZ2VyID0gbG9nZ2VyX3V0aWwuZ2V0X2xvZ2dlcignR2V0IGtleS10eXBlIGFuZCBiaXQgbGVuZ3RoJykKCmRlZiBnZXRfa2V5X2JpdF9sZW5ndGgoKToKICAgICIiIgogICAgRnVuY3Rpb24gdG8gRmV0Y2ggdGhlIGNvbmZpZ3VyZWQgY2VydGlmaWNhdGUgZ3JvdXAKICAgIAogICAgOnJldHVybjogQ2VydGlmaWNhdGUgcG9saWN5CiAgICAiIiIKICAgIGtleSA9IHN0cigpCiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICBjd2QgPSBvcy5nZXRjd2QoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJTZXJ2ZXIiOgogICAgICAgIGNhdCA9ICJzZXJ2ZXIiCiAgICBlbGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJDbGllbnQiOgogICAgICAgIGNhdCA9ICJjbGllbnQiCiAgICBlbGlmICc8Y2VydGlmaWNhdGVfcHJvZmlsZT4nID09ICJDb2RlIFNpZ25pbmciOgogICAgICAgIGNhdCA9ICJjb2RlU2lnbmluZyIKICAgICAgICAKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWdldC1wb2xpY3ktYnktZ3JvdXBuYW1lP2NlcnRpZmljYXRlR3JvdXBOYW1lPXt9JmNlcnRpZmljYXRlQ2F0ZWdvcnk9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwnPCVhc3NpZ25fZ3JvdXAlPicsY2F0ICwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CgogICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCB2ZXJpZnk9RmFsc2UpCgogICAgcmVzcG9uc2UgPSByZXNwb25zZS5qc29uKCkKCiAgICBwb2xpY3lfY2FfZGV0YWlscyA9IHJlc3BvbnNlLmdldCgicmVzcG9uc2UiKS5nZXQoJ2NlcnRpZmljYXRlUG9saWN5Q2FBY2NvdW50RGV0YWlscycpCiAgICBoYXNoX2FsZ28gPVtdCiAgICBrZXlfdHlwZV9iaXRfbGVuID0gW10KICAgIGZvciBjYV9kZXRhaWxzIGluIHBvbGljeV9jYV9kZXRhaWxzOgogICAgICAgIGlmIGNhX2RldGFpbHNbJ2NlcnRpZmljYXRlQXV0aG9yaXR5J10gPT0gJzwlY2VydF9hdXRob3JpdHklPic6CiAgICAgICAgICAgIGlmIGxlbihjYV9kZXRhaWxzWydjYVNldHRpbmdzJ10pICE9IDA6CiAgICAgICAgICAgICAgICBjYV9zZXR0aW5nc19wcmVzZW50ID0gVHJ1ZQogICAgICAgICAgICAgICAgaGFzaF9hbGdvLmV4dGVuZChjYV9kZXRhaWxzWydzaGFUeXBlJ10pCiAgICAgICAgICAgICAgICBjZXJ0aWZpY2F0ZUtleVBhcmFtcyA9IGNhX2RldGFpbHNbJ2NlcnRpZmljYXRlS2V5UGFyYW1zJ10KICAgICAgICAgICAgICAgIGNlcnRfa2V5X3BhcmFtcyA9IGNlcnRpZmljYXRlS2V5UGFyYW1zLml0ZW1zKCkKICAgICAgICAgICAgICAgIGZvciBrZXksdmFsdWVzIGluIGNlcnRfa2V5X3BhcmFtczoKICAgICAgICAgICAgICAgICAgICBpZiB2YWx1ZXM6CiAgICAgICAgICAgICAgICAgICAgICAgIGZvciBiaXRfbGVuIGluIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleV90eXBlX2JpdF9sZW4uYXBwZW5kKGtleSArICcgLSAnICsgYml0X2xlbikKCiAgICByZXR1cm4gY2Ffc2V0dGluZ3NfcHJlc2VudCwga2V5X3R5cGVfYml0X2xlbiwgaGFzaF9hbGdvCgoKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICAnJycKICAgIGZldGNoIHRoZSBnYXRld2F5IGtleSBmcm9tIGFwcHZpZXd4IGNvbmZpZyBmaWxlCiAgICA6cmV0dXJuOiBhcHB2aWV3eCBnYXRld2F5IGtleQogICAgJycnCiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKICAgIHByb3BfZmlsZV9wYXRoID0gYWJzX3BhdGggKyAiLy4uL3Byb3BlcnRpZXMvYXBwdmlld3gucHJvcGVydGllcyIKICAgIHByb3BfZmlsZSA9IG9wZW4ocHJvcF9maWxlX3BhdGgpCiAgICBwcm9wX2ZpbGVfbGluZXMgPSBwcm9wX2ZpbGUucmVhZGxpbmVzKCkKICAgIGZvciBsaW5lIGluIHByb3BfZmlsZV9saW5lczoKICAgICAgICBpZiBsaW5lIGlzIG5vdCAiXG4iIGFuZCAiR0FURVdBWV9LRVkiIGluIGxpbmUgb3IgIkdBVEVXQVlfQkFTRV9VUkwiIGluIGxpbmU6CiAgICAgICAgICAgIGNvbmZfY29udGVudFtsaW5lLnNwbGl0KCI9IilbMF1dID0gbGluZS5zcGxpdCgiPSIpWzFdLnJlcGxhY2UoIlxuIiwgIiIpCiAgICByZXR1cm4gY29uZl9jb250ZW50WydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZfY29udGVudFsnR0FURVdBWV9LRVknXQogICAgcHJvcF9maWxlLmNsb3NlKCkKCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKCiAgICBrZXlfcHJlc2VudCwga2V5X3R5cGVfYml0X2xlbmd0aCxoYXNoX2FsZ29yaXRobSA9IGdldF9rZXlfYml0X2xlbmd0aCgpCgogICAgaWYga2V5X3ByZXNlbnQ6CiAgICAgICAgaWYga2V5X3R5cGVfYml0X2xlbmd0aDoKICAgICAgICAgICAgZGF0YSA9IFt7ImtleV90eXBlIjp2YWx9IGZvciB2YWwgaW4ga2V5X3R5cGVfYml0X2xlbmd0aF0gKyBbeyJoYXNoX2Z1bmN0aW9uIjp2YWx9Zm9yIHZhbCBpbiBoYXNoX2FsZ29yaXRobV0KICAgICAgICAgICAgCiAgICAgICAgICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCiAgICBlbHNlOgogICAgICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6ICdDQSBzZXR0aW5ncyBhcmUgbm90IGNvbmZpZ3VyZWQgZm9yIHRoZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHknK3N0cignPCVjZXJ0X2F1dGhvcml0eSU+Jyl9KSkK",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "ca_account_uploadcsr" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch CA account",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbApudWxsID0gTm9uZQp0cnVlID0gVHJ1ZQpmYWxzZSA9IEZhbHNlCgpsb2dnZXIgPSBsb2dnZXJfdXRpbC5nZXRfbG9nZ2VyKCdHZXQgQ2VydGlmaWNhdGUgcG9saWN5JykKCmRlZiBnZXRfY2FfYWNjb3VudCgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ1NlcnZlcic6CiAgICAgICAgY2F0ID0gJ3NlcnZlcicKICAgIGVsaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnQ2xpZW50JzoKICAgICAgICBjYXQgPSAnY2xpZW50JwogICAgZWxpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdDb2RlIFNpZ25pbmcnOgogICAgICAgIGNhdCA9ICdjb2RlU2lnbmluZycKICAgICAgICAKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhLXNldHRpbmdzLWdldGJ5Y2FuYW1lP2NlcnRpZmljYXRlQXV0aG9yaXR5PXt9JmNlcnRpZmljYXRlQ2F0ZWdvcnk9e30mY2VydGlmaWNhdGVHcm91cD17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8JWNlcnRfYXV0aG9yaXR5JT4nLCBjYXQsICc8JWFzc2lnbl9ncm91cCU+JyxnYXRld2F5X2tleSkKCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CgogICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCB2ZXJpZnk9RmFsc2UpCgogICAgcmVzcG9uc2UgPSByZXNwb25zZS5qc29uKCkKCiAgICBpZiBub3QgcmVzcG9uc2UuZ2V0KCdyZXNwb25zZScpOgogICAgICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6ICdObyBDQSBBY2NvdW50IGhhcyBiZWVuIGNvbmZpZ3VyZWQnfSkpCiAgICAKICAgIGNhX2xpc3QgPSBbXQogICAgZm9yIGNhIGluIHJlc3BvbnNlLmdldCgncmVzcG9uc2UnKToKICAgICAgICBjYV9saXN0LmFwcGVuZChjYS5nZXQoIm5hbWUiKSkKCiAgICByZXR1cm4gY2FfbGlzdAoKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICAnJycKICAgIGZldGNoIHRoZSBnYXRld2F5IGtleSBmcm9tIGFwcHZpZXd4IGNvbmZpZyBmaWxlCiAgICA6cmV0dXJuOiBhcHB2aWV3eCBnYXRld2F5IGtleQogICAgJycnCiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBwcm9wX2ZpbGUgPSBvcGVuKHByb3BfZmlsZV9wYXRoKQogICAgcHJvcF9maWxlX2xpbmVzID0gcHJvcF9maWxlLnJlYWRsaW5lcygpCiAgICBmb3IgbGluZSBpbiBwcm9wX2ZpbGVfbGluZXM6CiAgICAgICAgaWYgbGluZSBpcyBub3QgIlxuIiBhbmQgIkdBVEVXQVlfS0VZIiBpbiBsaW5lIG9yICJHQVRFV0FZX0JBU0VfVVJMIiBpbiBsaW5lOgogICAgICAgICAgICBjb25mX2NvbnRlbnRbbGluZS5zcGxpdCgiPSIpWzBdXSA9IGxpbmUuc3BsaXQoIj0iKVsxXS5yZXBsYWNlKCJcbiIsICIiKQogICAgcmV0dXJuIGNvbmZfY29udGVudFsnR0FURVdBWV9CQVNFX1VSTCddLCBjb25mX2NvbnRlbnRbJ0dBVEVXQVlfS0VZJ10KICAgIHByb3BfZmlsZS5jbG9zZSgpCgpkZWYgZ2V0X3BvbGljeV9ieV9ncm91cF9uYW1lKCk6CiAgICAiIiIKICAgIEZ1bmN0aW9uIHRvIEZldGNoIHRoZSBjb25maWd1cmVkIGNlcnRpZmljYXRlIGdyb3VwCiAgICAKICAgIDpyZXR1cm46IENlcnRpZmljYXRlIHBvbGljeQogICAgIiIiCiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICBjYXQgPSAnc2VydmVyJwogICAgaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnU2VydmVyJzoKICAgICAgICBjYXQgPSAnc2VydmVyJwogICAgZWxpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdDbGllbnQnOgogICAgICAgIGNhdCA9ICdjbGllbnQnCiAgICBlbGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ0NvZGUgU2lnbmluZyc6CiAgICAgICAgY2F0ID0gJ2NvZGVTaWduaW5nJwogICAgICAgIAogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtZ2V0LXBvbGljeS1ieS1ncm91cG5hbWU/Y2VydGlmaWNhdGVHcm91cE5hbWU9e30mY2VydGlmaWNhdGVDYXRlZ29yeT17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8JWFzc2lnbl9ncm91cCU+JywgY2F0LCBnYXRld2F5X2tleSkKCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpCgogICAgZGF0YSA9IHt9CiAgICBmb3IgY2VydF9wb2xpY3lfY2FfYWNjX2RldGFpbCBpbiByZXNwb25zZS5nZXQoInJlc3BvbnNlIikuZ2V0KCJjZXJ0aWZpY2F0ZVBvbGljeUNhQWNjb3VudERldGFpbHMiKToKICAgICAgICBpZiBjZXJ0X3BvbGljeV9jYV9hY2NfZGV0YWlsLmdldCgiY2VydGlmaWNhdGVBdXRob3JpdHkiKSA9PSAiPCVjZXJ0X2F1dGhvcml0eSU+IjoKICAgICAgICAgICAgY3NyID0gY2VydF9wb2xpY3lfY2FfYWNjX2RldGFpbC5nZXQoImNlcnRQb2xpY3lDc3JQYXJhbWV0ZXIiKQogICAgICAgICAgICAjIGRhdGFbJ2NuJ10gPSBjc3IuZ2V0KCJjb21tb25OYW1lIikKICAgICAgICAgICAgZGF0YVsnb3JnX3VwbG9hZGNzciddID0gY3NyLmdldCgib3JnYW5pemF0aW9uIikKICAgICAgICAgICAgZGF0YVsnb3JnX3VuaXRfdXBsb2FkY3NyJ10gPSBjc3IuZ2V0KCdvcmdhbml6YXRpb25Vbml0JykKICAgICAgICAgICAgZGF0YVsnbG9jYWxpdHlfdXBsb2FkY3NyJ10gPSBjc3IuZ2V0KCdsb2NhbGl0eScpCiAgICAgICAgICAgIGRhdGFbJ3N0YXRlX3VwbG9hZGNzciddID0gY3NyLmdldCgnc3RhdGUnKQogICAgICAgICAgICBkYXRhWydjb3VudHJ5X3VwbG9hZGNzciddID0gY3NyLmdldCgnY291bnRyeScpCiAgICAgICAgICAgIGRhdGFbJ2VtYWlsX3VwbG9hZGNzciddID0gJywnLmpvaW4oY3NyLmdldCgnbWFpbEFkZHJlc3MnKSkKICAgIHJldHVybiBkYXRhCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKCiAgICBjYV9hY2NvdW50ID0gZ2V0X2NhX2FjY291bnQoKQogICAgcG9saWN5X2Nzcl9wYXJhbXMgPSBnZXRfcG9saWN5X2J5X2dyb3VwX25hbWUoKQogICAgCiAgICBpZiBjYV9hY2NvdW50OgogICAgICAgIGRhdGEgPSBbeyJjYV9hY2NvdW50X3VwbG9hZGNzciI6dmFsfSBmb3IgdmFsIGluIGNhX2FjY291bnRdICsgW3BvbGljeV9jc3JfcGFyYW1zXQogICAgICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCiAgICBlbHNlOgogICAgICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6ICdObyBDQSBBY2NvdW50IGhhcyBiZWVuIGNvbmZpZ3VyZWQgd2l0aCB0aGlzIGNlcnRpZmljYXRlIGF1dGhvcml0eSd9KSk=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "template_name_uploadcsr" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Template names",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IHJlCmltcG9ydCBqc29uCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkRFUEVOREVOQ0lFUykKaW1wb3J0IGFwcHZpZXd4CmltcG9ydCBsb2dnZXJfdXRpbAoKbnVsbCA9IE5vbmUKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQoKbG9nZ2VyID0gbG9nZ2VyX3V0aWwuZ2V0X2xvZ2dlcignR2V0IHRlbXBsYXRlIG5hbWUnKQoKZGVmIGdldF90ZW1wbGF0ZV9uYW1lcygpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgdGVtcGxhdGUgbmFtZQogICAgCiAgICA6cmV0dXJuOiB0ZW1wbGF0ZSBuYW1lcwogICAgIiIiCiAgICBrZXkgPSBzdHIoKQogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY3dkID0gb3MuZ2V0Y3dkKCkKICAgIGNhdCA9ICdzZXJ2ZXInCiAgICBpZiAnPGNlcnRpZmljYXRlX3Byb2ZpbGU+JyA9PSAiU2VydmVyIjoKICAgICAgICBjYXQgPSAic2VydmVyIgogICAgZWxpZiAnPGNlcnRpZmljYXRlX3Byb2ZpbGU+JyA9PSAiQ2xpZW50IjoKICAgICAgICBjYXQgPSAiY2xpZW50IgogICAgZWxpZiAnPGNlcnRpZmljYXRlX3Byb2ZpbGU+JyA9PSAiQ29kZSBTaWduaW5nIjoKICAgICAgICBjYXQgPSAiY29kZVNpZ25pbmciCiAgICAgICAgCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1nZXQtcG9saWN5LWJ5LWdyb3VwbmFtZT9jZXJ0aWZpY2F0ZUdyb3VwTmFtZT17fSZjZXJ0aWZpY2F0ZUNhdGVnb3J5PXt9Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoZ2F0ZXdheV91cmwsJzwlYXNzaWduX2dyb3VwJT4nLGNhdCwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CgoKICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgcmVzcG9uc2UgPSByZXNwb25zZS5qc29uKCkKICAgIAogICAgdGVtcGxhdGVzID0gW10KICAgIGxvZ2dlci5pbmZvKHN0cigidGVtcGxhdGUgbmFtZXMgcmVzcG9uc2UiKSkKICAgIGxvZ2dlci5pbmZvKHN0cihyZXNwb25zZSkpCiAgICAKICAgIAogICAgZm9yIHBvbGljeSBpbiByZXNwb25zZS5nZXQoInJlc3BvbnNlIikuZ2V0KCJjZXJ0aWZpY2F0ZVBvbGljeUNhQWNjb3VudERldGFpbHMiKToKICAgICAgICBpZiBwb2xpY3kuZ2V0KCJjZXJ0aWZpY2F0ZUF1dGhvcml0eSIpID09ICJNaWNyb3NvZnQgRW50ZXJwcmlzZSI6CiAgICAgICAgICAgIGZvciB0ZW1wIGluIHBvbGljeS5nZXQoImNhU2V0dGluZ3MiKToKICAgICAgICAgICAgICAgIHRlbXBsYXRlcy5leHRlbmQodGVtcC5nZXQoInRlbXBsYXRlcyIpKQogICAgCiAgICByZXR1cm4gdGVtcGxhdGVzCgoKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICAnJycKICAgIGZldGNoIHRoZSBnYXRld2F5IGtleSBmcm9tIGFwcHZpZXd4IGNvbmZpZyBmaWxlCiAgICA6cmV0dXJuOiBhcHB2aWV3eCBnYXRld2F5IGtleQogICAgJycnCiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBwcm9wX2ZpbGUgPSBvcGVuKHByb3BfZmlsZV9wYXRoKQogICAgcHJvcF9maWxlX2xpbmVzID0gcHJvcF9maWxlLnJlYWRsaW5lcygpCiAgICBmb3IgbGluZSBpbiBwcm9wX2ZpbGVfbGluZXM6CiAgICAgICAgaWYgbGluZSBpcyBub3QgIlxuIiBhbmQgIkdBVEVXQVlfS0VZIiBpbiBsaW5lIG9yICJHQVRFV0FZX0JBU0VfVVJMIiBpbiBsaW5lOgogICAgICAgICAgICBjb25mX2NvbnRlbnRbbGluZS5zcGxpdCgiPSIpWzBdXSA9IGxpbmUuc3BsaXQoIj0iKVsxXS5yZXBsYWNlKCJcbiIsICIiKQogICAgcmV0dXJuIGNvbmZfY29udGVudFsnR0FURVdBWV9CQVNFX1VSTCddLCBjb25mX2NvbnRlbnRbJ0dBVEVXQVlfS0VZJ10KICAgIHByb3BfZmlsZS5jbG9zZSgpCgoKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CgogICAgdGVtcGxhdGVfbmFtZXMgPSBnZXRfdGVtcGxhdGVfbmFtZXMoKQogICAgCiAgICBpZiB0ZW1wbGF0ZV9uYW1lczoKICAgICAgICBkYXRhID0gW3sidGVtcGxhdGVfbmFtZV91cGxvYWRjc3IiOnZhbH0gZm9yIHZhbCBpbiB0ZW1wbGF0ZV9uYW1lc10KICAgICAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQogICAgZWxzZToKICAgICAgICBwcmludChqc29uLmR1bXBzKHsnZXJyb3InOiAnTm8gdGVtcGxhdGUgbmFtZXMgYXJlIG5vdCBjb25maWd1cmVkIGZvciAnK3N0cignPCVjZXJ0X2F1dGhvcml0eSU+Jyl9KSkK",
        "_id" : null,
        "_keywords" : null
      } ],
      "accessType" : null,
      "parentTemplate" : null,
      "hiddenTemplate" : false,
      "groupData" : {
        "treeData" : [ ],
        "listData" : [ ]
      },
      "workflow_template_name" : null,
      "_keywords" : null
    },
    "configuration" : {
      "aclIdentifiers" : [ "super access" ],
      "permission" : [ "super access:submit" ],
      "skipFlow" : false,
      "emailConfiguration" : {
        "emailNotificationEnabled" : false,
        "createdNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "reviewedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "submittedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "rejectedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        }
      },
      "multipleScenarioEnabled" : false,
      "maxScenarioCount" : 1,
      "enableSaveDraft" : true,
      "enableCancel" : true,
      "enableClose" : false,
      "enableBreakDown" : false,
      "labels" : {
        "submit" : "Submit",
        "reject" : "Back"
      },
      "enableAutoApprove" : false,
      "failoverState" : 2,
      "successState" : 1,
      "dynamicAuth" : null,
      "regexList" : null,
      "regexOperation" : null,
      "regexPattern" : null,
      "accessMode" : null
    },
    "data" : null,
    "api_list" : null
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "MS create certificates",
    "subFlowID" : "Jvvtkpcr",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "assign_group",
      "value" : "<%assign_group%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "assign_group",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "upload_csv",
      "value" : "<%upload_csv%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upload_csv",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_1",
    "task_name" : "Processing CSV data",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import json\nimport sys\nimport gridfs\nfrom bson import ObjectId\nimport csv\nimport requests\nimport time\n\nsys.path.append(AVX::DEPENDENCIES)\nsys.path.append(AVX::HELPER)\n\nimport appviewx\nimport logger_util\nlogger = logger_util.get_logger('Cert Expiry Report')\n\nconn = appviewx.db_connection()\ndb = conn.appviewx\n\npolicy_type = \"\"\n\nfalse = False\ntrue = True\nnull = None\n\ndef write_file_to_appviewx(request_id, field_id, task_id, file_name):\n   \"\"\"\n   Method to write the given file to /var/tmp in AppViewX\n   :param db: Database connection object to AppViewX\n   :param request_id: RequestID of the uploaded file\n   :param field_id: FieldID of the uploaded file\n   :param task_id: TaskID of the uploaded file\n   :param file_name: Name of the uploaded file\n   :return: Path of the uploaded file\n   \"\"\"\n   with open(str(file_name), \"wb\") as obj_file:\n       uploaded_file_id = str(db.visualworkflow_request_uploaded_files.files.\\\n           find_one({\"metadata.requestId\": request_id, \\\n           \"metadata.fieldId\": field_id, \"metadata.taskId\": task_id},\\\n            {\"_id\": 1})[\"_id\"])\n       gfs = gridfs.GridFS(db, collection=\"visualworkflow_request_uploaded_files\")\n       content = gfs.get(ObjectId(uploaded_file_id)).read()\n       obj_file.write(content)\n   return str(file_name)\n\ndef get_file(uploaded_file):\n   \"\"\"\n   Method to get the metadata of the uploaded file from the database\n   :param db: Database connection object to AppViewX\n   :param uploaded_file: Name of the uploaded file\n   :return: Path of the uploaded file\n   \"\"\"\n   file_name = uploaded_file.get(\"fileName\", \"certificate_file.cer\")\n   request_id = uploaded_file[\"requestId\"]\n   field_id = uploaded_file[\"fieldId\"]\n   task_id = uploaded_file[\"taskId\"]\n   return write_file_to_appviewx(request_id, field_id, task_id, file_name)\n\n\ndef getCertificateGroup():\n    \"\"\"\n    Function to Fetch the configured certificate group\n    \n    :return: Certificate policy\n    \"\"\"\n    key = str()\n    gateway_url, gateway_key = fetch_gateway_key()\n    cwd = os.getcwd()\n    url = \"{}avxapi/cert-group-search?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n\n    # payload = {\"payload\":{\"log\": True,\"password\": base64.b64encode(file_password.encode()).decode(),\"uuId\": cert_id}}\n\n    payload = {\"payload\":{ \"startIndex\":0,\"displayLength\":100,\"searchText\":\"\",\"sortOrder\":\"asc\",\"sortColumn\":\"name\"}}\n    \n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    # logger.info(\"=========CertificateSearch==========\")\n    # AVX::LOG(\"=========CertificateSearch==========\")\n    # logger.info(response.text)\n    # logger.info(response.reason)\n    # logger.info(response.status_code)\n    logger.info('response : '+str(response))\n    response = response.json()\n    logger.info('--->'+str(response))\n    # return type(response), type(response['response'])\n    response = response.get(\"response\").get(\"data\")\n    \n    groups = []\n    for cert_group in response:\n        groups.append(cert_group.get(\"name\"))\n    \n    return groups\n\ndef fetch_gateway_key():\n    '''\n    fetch the gateway key from appviewx config file\n    :return: appviewx gateway key\n    '''\n    conf_content = {}\n    abs_path = os.path.dirname(os.path.abspath(__file__))\n    # logger.info('PATH')\n    # logger.info(abs_path)\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\n    prop_file = open(prop_file_path)\n    prop_file_lines = prop_file.readlines()\n    for line in prop_file_lines:\n        if line is not \"\\n\" and \"GATEWAY_KEY\" in line or \"GATEWAY_BASE_URL\" in line:\n            conf_content[line.split(\"=\")[0]] = line.split(\"=\")[1].replace(\"\\n\", \"\")\n    return conf_content['GATEWAY_BASE_URL'], conf_content['GATEWAY_KEY']\n    prop_file.close()\n\n\ndef cert_ca_connector_info(csr):\n    '''\n    The cert_ca_connector_info function is used to save the cert CA connector information\n    :param1 csr (dict): CSR parameters of a certiificate to be created\n    :return uuid (str): Returns the uuid of the certificate to be submitted\n    '''\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n\n    data = {}\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\n            data['cn'] = csr_params.get(\"commonName\")\n            data['dns'] = csr_params.get(\"subjectAlternativeNames\")\n            data['org'] = csr_params.get(\"organization\")\n            data['org_unit'] = csr_params.get('organizationUnit')\n            data['locality'] = csr_params.get('locality')\n            data['state'] = csr_params.get('state')\n            data['country'] = csr_params.get('country')\n            data['email'] = ','.join(csr_params.get('mailAddress'))\n    \n\n        \n    dns_names = [] #csr[3].split(\",\").append(csr[1]) if csr[3] else [csr[1]]    \n    \n    \n    # dns_names = data.get(\"common_name\") if policy_type == \"Strict\" and data.get(\"common_name\") else csr[1]\n    if data.get(\"cn\") and policy_type == \"Strict\":\n        dns_names.append(data.get(\"cn\"))\n    else:\n        dns_names.append(str(csr[1]))\n    \n    if data[\"dns\"]:\n        dns_names.extend(data[\"dns\"])\n    \n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    san = [\"dNSNames\"]\n    \n    if csr[2]:\n        san.append(\"directoryNames\")\n    if csr[4]:\n        san.append(\"rfc822Names\")\n    if csr[5]:\n        san.append(\"iPAddresses\")\n    if csr[6]:\n        san.append(\"registeredIDs\")\n    if csr[7]:\n        san.append(\"uniformResourceIdentifiers\")\n    if csr[8]:\n        san.append(\"otherNames\")\n    \n    payload = {\n        \"payload\" : {\n            \"csrGenerationSource\": \"appviewx\",\n            \"caConnectorInfo\": {\n                \"_id\": \"\",\n                \"certificateUuid\": \"\",\n                \"existingUuid\": \"\",\n                \"certificateAuthority\": \"Microsoft Enterprise\",\n                \"isAutoRenewal\": false,\n        \t\t\"renewBefore\": \"0\",\n                \"autoRegenerateEnabled\": false,\n                \"regenerateBeforeInDays\": \"0\",\n                \"caSettingName\": csr[0],\n                \"certificateType\": \"\",\n                \"name\": str(\"<%cert_authority%>\")+\" CA connector\",\n                \"description\": \"\",\n                \"file\": \"\",\n                \"csrParameters\": {\n                    \"commonName\": data.get(\"common_name\") if policy_type == \"Strict\" and data.get(\"common_name\") else csr[1],\n                    \"subjectAlternativeNames\": san,\n                    \"directoryNames\": csr[2] or \"\",\n                    \"dNSNames\": ','.join(data.get(\"dns\")) if policy_type == \"Strict\" and data.get(\"dns\") else csr[3],\n                    \"rfc822Names\": csr[4] or \"\",\n                    \"iPAddresses\": csr[5] or \"\",\n                    \"registeredIDs\": csr[6] or \"\",\n                    \"uniformResourceIdentifiers\": csr[7] or \"\",\n                    \"otherNames\": csr[8] or \"\",\n                    \"organization\": data.get(\"org\") if policy_type == \"Strict\" and data.get(\"org\") else csr[9],\n                    \"organizationUnit\": data.get(\"org_unit\") if policy_type == \"Strict\" and data.get(\"org_unit\") else csr[10],\n                    \"locality\": data.get(\"locality\") if policy_type == \"Strict\" and data.get(\"locality\") else csr[11],\n                    \"state\": data.get(\"state\") if policy_type == \"Strict\" and data.get(\"state\") else csr[12],\n                    \"country\": data.get(\"country\") if policy_type == \"Strict\" and data.get(\"country\") else csr[13],\n                    \"mailAddress\": data.get(\"email\") if policy_type == \"Strict\" and data.get(\"email\") else csr[14],\n                    \"encryptedChallengePassword\": \"\",\n                    \"hashFunction\": csr[16],\n                    \"keyType\": csr[17],\n                    \"bitLength\": csr[18],\n                    \"postalCode\": \"\",\n                    \"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n                    \"enhancedSANTypes\": {\n                        \"directoryNames\": csr[2].split(\";\") if csr[2] else [],\n                        \"dNSNames\": dns_names,\n                        \"rfc822Names\": csr[4].split(\",\") if csr[4] else [],\n                        \"iPAddresses\": csr[5].split(\",\") if csr[5] else [],\n                        \"registeredIDs\": csr[6].split(\",\") if csr[6] else [],\n                        \"uniformResourceIdentifiers\": csr[7].split(\",\") if csr[7] else [],\n                        \"otherNames\": csr[8].split(\",\") if csr[8] else []\n                    }\n                },\n                \"certAttachments\": {\n                    \"userDefinedFileName\": \"\",\n                    \"comments\": \"\",\n                    \"fileName\": \"\",\n                    \"attachmentFile\": \"\"\n                },\n                \"certAttributes\": {\n                },\n                \"genericFields\": {\n                },\n                \"vendorSpecificDetails\": {\n                    \"templateName\": csr[19]\n                }\n            },\n            \"certificateGroup\": {\n                \"name\": \"<%assign_group%>\"\n            },\n            \"fileIds\": []\n        }\n    }\n    \n    logger.info(\"Payload for CSR cert_ca_connector_info\"+str(payload))\n    # AVX::LOG(\"Payload-->>\"+str(payload))\n    \n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    logger.info(\"Status code : \"+str(response.status_code))\n    logger.info(\"Response REASON : \"+str(response.reason))\n    logger.info(\"Response TEXT : \"+str(response.text))\n\n    logger.info(\"Response code : \"+str(response))\n    response = response.json().get(\"response\")\n    logger.info(response)\n    AVX::LOG(\"Response-->>\"+str(response))\n\n    return response.get(\"uuid\")\n\ndef check_strict_or_suggestive():\n    \"\"\"\n    Function to Fetch the configured certificate group\n    \n    :return: \"Strict\" or \"Suggestive\"\n    \"\"\"\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n    # logger.info('&&&\\n')\n    # logger.info(str(response))\n    \n    return response.get(\"response\").get(\"type\")\n\ndef cert_submit_csr_hsv(uuid):\n    '''\n    The function is to submit the CSR\n    :param1 uuid (str) : UUID of the certificate to be submitted\n    :return response (dict): Certificate CSR content\n    NOTE : The UUID of the certificate changes after the issuance of the certificate\n    '''\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-submit-csr-hv?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    payload =  {\n        \"payload\":{\n            \"certificateUuid\":uuid,\n            \"comments\":\"\",\n            \"action\":\"Submit\",\n            \"submit\":true\n        }\n    }\n    \n\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json()\n    logger.info(response)\n    return response\n\nif __name__ == \"__main__\":\n    \n    certificate_group = getCertificateGroup()\n    policy_type = check_strict_or_suggestive()\n    # if policy_type == \"Strict\":\n    #     AVX::LOG(str(\"Since the policy associated with the group \"+ \"<%assign_group%>\" +\" is Strict. The CSR parameters associated with the policy has been taken.\"))\n    AVX::LOG(\"CERT GROUP\")\n    AVX::LOG(str(certificate_group))\n    \n    a = '<%upload_csv%>'\n    file_name = get_file('<%upload_csv%>')\n    c = 1\n    with open(file_name, 'r') as data_file:\n        reader = csv.reader(data_file, delimiter='\\n')\n        for row in reader:\n            if c == 1:\n                c+=1\n                continue\n            csr = row[0].split(\",\")\n            uuid = cert_ca_connector_info(csr)\n            AVX::LOG(\"uuid : \"+str(uuid))\n            if uuid:\n                resp = cert_submit_csr_hsv(uuid)\n                time.sleep(3)\n            # fetch = cert_fetch(uuid)\n            \n    AVX::OUTPUT({})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "createform_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "MS create certificates",
    "subFlowID" : "Jvvtkpcr",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "assign_group",
      "value" : "<%assign_group%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "assign_group",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "uploadcsr",
      "value" : "<%uploadcsr%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "csr_parameters",
      "value" : "<%csr_parameters%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_parameters",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_2",
    "task_name" : "Create certificate",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import sys\nimport json\nimport requests\nimport ast\nimport os\nfrom configobj import ConfigObj\n\nsys.path.insert(0,AVX::HELPER)\nsys.path.insert(0,AVX::DEPENDENCIES)\nimport appviewx\nimport logger_util\ntrue = True\nfalse = False\nnull = None\n\nimport base64\ndef encrypt_password(password):\n    '''\n    The function encrypt_password is to encrypt the plain text password to encrypted password\n    :param1 password (str): The password in plain text\n    :return encrypted_pass (str): The encrypted password\n    '''\n    if password:\n        enc_pass = base64.b64encode(password.encode(\"utf-8\"))\n        encrypted_pass = str(enc_pass,\"utf-8\")\n        return encrypted_pass\n    return ''\n\n\ndef fetch_gateway_key():\n    '''\n    The function is to get the gateway url and gateway key of the instance\n    '''\n    conf_content = {}\n    abs_path = os.path.dirname(os.path.abspath(__file__))\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\n    config = ConfigObj(prop_file_path)\n    return config['GATEWAY_BASE_URL'], config['GATEWAY_KEY']\n\n\ndef cert_ca_connector_info(csr):\n    '''\n    The cert_ca_connector_info function takes in csr parameters and gives the UUID for submission of certificate\n    params csr(dict): CSR parameters\n    return (str): Returns UUID of the new certificates\n    '''\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    san = [\"dNSNames\"]\n    \n    if csr.get(\"directory_name\"):\n        san.append(\"directoryNames\")\n    if csr.get(\"email_san\"):\n        san.append(\"rfc822Names\")\n    if csr.get(\"ip_address\"):\n        san.append(\"iPAddresses\")\n    if csr.get(\"registered_id_san\"):\n        san.append(\"registeredIDs\")\n    if csr.get(\"url_san\"):\n        san.append(\"uniformResourceIdentifiers\")\n    if csr.get(\"other_name_san\"):\n        san.append(\"otherNames\")\n    if len(san)>1:\n        san.insert(0,\"multiselect-all\")\n        \n    san_dns = []\n    san_dns_r = []\n    \n    if csr.get(\"dns\"):\n        san_dns.append(csr.get(\"common_name\"))\n        san_dns.extend(csr.get(\"dns\").split(\",\"))\n    \n    \n    payload = {\n        \"payload\" : {\n            \"csrGenerationSource\": \"appviewx\",\n            \"caConnectorInfo\": {\n                \"_id\": \"\",\n                \"certificateUuid\": \"\",\n                \"existingUuid\": \"\",\n                \"certificateAuthority\": \"Microsoft Enterprise\",\n                \"isAutoRenewal\": true if csr.get(\"renew_auto\")==\"Yes\" else false,\n                \"renewBefore\":csr.get(\"start_renew\",\"0\"),\n                \"autoRegenerateEnabled\": true if csr.get(\"regen_auto\")==\"Yes\" else false,\n                \"regenerateBeforeInDays\": csr.get(\"start_regen\",\"0\"),\n                \"caSettingName\": csr.get(\"ca_account\"),\n                \"certificateType\": \"\",\n                \"name\": str(\"<%cert_authority%>\")+\" CA connector\",\n                \"description\": \"\",\n                \"file\": \"\",\n                \"csrParameters\": {\n                    \"commonName\": csr.get(\"common_name\"),\n                    \"subjectAlternativeNames\": san,\n                    \"directoryNames\": csr.get(\"directory_name\"),\n                    \"dNSNames\": csr.get(\"dns\") or \"\",\n                    \"rfc822Names\": csr.get(\"email_san\") or \"\",\n                    \"iPAddresses\": csr.get(\"ip_address_san\") or \"\",\n                    \"registeredIDs\": csr.get(\"registered_id_san\"),\n                    \"uniformResourceIdentifiers\": csr.get(\"url_san\"),\n                    \"otherNames\": csr.get(\"other_name_san\"),\n                    \"organization\": csr.get(\"org\") or \"\",\n                    \"organizationUnit\": csr.get(\"org_unit\") or \"\",\n                    \"locality\": csr.get(\"locality\") or \"\",\n                    \"state\": csr.get(\"state\") or \"\",\n                    \"country\": csr.get(\"country\") or \"\",\n                    \"mailAddress\": csr.get(\"email\") or \"\",\n                    \"encryptedChallengePassword\": encrypt_password(csr.get(\"confirm_pass\")),\n                    \"hashFunction\": csr.get(\"hash_function\"),\n                    \"keyType\": csr.get(\"key_type\").split('-')[0].strip(),\n                    \"bitLength\": csr.get(\"key_type\").split('-')[1].strip(),\n                    \"postalCode\": \"\",\n                    \"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n                    \"enhancedSANTypes\": {\n                        \"directoryNames\": csr.get(\"directory_name\").split(\";\") if csr.get(\"directory_name\") else [],\n                        \"dNSNames\": san_dns,\n                        \"rfc822Names\": csr.get(\"email_san\").split(\",\") if csr.get(\"email_san\") else [],\n                        \"iPAddresses\": csr.get(\"ip_address_san\").split(\",\") if csr.get(\"ip_address_san\") else [],\n                        \"registeredIDs\": csr.get(\"registered_id_san\").split(\",\") if csr.get(\"registered_id_san\") else [],\n                        \"uniformResourceIdentifiers\": csr.get(\"url_san\").split(\",\") if csr.get(\"url_san\") else [],\n                        \"otherNames\": csr.get(\"other_name_san\").split(\",\") if csr.get(\"other_name_san\") else []\n                    }\n                },\n                \"certAttachments\": {\n                    \"userDefinedFileName\": \"\",\n                    \"comments\": \"\",\n                    \"fileName\": \"\",\n                    \"attachmentFile\": \"\"\n                },\n                \"certAttributes\": {\n                },\n                \"genericFields\": {\n                },\n                \"vendorSpecificDetails\": {\n                    \"templateName\": csr.get(\"template_name\")\n                }\n            },\n            \"certificateGroup\": {\n                \"name\": \"<%assign_group%>\"\n            },\n            \"fileIds\": []\n        }\n    }\n    \n    logger.info(\"cert_ca_connector_info Payload : \"+str(payload))\n    response1 = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response1.json().get(\"response\")\n    logger.info(\"cert_ca_connector_info Response : \"+str(response))\n    if not response1:\n        logger.info(\"REASON \" +str(response1.reason))\n        AVX::LOG(\"REASON \" +str(response1.reason))\n        \n    return response.get(\"uuid\")\n\ndef cert_ca_connector_info_from_upload_csr(csr):\n    '''\n    The cert_ca_connector_info_from_upload_csr function takes in csr parameters and gives the UUID for submission of certificate\n    params csr(dict): All the csr parameters are available\n    return uuid(str): Returns UUID of the new certificates\n    '''\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    san = [\"dNSNames\"]\n    \n    if csr.get(\"directory_name_san_uploadcsr\"):\n        san.append(\"directoryNames\")\n    if csr.get(\"email_san_uploadcsr\"):\n        san.append(\"rfc822Names\")\n    if csr.get(\"ip_address_san_uploadcsr\"):\n        san.append(\"iPAddresses\")\n    if csr.get(\"registered_id_san_uploadcsr\"):\n        san.append(\"registeredIDs\")\n    if csr.get(\"url_san_uploadcsr\"):\n        san.append(\"uniformResourceIdentifiers\")\n    if csr.get(\"other_name_san_uploadcsr\"):\n        san.append(\"otherNames\")\n    if len(san)>1:\n        san.insert(0,\"multiselect-all\")\n        \n    san_dns_r = []\n    \n    if csr.get(\"dns_uploadcsr\"):\n        san_dns_r.append(csr.get(\"cn\"))\n        san_dns_r.extend(csr.get(\"dns_uploadcsr\").split(\",\"))\n\n    payload = {\n        \"payload\" : {\n            \"csrGenerationSource\": \"appviewx\",\n            \"caConnectorInfo\": {\n                \"_id\": \"\",\n                \"certificateUuid\": \"\",\n                \"existingUuid\": \"\",\n                \"certificateAuthority\": \"<%cert_authority%>\",\n                \"isAutoRenewal\": true if csr.get(\"renew_auto_uploadcsr\")==\"Yes\" else false,\n                \"renewBefore\":csr.get(\"start_renew_uploadcsr\",\"0\"),\n                \"autoRegenerateEnabled\": true if csr.get(\"regen_auto_uploadcsr\")==\"Yes\" else false,\n                \"regenerateBeforeInDays\": csr.get(\"start_regen_uploadcsr\",\"0\"),\n                \"caSettingName\": csr.get(\"ca_account_uploadcsr\"),\n                \"certificateType\": \"\",\n                \"name\": str(\"<%cert_authority%>\")+\" CA connector\",\n                \"description\": \"\",\n                \"file\": \"\",\n                \"csrParameters\": {\n                    \"commonName\": csr.get(\"cn\"),\n                    \"subjectAlternativeNames\": san,\n                    \"directoryNames\": csr.get(\"directory_name_uploadcsr\"),\n                    \"dNSNames\": csr.get(\"dns_uploadcsr\") or \"\",\n                    \"rfc822Names\": csr.get(\"email_san_uploadcsr\") or \"\",\n                    \"iPAddresses\": csr.get(\"ip_address_uploadcsr\") or \"\",\n                    \"registeredIDs\": csr.get(\"registered_id_san_uploadcsr\"),\n                    \"uniformResourceIdentifiers\": csr.get(\"url_san_uploadcsr\"),\n                    \"otherNames\": csr.get(\"other_name_san_uploadcsr\"),\n                    \"organization\": csr.get(\"org_uploadcsr\") or \"\",\n                    \"organizationUnit\": csr.get(\"org_unit_uploadcsr\") or \"\",\n                    \"locality\": csr.get(\"locality_uploadcsr\") or \"\",\n                    \"state\": csr.get(\"state_uploadcsr\") or \"\",\n                    \"country\": csr.get(\"country_uploadcsr\") or \"\",\n                    \"mailAddress\": csr.get(\"email_uploadcsr\") or \"\",\n                    \"encryptedChallengePassword\": \"\",\n                    \"hashFunction\": csr.get(\"hash_function_uploadcsr\"),\n                    \"keyType\": csr.get(\"key_type_uploadcsr\"),\n                    \"bitLength\": csr.get(\"bit_length_uploadcsr\"),\n                    \"postalCode\": \"\",\n                    \"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n                    \"enhancedSANTypes\": {\n                        \"directoryNames\": csr.get(\"directory_name_uploadcsr\").split(\";\") if csr.get(\"directory_name_uploadcsr\") else [],\n                        \"dNSNames\":san_dns_r,\n                        \"rfc822Names\": csr.get(\"email_san_uploadcsr\").split(\",\") if csr.get(\"email_san_uploadcsr\") else [],\n                        \"iPAddresses\": csr.get(\"ip_address_san_uploadcsr\").split(\",\") if csr.get(\"ip_address_san_uploadcsr\") else [],\n                        \"registeredIDs\": csr.get(\"registered_id_san_uploadcsr\").split(\",\") if csr.get(\"registered_id_san_uploadcsr\") else [],\n                        \"uniformResourceIdentifiers\": csr.get(\"url_san_uploadcsr\").split(\",\") if csr.get(\"url_san_uploadcsr\") else [],\n                        \"otherNames\": csr.get(\"other_name_san_uploadcsr\").split(\",\") if csr.get(\"other_name_san_uploadcsr\") else []\n                    }\n                },\n                \"certAttachments\": {\n                    \"userDefinedFileName\": \"\",\n                    \"comments\": \"\",\n                    \"fileName\": \"\",\n                    \"attachmentFile\": \"\"\n                },\n                \"certAttributes\": {\n                },\n                \"genericFields\": {\n                },\n                \"vendorSpecificDetails\": {\n                    \"templateName\": csr.get(\"template_name_uploadcsr\")\n                }\n            },\n            \"certificateGroup\": {\n                \"name\": \"<%assign_group%>\"\n            },\n            \"fileIds\": []\n        }\n    }\n    \n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json().get(\"response\")\n    logger.info(response)\n    return response.get(\"uuid\")\n\ndef cert_submit_new_csr(uuid):\n    '''\n    The cert_submit_new_csr function takes in uuid for submission of certificate\n    params uuid: uuid for submission of certificate\n    return : Returns the response of the following API /cert-submit-csr-hv\n    '''\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-submit-csr-hv?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    payload =  {\n        \"payload\":{\n            \"certificateUuid\":uuid,\n            \"comments\":\"\",\n            \"action\":\"Submit\",\n            \"submit\":true\n        }\n    }\n    # AVX::LOG(\"PAYLOAD\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json()\n    # AVX::LOG(\"Response\"+str(response))\n    logger.info(response)\n    return response\n\ndef check_strict_or_suggestive():\n    \"\"\"\n    Function to Fetch the configured certificate group\n    \n    :return: \"Strict\" or \"Suggestive\"\n    \"\"\"\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n    # logger.info('&&&\\n')\n    # logger.info(str(response))\n    \n    return response.get(\"response\").get(\"type\")\n    \ndef strict_cert_ca_connector_info(csr):\n    '''\n    The strict_cert_ca_connector_info function takes in csr parameters and gives the UUID for submission of certificate, replaces the csr parameters from the policy\n    params csr(dict): All the csr parameters are available\n    return uuid(str): Returns UUID of the new certificates\n    '''\n    AVX::LOG(str(\"---STRICT---\"))\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n\n    data = {}\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\n            data['common_name'] = csr_params.get(\"commonName\")\n            data['dns'] = csr_params.get('subjectAlternativeNames')\n            data['org'] = csr_params.get(\"organization\")\n            data['org_unit'] = csr_params.get('organizationUnit')\n            data['locality'] = csr_params.get('locality')\n            data['state'] = csr_params.get('state')\n            data['country'] = csr_params.get('country')\n            data['email'] = ','.join(csr_params.get('mailAddress'))\n    \n    \n    \n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    san = [\"dNSNames\"]\n    \n    if csr.get(\"directory_name\"):\n        san.append(\"directoryNames\")\n    if csr.get(\"email_san\"):\n        san.append(\"rfc822Names\")\n    if csr.get(\"ip_address\"):\n        san.append(\"iPAddresses\")\n    if csr.get(\"registered_id_san\"):\n        san.append(\"registeredIDs\")\n    if csr.get(\"url_san\"):\n        san.append(\"uniformResourceIdentifiers\")\n    if csr.get(\"other_name_san\"):\n        san.append(\"otherNames\")\n    if len(san)>1:\n        san.insert(0,\"multiselect-all\")\n        \n    san_dns = []\n    san_dns_r = []\n    \n    if csr.get(\"dns\"):\n        san_dns.append(csr.get(\"common_name\"))\n        if data['dns']:\n            san_dns.extend(data['dns'])\n        san_dns.extend(csr.get(\"dns\").split(\",\"))\n    \n    \n    payload = {\n        \"payload\" : {\n            \"csrGenerationSource\": \"appviewx\",\n            \"caConnectorInfo\": {\n                \"_id\": \"\",\n                \"certificateUuid\": \"\",\n                \"existingUuid\": \"\",\n                \"certificateAuthority\": \"Microsoft Enterprise\",\n                \"isAutoRenewal\": true if csr.get(\"renew_auto\")==\"Yes\" else false,\n                \"renewBefore\":csr.get(\"start_renew\",\"0\"),\n                \"autoRegenerateEnabled\": true if csr.get(\"regen_auto\")==\"Yes\" else false,\n                \"regenerateBeforeInDays\": csr.get(\"start_regen\",\"0\"),\n                \"caSettingName\": csr.get(\"ca_account\"),\n                \"certificateType\": \"\",\n                \"name\": str(\"<%cert_authority%>\")+\" CA connector\",\n                \"description\": \"\",\n                \"file\": \"\",\n                \"csrParameters\": {\n                    \"commonName\": csr.get(\"common_name\"),\n                    \"subjectAlternativeNames\": san,\n                    \"directoryNames\": csr.get(\"directory_name\"),\n                    \"dNSNames\": ','.join(csr.get(\"dns\").split(\",\")) or \"\",\n                    \"rfc822Names\": csr.get(\"email_san\") or \"\",\n                    \"iPAddresses\": csr.get(\"ip_address_san\") or \"\",\n                    \"registeredIDs\": csr.get(\"registered_id_san\"),\n                    \"uniformResourceIdentifiers\": csr.get(\"url_san\"),\n                    \"otherNames\": csr.get(\"other_name_san\"),\n                    \"organization\": data.get('org') if data.get(\"org\") else csr.get(\"org\"),\n                    \"organizationUnit\": data.get(\"org_unit\") if data.get(\"org_unit\") else csr.get(\"org_unit\"),\n                    \"locality\": data.get(\"locality\") if data.get(\"locality\") else csr.get(\"locality\"),\n                    \"state\": data.get(\"state\") if data.get(\"state\") else csr.get(\"state\"),\n                    \"country\": data.get(\"country\") if data.get(\"country\") else csr.get(\"country\"),\n                    \"mailAddress\": data.get(\"email\") if data.get(\"email\") else csr.get(\"email\"),\n                    \"encryptedChallengePassword\": encrypt_password(\"confirm_pass\"),\n                    \"hashFunction\": csr.get(\"hash_function\"),\n                    \"keyType\": csr.get(\"key_type\").split('-')[0].strip(),\n                    \"bitLength\": csr.get(\"key_type\").split('-')[1].strip(),\n                    \"postalCode\": \"\",\n                    \"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n                    \"enhancedSANTypes\": {\n                        \"directoryNames\": csr.get(\"directory_name\").split(\";\") if csr.get(\"directory_name\") else [],\n                        \"dNSNames\": san_dns,\n                        \"rfc822Names\": csr.get(\"email_san\").split(\",\") if csr.get(\"email_san\") else [],\n                        \"iPAddresses\": csr.get(\"ip_address_san\").split(\",\") if csr.get(\"ip_address_san\") else [],\n                        \"registeredIDs\": csr.get(\"registered_id_san\").split(\",\") if csr.get(\"registered_id_san\") else [],\n                        \"uniformResourceIdentifiers\": csr.get(\"url_san\").split(\",\") if csr.get(\"url_san\") else [],\n                        \"otherNames\": csr.get(\"other_name_san\").split(\",\") if csr.get(\"other_name_san\") else []\n                    }\n                },\n                \"certAttachments\": {\n                    \"userDefinedFileName\": \"\",\n                    \"comments\": \"\",\n                    \"fileName\": \"\",\n                    \"attachmentFile\": \"\"\n                },\n                \"certAttributes\": {\n                },\n                \"genericFields\": {\n                },\n                \"vendorSpecificDetails\": {\n                    \"templateName\": csr.get(\"template_name\")\n                }\n            },\n            \"certificateGroup\": {\n                \"name\": \"<%assign_group%>\"\n            },\n            \"fileIds\": []\n        }\n    }\n    \n    # AVX::LOG(\"***---Payload-->>\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json().get(\"response\")\n    logger.info(response)\n    # AVX::LOG(\"Response-->>\"+str(response))\n    return response.get(\"uuid\")\n\ndef strict_cert_ca_connector_info_upload_csr(csr):\n    '''\n    The strict_cert_ca_connector_info_upload_csr function takes in csr parameters and gives the UUID for submission of certificate, replaces the csr parameters from the policy\n    params csr(dict): All the csr parameters are available\n    return uuid(str): Returns UUID of the new certificates\n    '''\n    AVX::LOG(str(\"---STRICT---\"))\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n\n    data = {}\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\n            data['cn'] = csr_params.get(\"commonName\")\n            data['dns_uploadcsr'] = csr_params.get(\"subjectAlternativeNames\")\n            data['org_uploadcsr'] = csr_params.get(\"organization\")\n            data['org_unit_uploadcsr'] = csr_params.get('organizationUnit')\n            data['locality_uploadcsr'] = csr_params.get('locality')\n            data['state_uploadcsr'] = csr_params.get('state')\n            data['country_uploadcsr'] = csr_params.get('country')\n            data['email_uploadcsr'] = ','.join(csr_params.get('mailAddress'))\n    \n    \n    \n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    san = [\"dNSNames\"]\n    \n    if csr.get(\"directory_name_san_uploadcsr\"):\n        san.append(\"directoryNames\")\n    if csr.get(\"email_san_uploadcsr\"):\n        san.append(\"rfc822Names\")\n    if csr.get(\"ip_address_san_uploadcsr\"):\n        san.append(\"iPAddresses\")\n    if csr.get(\"registered_id_san_uploadcsr\"):\n        san.append(\"registeredIDs\")\n    if csr.get(\"url_san_uploadcsr\"):\n        san.append(\"uniformResourceIdentifiers\")\n    if csr.get(\"other_name_san_uploadcsr\"):\n        san.append(\"otherNames\")\n    if len(san)>1:\n        san.insert(0,\"multiselect-all\")\n        \n    san_dns = []\n    san_dns_r = []\n    \n    if csr.get(\"dns_uploadcsr\"):\n        san_dns.append(csr.get(\"cn\"))\n        if data['dns_uploadcsr']:\n            san_dns.extend(data['dns_uploadcsr'])\n        san_dns.extend(csr.get(\"dns_uploadcsr\").split(\",\"))\n    \n    \n    payload = {\n        \"payload\" : {\n            \"csrGenerationSource\": \"appviewx\",\n            \"caConnectorInfo\": {\n                \"_id\": \"\",\n                \"certificateUuid\": \"\",\n                \"existingUuid\": \"\",\n                \"certificateAuthority\": \"Microsoft Enterprise\",\n                \"isAutoRenewal\": true if csr.get(\"renew_auto_uploadcsr\")==\"Yes\" else false,\n                \"renewBefore\":csr.get(\"start_renew_uploadcsr\",\"0\"),\n                \"autoRegenerateEnabled\": true if csr.get(\"regen_auto_uploadcsr\")==\"Yes\" else false,\n                \"regenerateBeforeInDays\": csr.get(\"start_regen_uploadcsr\",\"0\"),\n                \"caSettingName\": csr.get(\"ca_account\"),\n                \"certificateType\": \"\",\n                \"name\": str(\"<%cert_authority%>\")+\" CA connector\",\n                \"description\": \"\",\n                \"file\": \"\",\n                \"csrParameters\": {\n                    \"commonName\": csr.get(\"cn\"),\n                    \"subjectAlternativeNames\": san,\n                    \"directoryNames\": csr.get(\"directory_name_san_uploadcsr\"),\n                    \"dNSNames\": csr.get(\"dns_uploadcsr\") or \"\",\n                    \"rfc822Names\": csr.get(\"email_san_uploadcsr\") or \"\",\n                    \"iPAddresses\": csr.get(\"ip_address_san_uploadcsr\") or \"\",\n                    \"registeredIDs\": csr.get(\"registered_id_san_uploadcsr\"),\n                    \"uniformResourceIdentifiers\": csr.get(\"url_san_uploadcsr\"),\n                    \"otherNames\": csr.get(\"other_name_san_uploadcsr\"),\n                    \"organization\": data.get('org_r') if data.get(\"org_uploadcsr\") else csr.get(\"org_uploadcsr\"),\n                    \"organizationUnit\": data.get(\"org_unit_r\") if data.get(\"org_unit_uploadcsr\") else csr.get(\"org_unit_uploadcsr\"),\n                    \"locality\": data.get(\"locality_r\") if data.get(\"locality_uploadcsr\") else csr.get(\"locality_uploadcsr\"),\n                    \"state\": data.get(\"state_r\") if data.get(\"state_uploadcsr\") else csr.get(\"state_uploadcsr\"),\n                    \"country\": data.get(\"country_r\") if data.get(\"country_uploadcsr\") else csr.get(\"country_uploadcsr\"),\n                    \"mailAddress\": data.get(\"email_r\") if data.get(\"email_uploadcsr\") else csr.get(\"email_uploadcsr\"),\n                    \"encryptedChallengePassword\": \"\",\n                    \"hashFunction\": csr.get(\"hash_function_uploadcsr\"),\n                    \"keyType\": csr.get(\"key_type_uploadcsr\"),\n                    \"bitLength\": csr.get(\"bit_length_uploadcsr\"),\n                    \"postalCode\": \"\",\n                    \"certificateCategories\": [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n                    \"enhancedSANTypes\": {\n                        \"directoryNames\": csr.get(\"directory_name_san_uploadcsr\").split(\";\") if csr.get(\"directory_name_san_uploadcsr\") else [],\n                        \"dNSNames\": san_dns,\n                        \"rfc822Names\": csr.get(\"email_san_uploadcsr\").split(\",\") if csr.get(\"email_san_uploadcsr\") else [],\n                        \"iPAddresses\": csr.get(\"ip_address_san_uploadcsr\").split(\",\") if csr.get(\"ip_address_san_uploadcsr\") else [],\n                        \"registeredIDs\": csr.get(\"registered_id_san_uploadcsr\").split(\",\") if csr.get(\"registered_id_san_uploadcsr\") else [],\n                        \"uniformResourceIdentifiers\": csr.get(\"url_san_uploadcsr\").split(\",\") if csr.get(\"url_san_uploadcsr\") else [],\n                        \"otherNames\": csr.get(\"other_name_san_uploadcsr\").split(\",\") if csr.get(\"other_name_san_uploadcsr\") else []\n                    }\n                },\n                \"certAttachments\": {\n                    \"userDefinedFileName\": \"\",\n                    \"comments\": \"\",\n                    \"fileName\": \"\",\n                    \"attachmentFile\": \"\"\n                },\n                \"certAttributes\": {\n                },\n                \"genericFields\": {\n                },\n                \"vendorSpecificDetails\": {\n                    \"templateName\": csr.get(\"template_name_uploadcsr\")\n                }\n            },\n            \"certificateGroup\": {\n                \"name\": \"<%assign_group%>\"\n            },\n            \"fileIds\": []\n        }\n    }\n    \n\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json().get(\"response\")\n    logger.info(response)\n    # AVX::LOG(\"Response-->>\"+str(response))\n    return response.get(\"uuid\")\n\nif __name__ == \"__main__\":\n    uuid_list = []\n    policy_type = check_strict_or_suggestive()\n    \n\n    if '<%csr_parameters%>':\n        # AVX::LOG(str(type('<%csr_parameters%>')))\n        # AVX::LOG(str('<%csr_parameters%>'))\n        for csr in <%csr_parameters%>:\n            if policy_type == \"Strict\":\n                \n                uuid = strict_cert_ca_connector_info(csr)\n                # AVX::LOG(\"UUID : \"+str(uuid))\n                if uuid:\n                    resp = cert_submit_new_csr(uuid)\n                else:\n                    AVX::LOG(\"Kindly check the CSR inputs for the common name \"+str(csr.get(\"common_name\")))\n                AVX::LOG(str(\"Since the certificate policy is Strict, the certificate policy CSR parameters have been updated for the following common name : \")+str(csr.get(\"common_name\")))\n            else:\n                uuid = cert_ca_connector_info(csr)\n                if uuid:\n                    resp = cert_submit_new_csr(uuid)\n                else:\n                    AVX::LOG(\"Kindly check the inputs paramters for the common name : \"+str(csr.get(\"common_name\")))\n            # AVX::LOG(str(resp))\n        # cert_ca_connector_info()\n    elif '<%uploadcsr%>':\n        for csr in <%uploadcsr%>:\n            if policy_type == \"Strict\":\n                uuid = strict_cert_ca_connector_info_upload_csr(csr)\n                if uuid:\n                    resp = cert_submit_new_csr(uuid)\n                else:\n                    AVX::LOG(\"Kindly check the input parameters for the common name : \"+str(csr.get(\"cn\")))\n            else:\n                uuid = cert_ca_connector_info_from_upload_csr(csr)\n                if uuid:\n                    resp = cert_submit_new_csr(uuid)\n                else:\n                    AVX::LOG(\"Kindly check the input parameters for the common name : \"+str(csr.get(\"cn\")))\n            # AVX::LOG(str(resp))\n    AVX::OUTPUT({\"uuid_list\":uuid_list})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Join",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "flowIdsToJoin" : [ ],
    "_id" : null,
    "task_id" : "join_1",
    "task_name" : "Join",
    "task_type" : "join",
    "task_category" : "join",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "join",
    "group_name" : "General",
    "viewable_type" : "default"
  } ],
  "subFlowID" : "Jvvtkpcr",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "decision_1" : [ ],
    "createform_1" : [ {
      "name" : "Start regenerating",
      "key" : "start_regen",
      "value" : "start_regen",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "start_regen",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Registered ID",
      "key" : "registered_id_san",
      "value" : "registered_id_san",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "registered_id_san",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Bit length",
      "key" : "bit_length_uploadcsr",
      "value" : "bit_length_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "bit_length_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "IP Address (Subject alternative names)",
      "key" : "ip_address_san",
      "value" : "ip_address_san",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ip_address_san",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Start renewing",
      "key" : "start_renew_uploadcsr",
      "value" : "start_renew_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "start_renew_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Email address",
      "key" : "email",
      "value" : "email",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "email",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Country",
      "key" : "country",
      "value" : "country",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "country",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Key type - Bit length",
      "key" : "key_type",
      "value" : "key_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "key_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR generation",
      "key" : "csr_generation",
      "value" : "csr_generation",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "AppViewX,Upload CSR",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_generation",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Common name",
      "key" : "cn",
      "value" : "cn",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cn",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization",
      "key" : "org_uploadcsr",
      "value" : "org_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Regenerate automatically",
      "key" : "regen_auto",
      "value" : "regen_auto",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "regen_auto",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Please paste your CSR",
      "key" : "upload_csr",
      "value" : "upload_csr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upload_csr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Template name",
      "key" : "template_name",
      "value" : "template_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "template_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "State",
      "key" : "state_uploadcsr",
      "value" : "state_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "state_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate authority",
      "key" : "cert_auth",
      "value" : "cert_auth",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "<%cert_authority%>",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_auth",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "State",
      "key" : "state",
      "value" : "state",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "state",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization unit",
      "key" : "org_unit_uploadcsr",
      "value" : "org_unit_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org_unit_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "URL (Subject alternative name)",
      "key" : "url_san_uploadcsr",
      "value" : "url_san_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "url_san_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Directory name (Subject alternative name)",
      "key" : "directory_name_san_uploadcsr",
      "value" : "directory_name_san_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "directory_name_san_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Start renewing",
      "key" : "start_renew",
      "value" : "start_renew",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "start_renew",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "DNS (Subect alternative name)",
      "key" : "dns_uploadcsr",
      "value" : "dns_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "dns_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "URL (Subject alternative names)",
      "key" : "url_san",
      "value" : "url_san",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "url_san",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Other name (Subject alternative names)",
      "key" : "other_name_san",
      "value" : "other_name_san",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "other_name_san",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Renew automatically",
      "key" : "renew_auto",
      "value" : "renew_auto",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "renew_auto",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Locality",
      "key" : "locality",
      "value" : "locality",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "locality",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Regenerate automatically",
      "key" : "regen_auto_uploadcsr",
      "value" : "regen_auto_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "regen_auto_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Registered ID",
      "key" : "registered_id_san_uploadcsr",
      "value" : "registered_id_san_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "registered_id_san_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Renew automatically",
      "key" : "renew_auto_uploadcsr",
      "value" : "renew_auto_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "renew_auto_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization",
      "key" : "org",
      "value" : "org",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Common name",
      "key" : "common_name",
      "value" : "common_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "common_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "IP Address (Subject alternative names)",
      "key" : "ip_address_san_uploadcsr",
      "value" : "ip_address_san_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ip_address_san_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Organization unit",
      "key" : "org_unit",
      "value" : "org_unit",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "org_unit",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR parameters",
      "key" : "csr_parameters",
      "value" : "csr_parameters",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_parameters",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Template name",
      "key" : "template_name_uploadcsr",
      "value" : "template_name_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "template_name_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Other name (Subject alternative name)",
      "key" : "other_name_san_uploadcsr",
      "value" : "other_name_san_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "other_name_san_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Email",
      "key" : "email_uploadcsr",
      "value" : "email_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "email_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Country",
      "key" : "country_uploadcsr",
      "value" : "country_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "country_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Directory name (Subject alternative names)",
      "key" : "directory_name",
      "value" : "directory_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "directory_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Email (Suject alternative names)",
      "key" : "email_san",
      "value" : "email_san",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "email_san",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Locality",
      "key" : "locality_uploadcsr",
      "value" : "locality_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "locality_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CA account",
      "key" : "ca_account_uploadcsr",
      "value" : "ca_account_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_account_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Hash function",
      "key" : "hash_function_uploadcsr",
      "value" : "hash_function_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "hash_function_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CA account",
      "key" : "ca_account",
      "value" : "ca_account",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_account",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "DNS (Subject alternative names)",
      "key" : "dns",
      "value" : "dns",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "dns",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Hash function",
      "key" : "hash_function",
      "value" : "hash_function",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "hash_function",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Email address",
      "key" : "email_san_uploadcsr",
      "value" : "email_san_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "email_san_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR parameters",
      "key" : "uploadcsr",
      "value" : "uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Key type",
      "key" : "key_type_uploadcsr",
      "value" : "key_type_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "key_type_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Challenge password",
      "key" : "challenge_pass",
      "value" : "challenge_pass",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "challenge_pass",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "script_1" : [ ],
    "script_2" : [ {
      "name" : "uuid_list",
      "key" : "uuid_list",
      "value" : "uuid_list",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "uuid_list",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "join_1" : [ ]
  },
  "type" : null,
  "level" : 2,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Renamed Push",
  "description" : "",
  "flowName" : "MS create certificates",
  "workflowType" : "Default",
  "subFlowType" : "Flow",
  "parentSubFlowID" : "wkzaUXpL",
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : null,
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop flow",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "Ig7MFeOt",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "CSV_file_upload_or_Manual_entry" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "Failed" : [ {
        "taskId" : "createform_3",
        "taskName" : null,
        "subflowId" : "Ig7MFeOt",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "form",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "AppViewX create certificates",
    "subFlowID" : "5QWfKkZF",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "create_cert",
      "value" : "<%create_cert%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "create_cert",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "If",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "iM5chT1L",
    "helpContent" : null,
    "rule" : {
      "not" : false,
      "condition" : "AND",
      "rules" : [ {
        "operator" : "==",
        "value" : "<%create_cert%>",
        "comparedValue" : "CSV file upload"
      } ]
    },
    "_id" : null,
    "task_id" : "decision_1",
    "task_name" : "If",
    "task_type" : "decision",
    "task_category" : "decision",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "decision",
    "group_name" : "General",
    "viewable_type" : "custom",
    "rule_name" : "CSV_file_upload_or_Manual_entry"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Sectigo create certificates",
    "subFlowID" : "QaLFxO3O",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "assign_group",
      "value" : "<%assign_group%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "assign_group",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "upload_csv",
      "value" : "<%upload_csv%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upload_csv",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_1",
    "task_name" : "Processing CSV data",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import json\nimport sys\nimport gridfs\nfrom bson import ObjectId\nimport csv\nimport requests\nimport time\n\nsys.path.append(AVX::DEPENDENCIES)\nsys.path.append(AVX::HELPER)\n\nimport appviewx\nimport logger_util\nlogger = logger_util.get_logger('Cert Expiry Report')\n\nconn = appviewx.db_connection()\ndb = conn.appviewx\n\ntrue = True\nfalse = False\nnull = None\n\ndef write_file_to_appviewx(request_id, field_id, task_id, file_name):\n   \"\"\"\n   Method to write the given file to /var/tmp in AppViewX\n   :param db: Database connection object to AppViewX\n   :param request_id: RequestID of the uploaded file\n   :param field_id: FieldID of the uploaded file\n   :param task_id: TaskID of the uploaded file\n   :param file_name: Name of the uploaded file\n   :return: Path of the uploaded file\n   \"\"\"\n   with open(str(file_name), \"wb\") as obj_file:\n       uploaded_file_id = str(db.visualworkflow_request_uploaded_files.files.\\\n           find_one({\"metadata.requestId\": request_id, \\\n           \"metadata.fieldId\": field_id, \"metadata.taskId\": task_id},\\\n            {\"_id\": 1})[\"_id\"])\n       gfs = gridfs.GridFS(db, collection=\"visualworkflow_request_uploaded_files\")\n       content = gfs.get(ObjectId(uploaded_file_id)).read()\n       obj_file.write(content)\n   return str(file_name)\n\ndef get_file(uploaded_file):\n   \"\"\"\n   Method to get the metadata of the uploaded file from the database\n   :param db: Database connection object to AppViewX\n   :param uploaded_file: Name of the uploaded file\n   :return: Path of the uploaded file\n   \"\"\"\n   file_name = uploaded_file.get(\"fileName\", \"certificate_file.cer\")\n   request_id = uploaded_file[\"requestId\"]\n   field_id = uploaded_file[\"fieldId\"]\n   task_id = uploaded_file[\"taskId\"]\n   return write_file_to_appviewx(request_id, field_id, task_id, file_name)\n\n\ndef getCertificateGroup():\n    \"\"\"\n    Function to Fetch the configured certificate group\n    \n    :return: Certificate policy\n    \"\"\"\n    key = str()\n    gateway_url, gateway_key = fetch_gateway_key()\n    cwd = os.getcwd()\n    url = \"{}avxapi/cert-group-search?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n\n    # payload = {\"payload\":{\"log\": True,\"password\": base64.b64encode(file_password.encode()).decode(),\"uuId\": cert_id}}\n\n    payload = {\"payload\":{ \"startIndex\":0,\"displayLength\":100,\"searchText\":\"\",\"sortOrder\":\"asc\",\"sortColumn\":\"name\"}}\n    \n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json()\n    logger.info('--->'+str(response))\n    response = response.get(\"response\").get(\"data\")\n    \n    groups = []\n    for cert_group in response:\n        groups.append(cert_group.get(\"name\"))\n    \n    return groups\n\ndef fetch_gateway_key():\n    '''\n    fetch the gateway key from appviewx config file\n    :return: appviewx gateway key\n    '''\n    conf_content = {}\n    abs_path = os.path.dirname(os.path.abspath(__file__))\n\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\n    prop_file = open(prop_file_path)\n    prop_file_lines = prop_file.readlines()\n    for line in prop_file_lines:\n        if line is not \"\\n\" and \"GATEWAY_KEY\" in line or \"GATEWAY_BASE_URL\" in line:\n            conf_content[line.split(\"=\")[0]] = line.split(\"=\")[1].replace(\"\\n\", \"\")\n    return conf_content['GATEWAY_BASE_URL'], conf_content['GATEWAY_KEY']\n    prop_file.close()\n\n\ndef cert_ca_connector_info(csr):\n    gateway_url, gateway_key = fetch_gateway_key()\n    \n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n    \n    \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n\n    data = {}\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\n            data['cn'] = csr_params.get(\"commonName\")\n            data['dns'] = csr_params.get(\"subjectAlternativeNames\")\n            data['org'] = csr_params.get(\"organization\")\n            data['org_unit'] = csr_params.get('organizationUnit')\n            data['locality'] = csr_params.get('locality')\n            data['state'] = csr_params.get('state')\n            data['country'] = csr_params.get('country')\n            data['email'] = ','.join(csr_params.get('mailAddress'))\n    \n    \n    dns_names = []\n    \n    if data.get(\"cn\") and policy_type == \"Strict\":\n        dns_names.append(data.get(\"cn\"))\n    else:\n        dns_names.append(str(csr[1]).split(\",\") if csr[1] else csr[1])\n    \n    if data[\"dns\"]:\n        dns_names.extend(data[\"dns\"])\n    \n    gateway_url, gateway_key = fetch_gateway_key()\n    \n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    san = []\n\n    if csr[3]:\n        san.append(\"dNSNames\")\n    \n    \n    dns = list(csr[2].split(\" \")) if csr[2] != '' else []\n    dns_names = csr[3].split(\",\") if csr[3] != '' else []\n    dns.extend(dns_names)\n    \n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"<%cert_authority%>\",\n        \t\t\"isAutoRenewal\": false,\n        \t\t\"renewBefore\":\"0\",\n        \t\t\"autoRegenerateEnabled\": false,\n    \t\t\t\"regenerateBeforeInDays\": \"0\",\n        \t\t\"caSettingName\": csr[0],\n\n        \t\t\"certificateType\": csr[1],\n        \t\t\"name\": \"<%cert_authority%> \"+csr[1]+\" connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": data.get(\"cn\") if policy_type == \"Strict\" and data.get(\"cn\") else csr[2],\n        \t\t\t\"subjectAlternativeNames\": san,\n        \t\t\t\"dNSNames\": ','.join(data.get(\"dns\")) if policy_type == \"Strict\" and data.get(\"dns\") else csr[3],\n        \t\t\t\"organization\": data.get(\"org\") if policy_type == \"Strict\" and data.get(\"org\") else  csr[4],\n        \t\t\t\"organizationUnit\": data.get(\"org_unit\") if policy_type == \"Strict\" and data.get(\"org_unit\") else csr[5],\n        \t\t\t\"streetAddress\":csr[6],\n        \t\t\t\"locality\": data.get(\"locality\") if policy_type == \"Strict\" and data.get(\"locality\") else csr[7],\n        \t\t\t\"state\": data.get(\"state\") if policy_type == \"Strict\" and data.get(\"state\") else csr[8],\n        \t\t\t\"country\": data.get(\"country\") if policy_type == \"Strict\" and data.get(\"country\") else csr[9],\n        \t\t\t\"postalCode\": csr[10],\n        \t\t\t\"mailAddress\": data.get(\"email\") if policy_type == \"Strict\" and data.get(\"email\") else csr[11],\n        \t\t\t\"encryptedChallengePassword\": csr[13],\n        \t\t\t\"hashFunction\": csr[14],\n        \t\t\t\"keyType\": csr[15],\n        \t\t\t\"bitLength\": csr[16],\n        \t\t\t\"certificateCategories\": [\"<%certificate_profile%>\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"],\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": data.get(\"dns\") if policy_type == \"Strict\" and data.get(\"dns\") else csr[3].split(',')\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(csr[12]),\n        \t\t\"vendorSpecificDetails\": {\n        \t\t    \"orderId\": \"\",\n        \t\t    \"numberServer\": csr[18],\n\t\t        \t\"serverType\": csr[17] or \"\"\n        \t\t}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n        \n    logger.info(\"Payload for CSR cert_ca_connector_info\"+str(payload))\n\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    logger.info(\"Status code : \"+str(response.status_code))\n    logger.info(\"Response REASON : \"+str(response.reason))\n    logger.info(\"Response TEXT : \"+str(response.text))\n\n    logger.info(\"Response code : \"+str(response))\n    if response.status_code != 200:\n        AVX::LOG(\"The certificate with common name \"+str(csr[2])+\" has not been created due to \"+str(response.reason))\n        return '' \n    response = response.json().get(\"response\")\n    logger.info(response)\n    \n    return response.get(\"uuid\")\n\n\ndef check_strict_or_suggestive():\n    \"\"\"\n    Function to Fetch the configured certificate group\n    \n    :return: \"Strict\" or \"Suggestive\"\n    \"\"\"\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n\n    return response.get(\"response\").get(\"type\")\n\ndef cert_submit_csr_hsv(uuid):\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-submit-csr-hv?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    payload =  {\n        \"payload\":{\n            \"certificateUuid\":uuid,\n            \"comments\":\"\",\n            \"action\":\"Submit\",\n            \"submit\":true\n        }\n    }\n    \n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    if response.status_code != 200:\n        raise Exception(str(response.reason))\n    response = response.json()\n    logger.info(response)\n    return response\n\n\n\nif __name__ == \"__main__\":\n    \n    certificate_group = getCertificateGroup()\n    policy_type = check_strict_or_suggestive()\n\n    a = '<%upload_csv%>'\n    file_name = get_file('<%upload_csv%>')\n    c = 1\n    with open(file_name, 'r') as data_file:\n        reader = csv.reader(data_file, delimiter='\\n')\n        for row in reader:\n            if c == 1:\n                c+=1\n                continue\n            csr = row[0].split(\",\")\n            uuid = cert_ca_connector_info(csr)\n            if uuid:\n                resp = cert_submit_csr_hsv(uuid)\n                time.sleep(3)\n    \n    AVX::OUTPUT({})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "createform_3",
        "taskName" : null,
        "subflowId" : "Ig7MFeOt",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "join_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "join",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "Sectigo create certificates",
    "subFlowID" : "QaLFxO3O",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "operation_type",
      "value" : "<%operation_type%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "operation_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "sessionId",
      "value" : "<%sessionId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "sessionId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "csr_uploadcsr",
      "value" : "<%csr_uploadcsr%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "certificate_profile",
      "value" : "<%certificate_profile%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "certificate_profile",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "csr_avx",
      "value" : "<%csr_avx%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_avx",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "assign_group",
      "value" : "<%assign_group%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "assign_group",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Script",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "wkzaUXpL",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_2",
    "task_name" : "Create certificate",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "import sys\nimport json\nimport requests\nimport ast\nimport os\nfrom configobj import ConfigObj\n\nsys.path.insert(0,AVX::HELPER)\nsys.path.insert(0,AVX::DEPENDENCIES)\nimport logger_util\n\ntrue = True\nfalse = False\nnull = None\n\nimport base64\ndivision_id =\"\"\nlogger = logger_util.get_logger(\"Sectigo Create Certificate\")\n\noperation_type = '<%operation_type%>'\n\ndef encrypt_pass(password):\n\n    encrypted_pass = \"\"\n    \n    if password:\n    \tenc_pass = base64.b64encode(password.encode(\"utf-8\"))\n    \tencrypted_pass = str(enc_pass,\"utf-8\")\n    \n    return encrypted_pass\n\n\ndef fetch_gateway_key():\n    conf_content = {}\n    abs_path = os.path.dirname(os.path.abspath(__file__))\n    prop_file_path = abs_path + \"/../properties/appviewx.properties\"\n    config = ConfigObj(prop_file_path)\n    return config['GATEWAY_BASE_URL'], config['GATEWAY_KEY']\n\n\ndef cert_ca_connector_info(csr):\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    san = []\n    san_dns = []\n    \n    if csr.get(\"dns\"):\n        san.append(\"multiselect-all\")\n        san.append(\"dNSNames\")\n        if operation_type == 'Create':\n            san_dns.append(csr.get(\"cert_cn\"))\n        san_dns.extend(csr.get(\"dns\").split(\",\"))\n    \n    certificateCategories = \"\"\n    if operation_type == 'Create':\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\n    else:\n        cert_profile = csr.get('cert_profile_regen')\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\n        \n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"<%cert_authority%>\",\n        \t\t\"isAutoRenewal\": false if csr.get(\"renew_automatically\") ==\"No\" else true,\n        \t\t\"renewBefore\": csr.get(\"renew_before\",\"0\"),\n        \t\t\"autoRegenerateEnabled\": false if csr.get(\"regen_automatically\") == \"No\" else true,\n        \t\t\"regenerateBeforeInDays\": csr.get(\"regen_before\",\"0\"),\n        \t\t\"caSettingName\": csr.get(\"ca_account\") or \"\",\n        \t    \n        \t\t\"certificateType\": csr.get(\"cert_type\") or \"\",\n        \t\t\"name\": \"<%cert_authority%> \"+csr.get(\"cert_type\")+\" connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": csr.get(\"cert_cn\"),\n        \t\t\t\"subjectAlternativeNames\": san,\n        \t\t\t\"dNSNames\": csr.get(\"dns\") or \"\",\n        \t\t\t\n        \t\t\t\"organization\": csr.get(\"org\") or \"\",\n        \t\t\t\"organizationUnit\": csr.get(\"org_unit\") or \"\",\n        \t\t\t\"streetAddress\":csr.get(\"org_address\") or \"\",\n        \t\t\t\"locality\": csr.get(\"city\") or \"\",\n        \t\t\t\"state\": csr.get(\"state\") or \"\",\n        \t\t\t\"country\": csr.get(\"country\") or \"\",\n        \t\t\t\"postalCode\": csr.get(\"zip_code\") or \"\",\n        \t\t\t\"mailAddress\": csr.get(\"email_address\") or \"\",\n        \t\t\t\"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\")),\n        \t\t\t\"hashFunction\": csr.get(\"hash_function\"),\n        \t\t\t\"keyType\": csr.get(\"key_type_bit_len\").split('-')[0].strip(),\n        \t\t\t\"bitLength\": csr.get(\"key_type_bit_len\").split('-')[1].strip(),\n        \t\t\t\"certificateCategories\": certificateCategories,\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": san_dns\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(csr.get(\"validity\")),\n        \t\t\"vendorSpecificDetails\": {\n        \t\t    \"orderId\": \"\",\n                    \"numberServer\":csr.get(\"number_of_server\"),\n\t\t        \t\"serverType\": csr.get(\"server_type\") or \"\"\n        \t\t}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n    \n    logger.info(\"Save CA Connector info payload:\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    response = response.json().get(\"response\")\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    return response.get(\"uuid\")\n\n\ndef cert_ca_connector_info_from_upload_csr(csr):\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    san = []\n    san_dns = []\n    \n    if csr.get(\"dns_uploadcsr\"):\n        san.append(\"multiselect-all\")\n        san.append(\"dNSNames\")\n        if operation_type == 'Create':\n            san_dns.append(csr.get(\"cn_uploadcsr\"))\n        san_dns.extend(csr.get(\"dns_uploadcsr\").split(\",\"))\n    \n    \n    certificateCategories = \"\"\n    if operation_type == 'Create':\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\n    else:\n        cert_profile = csr.get('cert_profile_regen_uploadcsr')\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\n    \n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"<%cert_authority%>\",\n        \t\t\"isAutoRenewal\": false if csr.get(\"renew_uploadcsr\") == \"No\" else true,\n        \t\t\"renewBefore\": csr.get(\"renew_before_uploadcsr\",\"0\"),\n        \t\t\"autoRegenerateEnabled\": false if csr.get(\"regen_uploadcsr\") == \"No\" else true,\n        \t\t\"regenerateBeforeInDays\": csr.get(\"regen_before_uploadcsr\",\"0\"),\n        \t\t\"caSettingName\": csr.get(\"ca_account_uploadcsr\"),\n        \t\t\"certificateType\": csr.get(\"cert_type_uploadcsr\"),\n        \t\t\"name\": \"<%cert_authority%> \"+csr.get(\"cert_type_uploadcsr\")+\" connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": csr.get(\"cn_uploadcsr\"),\n        \t\t\t\"subjectAlternativeNames\": san,\n        \t\t\t\"dNSNames\": csr.get(\"dns_uploadcsr\") or \"\",\n        \t\t\t\"streetAddress\" : csr.get(\"org_address_uploadcsr\"),\n        \t\t\t\"organization\": csr.get(\"org_uploadcsr\") or \"\",\n        \t\t\t\"organizationUnit\": csr.get(\"org_unit_uploadcsr\") or \"\",\n        \t\t\t\"locality\": csr.get(\"city_uploadcsr\") or \"\",\n        \t\t\t\"state\": csr.get(\"state_uploadcsr\") or \"\",\n        \t\t\t\"country\": csr.get(\"country_uploadcsr\") or \"\",\n        \t\t\t\"mailAddress\": csr.get(\"email_uploadcsr\") or \"\",\n        \t\t\t\"encryptedChallengePassword\": \"\",#check challenge password\n        \t\t\t\"hashFunction\": csr.get(\"hash_uploadcsr\"),\n        \t\t\t\"keyType\": csr.get(\"key_uploadcsr\"),\n        \t\t\t\"bitLength\": csr.get(\"bit_uploadcsr\"),\n        \t\t\t\"postalCode\": csr.get(\"zip_uploadcsr\"),\n        \t\t\t\"certificateCategories\": certificateCategories,\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": san_dns,\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(csr.get(\"validity_uploadcsr\")),\n        \t\t\"vendorSpecificDetails\": {\n        \t\t\t\"orderId\": \"\",\n                    \"numberServer\":csr.get(\"number_of_server_uploadcsr\"),\n        \t\t\t\"serverType\": csr.get(\"server_type_uploadcsr\")\n        \t\t}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n    \n    logger.info(\"Save CA Connector info payload:\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    if response.status_code != 200:\n        AVX::LOG(\"For the given common name \"+str(csr.get(\"cn_uploadcsr\"))+\" \"+str(response.reason))\n        return ''\n    logger.info(\"Save CA Connector info response:\"+str(response.json()))\n    response = response.json().get(\"response\")\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    return response.get(\"uuid\")\n\n\ndef cert_submit_new_csr(uuid):\n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-submit-csr-hv?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    payload =  {\n        \"payload\":{\n            \"certificateUuid\":uuid,\n            \"comments\":\"\",\n            \"action\":\"Submit\",\n            \"submit\":true\n        }\n    }\n    \n    logger.info('Cert Submit CSR Payload'+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    response = response.json()\n    logger.info(\"Cert Submit CSR response\"+str(response))\n    return response\n    \n\ndef trigger_regenerate_api(old_uuid, new_uuid):\n    gateway_url, gateway_key = fetch_gateway_key()\n    url_submit_csr = \"{}avxapi/cert-lifecycle?gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    payload_data = {\"payload\": {\"action\":\"Regenerate\",\"certificateUuid\":new_uuid,\"sourceUuid\":old_uuid,\"comments\":\"\"}}\n    logger.info(\"Regenerate payload:\"+str(payload_data))\n    headers = {\"sessionId\":'<%sessionId%>',\"Content-Type\": \"application/json\", \"Accept\": \"application/json\"}\n    response = requests.post(url_submit_csr, headers = headers, data = json.dumps(payload_data), verify = False)\n    #submit_csr_response = json.loads(submit_csr_response.text)\n    logger.info(\"Trigger regenerate response\"+str(response))\n    if response.status_code == 200:\n        return True\n    else:\n        return False\n\ndef strict_cert_ca_connector_info(csr):\n    logger.info(\"---Strict---\")\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n\n    data = {}\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\n\n            data['org'] = csr_params.get(\"organization\")\n            data['org_unit'] = csr_params.get('organizationUnit')\n            data['city'] = csr_params.get('locality')\n            data['state'] = csr_params.get('state')\n            data['country'] = csr_params.get('country')\n            data['email'] = ','.join(csr_params.get('mailAddress'))\n            data['subject_alternative_names'] = csr_params.get('subjectAlternativeNames')\n            \n            if cat == \"client\":\n                data['rfc822Names'] = csr_params.get('subjectAlternativeNames')\n    \n    \n    \n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    san = []\n    san_dns = []\n    \n    if csr.get(\"dns\"):\n        san.append(\"multiselect-all\")\n        san.append(\"dNSNames\")\n        if operation_type == 'Create':\n            san_dns.append(csr.get(\"cert_cn\"))\n            san_dns.append(',')\n        san_dns.extend(csr.get(\"dns\").split(\",\"))\n    \n    certificateCategories = \"\"\n    if operation_type == 'Create':\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\n    else:\n        cert_profile = csr.get('cert_profile_regen')\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\n    \n    \n    \n    payload = {\n        \"payload\" : {\n            \"csrGenerationSource\": \"appviewx\",\n            \"caConnectorInfo\": {\n                \"_id\": \"\",\n                \"certificateUuid\": \"\",\n                \"existingUuid\": \"\",\n                \"certificateAuthority\": \"<%cert_authority%>\",\n                \"isAutoRenewal\": false if csr.get(\"renew_automatically\") == \"No\" else true,\n        \t\t\"renewBefore\": csr.get(\"renew_before\",\"0\"),\n        \t\t\"autoRegenerateEnabled\": false if csr.get(\"regen_automatically\") == \"No\" else true,\n        \t\t\"regenerateBeforeInDays\": csr.get(\"regen_before\",\"0\"),\n                \"caSettingName\": csr.get(\"ca_account\") or \"\",\n\n                \"certificateType\": csr.get(\"cert_type\") or \"\",\n                \"name\": \"<%cert_authority%> \"+csr.get(\"cert_type\")+\" connector\",\n                \"description\": \"\",\n                \"file\": \"\",\n                \"csrParameters\": {\n                    \"commonName\": csr.get(\"cert_cn\"),\n                    \"subjectAlternativeNames\": san,\n                    \"dNSNames\": csr.get(\"dns\") or \"\",\n\n                    \"streetAddress\" : csr.get(\"org_address\"),\n                    \"organization\": data.get('org') if data.get(\"org\") else csr.get(\"org\"),\n                    \"organizationUnit\": data.get(\"org_unit\") if data.get(\"org_unit\") else csr.get(\"org_unit\"),\n                    \"locality\": data.get(\"city\") if data.get(\"city\") else csr.get(\"city\"),\n                    \"state\": data.get(\"state\") if data.get(\"state\") else csr.get(\"state\"),\n                    \"country\": data.get(\"country\") if data.get(\"country\") else csr.get(\"country\"),\n                    \"postalCode\": csr.get(\"zip_code\") or \"\",\n                    \"mailAddress\": data.get(\"email\") if data.get(\"email\") else csr.get(\"email\"),\n                    \"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\")) or \"\",\n                    \"hashFunction\": csr.get(\"hash_function\"),\n                    \"keyType\": csr.get(\"key_type_bit_len\").split('-')[0].strip(),\n                    \"bitLength\": csr.get(\"key_type_bit_len\").split('-')[1].strip(),\n                    \"certificateCategories\": certificateCategories,\n                    \"enhancedSANTypes\": {\n                        \"dNSNames\": san_dns\n                    }\n                },\n                \"certAttachments\": {\n                    \"userDefinedFileName\": \"\",\n                    \"comments\": \"\",\n                    \"fileName\": \"\",\n                    \"attachmentFile\": \"\"\n                },\n                \"certAttributes\": {\n                },\n                \"genericFields\": {\n                },\n                \"validityInDays\": 365*int(csr.get(\"validity\")),\n                \"vendorSpecificDetails\": {\n                    \"orderId\": \"\",\n                    \"numberServer\":csr.get(\"number_of_server\"),\n                    \"caCertId\": csr.get(\"ca_cert_id\") or \"\",\n                    \"serverType\": csr.get(\"server_type\") or \"\"\n                }\n            },\n            \"certificateGroup\": {\n                \"name\": \"<%assign_group%>\"\n            },\n            \"fileIds\": []\n        }\n    }\n\n    logger.info(\"Save CA Connector info payload:\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    if response.status_code != 200:\n        AVX::LOG(\"For the given common name \"+str(csr.get(\"cert_cn\"))+\" due to \"+str(response.reason))\n        raise Exception(str(response.reason))\n    response = response.json().get(\"response\")\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    return response.get(\"uuid\")\n\n\ndef check_strict_or_suggestive():\n    \"\"\"\n    Function to Fetch the configured certificate group\n    \n    :return: \"Strict\" or \"Suggestive\"\n    \"\"\"\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    if response.status_code != 200:\n        raise Exception(str(response.reason))\n    response = response.json()\n    return response.get(\"response\").get(\"type\")\n\ndef strict_cert_ca_connectorinfo_multidomain_ssl(csr):\n    \n    AVX::LOG(str(\"---STRICT---\"))\n    logger.info(\"---Strict---\")\n    \n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    if response.status_code != 200:\n        raise Exception(str(response.reason))\n    response = response.json()\n\n    strict_policy_data = {}\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\n\n            strict_policy_data['org_multidomain_ssl_cert'] = csr_params.get(\"organization\")\n            strict_policy_data['org_unit'] = csr_params.get('organizationUnit')\n            strict_policy_data['city_multidomain_ssl_cert'] = csr_params.get('locality')\n            strict_policy_data['state_multidomain_ssl_cert'] = csr_params.get('state')\n            strict_policy_data['country_multidomain_ssl_cert'] = csr_params.get('country')\n            strict_policy_data['email'] = ','.join(csr_params.get('mailAddress'))\n            strict_policy_data['dns_multidomain_ssl_cert'] = csr_params.get('subjectAlternativeNames')\n            \n            if cat == \"client\":\n                strict_policy_data['rfc822Names'] = csr_params.get('subjectAlternativeNames')\n    \n    \n    \n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    san = []\n    san_dns = []\n    \n    if csr.get(\"dns_multidomain_ssl_cert\"):\n        san.append(\"multiselect-all\")\n        san.append(\"dNSNames\")\n\n        san_dns.extend(csr.get(\"dns_multidomain_ssl_cert\").split(\",\"))\n    \n    certificateCategories = \"\"\n    if operation_type == 'Create':\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\n    else:\n        cert_profile = csr.get('cert_profile_regen')\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\n    \n    \n    \n    payload = {\n        \"payload\" : {\n            \"csrGenerationSource\": \"appviewx\",\n            \"caConnectorInfo\": {\n                \"_id\": \"\",\n                \"certificateUuid\": \"\",\n                \"existingUuid\": \"\",\n                \"certificateAuthority\": \"<%cert_authority%>\",\n                \"isAutoRenewal\": false if csr.get(\"renew_automatically\") == \"No\" else true,\n        \t\t\"renewBefore\": csr.get(\"renew_before\",\"0\"),\n        \t\t\"autoRegenerateEnabled\": false if csr.get(\"regen_automatically\") ==\"No\" else true,\n        \t\t\"regenerateBeforeInDays\": csr.get(\"regen_before\",\"0\"),\n                \"caSettingName\": csr.get(\"ca_account\") or \"\",\n\n                \"certificateType\": csr.get(\"cert_type\") or \"\",\n                \"name\": \"<%cert_authority%> \"+csr.get(\"cert_type\")+\" connector\",\n                \"description\": \"\",\n                \"file\": \"\",\n                \"csrParameters\": {\n                    \"commonName\": csr.get(\"cert_cn\"),\n                    \"subjectAlternativeNames\": san,\n                    \"dNSNames\": ','.join(strict_policy_data['dns_multidomain_ssl_cert']) if strict_policy_data['dns_multidomain_ssl_cert'] else ','.join(san_dns),\n\n                    \"organization\": strict_policy_data.get('org_multidomain_ssl_cert') if strict_policy_data.get(\"org_multidomain_ssl_cert\") else csr.get(\"org_multidomain_ssl_cert\"),\n                    \"organizationUnit\": strict_policy_data.get(\"org_unit\") if strict_policy_data.get(\"org_unit\") else csr.get(\"org_unit\"),\n                    \"locality\": strict_policy_data.get(\"city_multidomain_ssl_cert\") if strict_policy_data.get(\"city_multidomain_ssl_cert\") else csr.get(\"city_multidomain_ssl_cert\"),\n                    \"state\": strict_policy_data.get(\"state_multidomain_ssl_cert\") if strict_policy_data.get(\"state_multidomain_ssl_cert\") else csr.get(\"state_multidomain_ssl_cert\"),\n                    \"country\": strict_policy_data.get(\"country_multidomain_ssl_cert\") if strict_policy_data.get(\"country_multidomain_ssl_cert\") else csr.get(\"country_multidomain_ssl_cert\"),\n                    \"postalCode\": csr.get(\"zip_code_multidomain_ssl_cert\") or \"\",\n                    \"mailAddress\": strict_policy_data.get(\"email\") if strict_policy_data.get(\"email\") else csr.get(\"email\"),\n                    \"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\")) or \"\",\n                    \"hashFunction\": csr.get(\"hash_function\"),\n                    \"keyType\": csr.get(\"key_type_bit_len\").split('-')[0].strip(),\n                    \"bitLength\": csr.get(\"key_type_bit_len\").split('-')[1].strip(),\n                    \"certificateCategories\": certificateCategories,\n                    \"enhancedSANTypes\": {\n                        \"dNSNames\": strict_policy_data['dns_multidomain_ssl_cert'] if strict_policy_data['dns_multidomain_ssl_cert'] else san_dns\n                    }\n                },\n                \"certAttachments\": {\n                    \"userDefinedFileName\": \"\",\n                    \"comments\": \"\",\n                    \"fileName\": \"\",\n                    \"attachmentFile\": \"\"\n                },\n                \"certAttributes\": {\n                },\n                \"genericFields\": {\n                },\n                \"validityInDays\": 365*int(csr.get(\"validity\")),\n                \"vendorSpecificDetails\": {\n                    \"orderId\": \"\",\n                    \"numberServer\":csr.get(\"number_of_server\"),\n                    \"caCertId\": csr.get(\"ca_cert_id\") or \"\",\n                    \"serverType\": csr.get(\"server_type\") or \"\"\n                }\n            },\n            \"certificateGroup\": {\n                \"name\": \"<%assign_group%>\"\n            },\n            \"fileIds\": []\n        }\n    }\n\n    logger.info(\"Save CA Connector info payload:\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    if response.status_code != 200:\n        AVX::LOG(\"For the given common name \"+str(csr.get(\"cert_cn\"))+\" due to \"+str(response.reason))\n        return ''\n    response = response.json().get(\"response\")\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    return response.get(\"uuid\")\n\ndef cert_ca_connectorinfo_multidomain_ssl(csr):\n    \n    gateway_url, gateway_key = fetch_gateway_key()\n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    \n    san = []\n    san_dns = []\n    \n    if csr.get(\"dns_multidomain_ssl_cert\"):\n        san.append(\"multiselect-all\")\n        san.append(\"dNSNames\")\n        san_dns.extend(csr.get(\"dns_multidomain_ssl_cert\").split(\",\"))\n    \n    certificateCategories = \"\"\n    if operation_type == 'Create':\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\n    else:\n        cert_profile = csr.get('cert_profile_regen')\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\n        \n    payload = {\n        \"payload\" : {\n        \t\"csrGenerationSource\": \"appviewx\",\n        \t\"caConnectorInfo\": {\n        \t\t\"_id\": \"\",\n        \t\t\"certificateUuid\": \"\",\n        \t\t\"existingUuid\": \"\",\n        \t\t\"certificateAuthority\": \"<%cert_authority%>\",\n        \t\t\"isAutoRenewal\": true if csr.get(\"renew_automatically\") == \"Yes\" else false,\n        \t\t\"renewBefore\": csr.get(\"renew_before\",\"0\"),\n        \t\t\"autoRegenerateEnabled\": true if csr.get(\"regen_automatically\") == \"Yes\" else false,\n        \t\t\"regenerateBeforeInDays\": csr.get(\"regen_before\",\"0\"),\n        \t\t\"caSettingName\": csr.get(\"ca_account\") or \"\",\n        \t    \n        \t\t\"certificateType\": csr.get(\"cert_type\") or \"\",\n        \t\t\"name\": \"<%cert_authority%> \"+csr.get(\"cert_type\")+\" connector\",\n        \t\t\"description\": \"\",\n        \t\t\"file\": \"\",\n        \t\t\"csrParameters\": {\n        \t\t\t\"commonName\": csr.get(\"cert_cn\"),\n        \t\t\t\"subjectAlternativeNames\": san,\n        \t\t\t\"dNSNames\": csr.get(\"dns_multidomain_ssl_cert\") or \"\",\n        \t\t\t\n        \t\t\t\"organization\": csr.get(\"org_multidomain_ssl_cert\") or \"\",\n        \t\t\t\"organizationUnit\": csr.get(\"org_unit\") or \"\",\n        \t\t\t\"streetAddress\":csr.get(\"org_address_multidomain_ssl_cert\") or \"\",\n        \t\t\t\"locality\": csr.get(\"city_multidomain_ssl_cert\") or \"\",\n        \t\t\t\"state\": csr.get(\"state_multidomain_ssl_cert\") or \"\",\n        \t\t\t\"country\": csr.get(\"country_multidomain_ssl_cert\") or \"\",\n        \t\t\t\"postalCode\": csr.get(\"zip_code_multidomain_ssl_cert\") or \"\",\n        \t\t\t\"mailAddress\": csr.get(\"email_address\") or \"\",\n        \t\t\t\"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\")) or \"\",\n        \t\t\t\"hashFunction\": csr.get(\"hash_function\"),\n        \t\t\t\"keyType\": csr.get(\"key_type_bit_len\").split('-')[0].strip(),\n        \t\t\t\"bitLength\": csr.get(\"key_type_bit_len\").split('-')[1].strip(),\n        \t\t\t\"certificateCategories\": certificateCategories,\n        \t\t\t\"enhancedSANTypes\": {\n        \t\t\t\t\"dNSNames\": san_dns\n        \t\t\t}\n        \t\t},\n        \t\t\"certAttachments\": {\n        \t\t\t\"userDefinedFileName\": \"\",\n        \t\t\t\"comments\": \"\",\n        \t\t\t\"fileName\": \"\",\n        \t\t\t\"attachmentFile\": \"\"\n        \t\t},\n        \t\t\"certAttributes\": {\n        \t\t},\n        \t\t\"genericFields\": {\n        \t\t},\n        \t\t\"validityInDays\": 365*int(csr.get(\"validity\")),\n        \t\t\"vendorSpecificDetails\": {\n        \t\t    \"orderId\": \"\",\n                    \"numberServer\":csr.get(\"number_of_server\"),\n\t\t        \t\"serverType\": csr.get(\"server_type\") or \"\"\n        \t\t}\n        \t},\n        \t\"certificateGroup\": {\n        \t\t\"name\": \"<%assign_group%>\"\n        \t},\n        \t\"fileIds\": []\n        }\n    }\n    \n    logger.info(\"Save CA Connector info payload:\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    if response.status_code != 200:\n        AVX::LOG(\"For the given common name \"+str(csr.get(\"cert_cn\"))+\" \"+str(response.reason))\n        raise Exception(str(response.reason))\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    response = response.json().get(\"response\")\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    return response.get(\"uuid\")\n\ndef strict_cert_ca_connector_info_uploadcsr(csr):\n    \n    AVX::LOG(str(\"---STRICT---\"))\n    logger.info(\"---Strict---\")\n    gateway_url, gateway_key = fetch_gateway_key()\n    cat = 'server'\n    if '<%certificate_profile%>' == 'Server':\n        cat = 'server'\n    elif '<%certificate_profile%>' == 'Client':\n        cat = 'client'\n    elif '<%certificate_profile%>' == 'Code Signing':\n        cat = 'codeSigning'\n        \n    url = \"{}avxapi/cert-get-policy-by-groupname?certificateGroupName={}&certificateCategory={}&gwkey={}&gwsource=external\".format(gateway_url,'<%assign_group%>', cat, gateway_key)\n\n    headers = {\"sessionId\": \"<%sessionId%>\", \"Content-Type\": \"application/json\"}\n    response = requests.get(url=url, headers=headers, verify=False)\n    response = response.json()\n\n    strict_data = {}\n    for cert_policy_ca_acc_detail in response.get(\"response\").get(\"certificatePolicyCaAccountDetails\"):\n        if cert_policy_ca_acc_detail.get(\"certificateAuthority\") == \"<%cert_authority%>\":\n            csr_params = cert_policy_ca_acc_detail.get(\"certPolicyCsrParameter\")\n\n            strict_data['org'] = csr_params.get(\"organization\")\n            strict_data['org_unit'] = csr_params.get('organizationUnit')\n            strict_data['city'] = csr_params.get('locality')\n            strict_data['state'] = csr_params.get('state')\n            strict_data['country'] = csr_params.get('country')\n            strict_data['email'] = ','.join(csr_params.get('mailAddress'))\n            strict_data['subject_alternative_names'] = csr_params.get('subjectAlternativeNames')\n            \n            if cat == \"client\":\n                strict_data['rfc822Names'] = csr_params.get('subjectAlternativeNames')\n    \n    \n    \n    url = \"{}avxapi/cert-ca-connectorinfo-save?&gwkey={}&gwsource=external\".format(gateway_url, gateway_key)\n    headers = {\n        \"sessionId\": '<%sessionId%>',\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n    san = []\n    san_dns = []\n    \n    if csr.get(\"dns_uploadcsr\"):\n        san.append(\"multiselect-all\")\n        san.append(\"dNSNames\")\n    certificateCategories = \"\"\n    if operation_type == 'Create':\n        certificateCategories = [\"<%certificate_profile%>\", \"Client\"] if \"<%certificate_profile%>\" == \"Server\" else [\"<%certificate_profile%>\"]\n    else:\n        cert_profile = csr.get('cert_profile_regen')\n        certificateCategories = [cert_profile, \"Client\"] if cert_profile == \"Server\" else [cert_profile]\n    \n    \n    \n    payload = {\n        \"payload\" : {\n            \"csrGenerationSource\": \"appviewx\",\n            \"caConnectorInfo\": {\n                \"_id\": \"\",\n                \"certificateUuid\": \"\",\n                \"existingUuid\": \"\",\n                \"certificateAuthority\": \"<%cert_authority%>\",\n                \"isAutoRenewal\": true if csr.get(\"renew_uploadcsr\") == \"Yes\" else false,\n        \t\t\"renewBefore\": csr.get(\"renew_before_uploadcsr\",\"0\"),\n        \t\t\"autoRegenerateEnabled\": true if csr.get(\"regen_uploadcsr\") == \"Yes\" else false,\n        \t\t\"regenerateBeforeInDays\": csr.get(\"regen_before_uploadcsr\",\"0\"),\n                \"caSettingName\": csr.get(\"ca_account_uploadcsr\") or \"\",\n\n                \"certificateType\": csr.get(\"cert_type_uploadcsr\") or \"\",\n                \"name\": \"<%cert_authority%> \"+csr.get(\"cert_type_uploadcsr\")+\" connector\",\n                \"description\": \"\",\n                \"file\": \"\",\n                \"csrParameters\": {\n                    \"commonName\": csr.get(\"cn_uploadcsr\"),\n                    \"subjectAlternativeNames\": san,\n                    \"dNSNames\": ','.join(strict_data['subject_alternative_names']) if strict_data['subject_alternative_names'] else csr.get(\"dns_uploadcsr\"),\n                    \"streetAddress\" : csr.get(\"org_address_uploadcsr\"),\n                    \"organization\": strict_data.get('org') if strict_data.get(\"org\") else csr.get(\"org_uploadcsr\"),\n                    \"organizationUnit\": strict_data.get(\"org_unit\") if strict_data.get(\"org_unit\") else csr.get(\"org_unit_uploadcsr\"),\n                    \"locality\": strict_data.get(\"city\") if strict_data.get(\"city\") else csr.get(\"city_uploadcsr\"),\n                    \"state\": strict_data.get(\"state\") if strict_data.get(\"state\") else csr.get(\"state_uploadcsr\"),\n                    \"country\": strict_data.get(\"country\") if strict_data.get(\"country\") else csr.get(\"country_uploadcsr\"),\n                    \"postalCode\": csr.get(\"zip_uploadcsr\") or \"\",\n                    \"mailAddress\": strict_data.get(\"email\") if strict_data.get(\"email\") else csr.get(\"email_uploadcsr\"),\n                    \"encryptedChallengePassword\": encrypt_pass(csr.get(\"challenge_pwd\")) or \"\",\n                    \"hashFunction\": csr.get(\"hash_uploadcsr\"),\n                    \"keyType\": csr.get(\"key_uploadcsr\"),\n                    \"bitLength\": csr.get(\"bit_uploadcsr\"),\n                    \"certificateCategories\": certificateCategories,\n                    \"enhancedSANTypes\": {\n                        \"dNSNames\": strict_data['subject_alternative_names'] if strict_data['subject_alternative_names'] else csr.get(\"dns_uploadcsr\")\n                    }\n                },\n                \"certAttachments\": {\n                    \"userDefinedFileName\": \"\",\n                    \"comments\": \"\",\n                    \"fileName\": \"\",\n                    \"attachmentFile\": \"\"\n                },\n                \"certAttributes\": {\n                },\n                \"genericFields\": {\n                },\n                \"validityInDays\": 365*int(csr.get(\"validity_uploadcsr\")),\n                \"vendorSpecificDetails\": {\n                    \"orderId\": \"\",\n                    \"numberServer\":csr.get(\"number_of_server_uploadcsr\"),\n                    \"caCertId\": csr.get(\"ca_cert_id\") or \"\",\n                    \"serverType\": csr.get(\"server_type_uploadcsr\") or \"\"\n                }\n            },\n            \"certificateGroup\": {\n                \"name\": \"<%assign_group%>\"\n            },\n            \"fileIds\": []\n        }\n    }\n    logger.info(\"Payload for STRICT CSR UPLOAD \"+str(payload))\n    logger.info(\"Save CA Connector info payload:\"+str(payload))\n    response = requests.post(url=url, headers=headers, data=json.dumps(payload), verify=False)\n    if response.status_code != 200:\n        AVX::LOG(\"For the given common name \"+str(csr.get(\"cn_uploadcsr\"))+\" due to \"+str(response.reason))\n        return ''\n    response = response.json().get(\"response\")\n    logger.info(\"Save CA Connector info response:\"+str(response))\n    return response.get(\"uuid\")\n\n\nif __name__ == \"__main__\":\n    uuid_list = []\n    status = True\n    policy_type = check_strict_or_suggestive()\n    if '<%csr_avx%>':\n        for csr in <%csr_avx%>:\n            if policy_type == \"Strict\":\n                if csr.get(\"cert_type\") == \"Multi-Domain SSL Certificate\":\n                    new_uuid = strict_cert_ca_connectorinfo_multidomain_ssl(csr)\n                else:\n                    new_uuid = strict_cert_ca_connector_info(csr)\n            else:\n                if csr.get(\"cert_type\") == \"Multi-Domain SSL Certificate\":\n                    new_uuid = cert_ca_connectorinfo_multidomain_ssl(csr)\n                else:\n                    new_uuid = cert_ca_connector_info(csr)\n            if operation_type == 'Create':\n                if new_uuid:\n                    status = cert_submit_new_csr(new_uuid)\n            else:\n                status = trigger_regenerate_api(csr.get('cert_uuid'),new_uuid)\n    elif '<%csr_uploadcsr%>':\n        for csr in <%csr_uploadcsr%>:\n            if policy_type == \"Strict\":\n                new_uuid = strict_cert_ca_connector_info_uploadcsr(csr)\n            else:\n                new_uuid = cert_ca_connector_info_from_upload_csr(csr)\n            if operation_type == 'Create':\n                if new_uuid:\n                    status = cert_submit_new_csr(new_uuid)\n            else:\n                status = trigger_regenerate_api(csr.get('cert_uuid'),new_uuid)\n    if status:\n        AVX::OUTPUT({\"uuid_list\":uuid_list})\n    else:\n        AVX::LOG(\"CSR Submission failed.\")\n        AVX::OUTPUT({})",
    "http_method" : "POST",
    "action_id" : "run-script"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      }, {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "5QWfKkZF",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Join",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "flowIdsToJoin" : [ ],
    "_id" : null,
    "task_id" : "join_1",
    "task_name" : "Join",
    "task_type" : "join",
    "task_category" : "join",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "join",
    "group_name" : "General",
    "viewable_type" : "default"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "decision_1",
        "taskName" : null,
        "subflowId" : "Ig7MFeOt",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "script_2",
        "taskName" : null,
        "subflowId" : "Ig7MFeOt",
        "parentSubflowId" : "iM5chT1L",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "operation_type",
      "value" : "<%operation_type%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "operation_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "common_name",
      "value" : "<%common_name%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "common_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "cert_authority",
      "value" : "<%cert_authority%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_authority",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "401" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Form",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "dynamicAuth" : null,
    "regexList" : null,
    "regexOperation" : null,
    "regexPattern" : null,
    "accessMode" : null,
    "proceedProcess" : "Submit",
    "breakdownProcess" : "Back",
    "cancelProcess" : "Cancel",
    "saveDraftProcess" : "Save Draft",
    "closeProcess" : "Exit",
    "enableSaveDraft" : false,
    "enableCancel" : true,
    "enableClose" : false,
    "enableAutoApprove" : null,
    "enableBreakDown" : false,
    "availableGlobalData" : null,
    "_id" : null,
    "task_id" : "createform_3",
    "task_name" : "Sectigo",
    "task_type" : "form",
    "task_category" : "form",
    "component_type" : "form",
    "setNullProperties" : true,
    "folderName" : "AppViewX certificates",
    "sub_group" : "form",
    "group_name" : "User interface",
    "viewable_type" : "default",
    "aclIdentifiers" : null,
    "template" : {
      "name" : "Sectigo",
      "description" : null,
      "aclIdentifiers" : null,
      "fields" : [ {
        "labelName" : "Certificate Authority",
        "elementType" : "Text box",
        "values" : "<%cert_authority%>",
        "fieldId" : "ca",
        "fieldScript" : "Fetch Policy Details",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : true,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Operation Type",
        "elementType" : "Hidden",
        "values" : "<%operation_type%>",
        "fieldId" : "op",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR Generation",
        "elementType" : "Radio button",
        "values" : "AppViewX,Upload CSR",
        "fieldId" : "csr_gen",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Fetch Certificate Details",
        "elementType" : "Button",
        "values" : "",
        "fieldId" : "fetch_certificate_details",
        "fieldScript" : "Fetch Certificate Details",
        "aclFilter" : "None",
        "dependsOn" : "op:Regenerate&csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Fetch Policy Details",
        "elementType" : "Button",
        "values" : "",
        "fieldId" : "fetch_policy_details",
        "fieldScript" : "Fetch CA Settings and policy details for Regenerate",
        "aclFilter" : "None",
        "dependsOn" : "op:Regenerate",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CA Account",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "ca_account",
        "fieldScript" : "Fetch Cert Types from CA Account",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CA Account",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "ca_account_uploadcsr",
        "fieldScript" : "Fetch Policy Details Upload CSR",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate Type",
        "elementType" : "Dropdown",
        "values" : "Multi-Domain SSL Certificate,UPS Private UCC UPS Issuing CA 2,Short Life Private UCC,Extended Validation SSL Certificate,Extended Validation Multi Domain SSL,Private Unified Communications Certificate,UPS Wildcard Certificate,UPS Unified Communications Certificate,UPS Elite SSL,Unified Communication Certificate,Instant SSL Certificate,PlatinumSSL Wildcard Certificate,Comodo Unified Communication Certificate,Comodo PlatinumSSL Wildcard Certificate,EliteSSL Certificate",
        "fieldId" : "cert_type",
        "fieldScript" : "Fetch Certificate Types",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "renew_automatically",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew Before",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "renew_before",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&renew_automatically:Yes",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regenerate automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "regen_automatically",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&renew_automatically:No",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regenerate Before",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "regen_before",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&regen_automatically:Yes",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew Automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "renew_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Renew Before",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "renew_before_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR&renew_uploadcsr:Yes",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regen Automatically",
        "elementType" : "Radio button",
        "values" : "No,Yes",
        "fieldId" : "regen_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR&renew_uploadcsr:No",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Regen  Before",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "regen_before_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR&regen_uploadcsr:Yes",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Common Name",
        "elementType" : "Text box",
        "values" : "<%common_name%>",
        "fieldId" : "cert_cn",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "Common name should start with (*.). No special characters except ('.','-') are allowed in domain name.",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Uuid",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "cert_uuid",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&op:Regenerate",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate Profile",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "cert_profile_regen",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&op:Regenerate",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Subject alternative name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "dns",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:EliteSSL Certificate|cert_type:Comodo PlatinumSSL Wildcard Certificate|cert_type:Comodo Unified Communication Certificate|cert_type:PlatinumSSL Wildcard Certificate|cert_type:Instant SSL Certificate|cert_type:Unified Communication Certificate|cert_type:UPS Elite SSL|cert_type:UPS Unified Communications Certificate|cert_type:UPS Wildcard Certificate|cert_type:Private Unified Communications Certificate|cert_type:Extended Validation Multi Domain SSL|cert_type:Extended Validation SSL Certificate|cert_type:Short Life Private UCC|cert_type:UPS Private UCC UPS Issuing CA 2",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Subject alternative name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "dns_multidomain_ssl_cert",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:Multi-Domain SSL Certificate",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:EliteSSL Certificate|cert_type:Comodo PlatinumSSL Wildcard Certificate|cert_type:Comodo Unified Communication Certificate|cert_type:PlatinumSSL Wildcard Certificate|cert_type:Instant SSL Certificate|cert_type:Unified Communication Certificate|cert_type:UPS Elite SSL|cert_type:UPS Unified Communications Certificate|cert_type:UPS Wildcard Certificate|cert_type:Private Unified Communications Certificate|cert_type:Extended Validation Multi Domain SSL|cert_type:Extended Validation SSL Certificate|cert_type:Short Life Private UCC|cert_type:UPS Private UCC UPS Issuing CA 2",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_multidomain_ssl_cert",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:Multi-Domain SSL Certificate",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization unit",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_unit",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Street address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_address",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:EliteSSL Certificate|cert_type:Comodo PlatinumSSL Wildcard Certificate|cert_type:Comodo Unified Communication Certificate|cert_type:PlatinumSSL Wildcard Certificate|cert_type:Instant SSL Certificate|cert_type:Unified Communication Certificate|cert_type:UPS Elite SSL|cert_type:UPS Unified Communications Certificate|cert_type:UPS Wildcard Certificate|cert_type:Private Unified Communications Certificate|cert_type:Extended Validation Multi Domain SSL|cert_type:Extended Validation SSL Certificate|cert_type:Short Life Private UCC|cert_type:UPS Private UCC UPS Issuing CA 2",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Street address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_address_multidomain_ssl_cert",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:Multi-Domain SSL Certificate",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Locality",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "city",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:EliteSSL Certificate|cert_type:Comodo PlatinumSSL Wildcard Certificate|cert_type:Comodo Unified Communication Certificate|cert_type:PlatinumSSL Wildcard Certificate|cert_type:Instant SSL Certificate|cert_type:Unified Communication Certificate|cert_type:UPS Elite SSL|cert_type:UPS Unified Communications Certificate|cert_type:UPS Wildcard Certificate|cert_type:Private Unified Communications Certificate|cert_type:Extended Validation Multi Domain SSL|cert_type:Extended Validation SSL Certificate|cert_type:Short Life Private UCC|cert_type:UPS Private UCC UPS Issuing CA 2",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Locality",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "city_multidomain_ssl_cert",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:Multi-Domain SSL Certificate",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:EliteSSL Certificate|cert_type:Comodo PlatinumSSL Wildcard Certificate|cert_type:Comodo Unified Communication Certificate|cert_type:PlatinumSSL Wildcard Certificate|cert_type:Instant SSL Certificate|cert_type:Unified Communication Certificate|cert_type:UPS Elite SSL|cert_type:UPS Unified Communications Certificate|cert_type:UPS Wildcard Certificate|cert_type:Private Unified Communications Certificate|cert_type:Extended Validation Multi Domain SSL|cert_type:Extended Validation SSL Certificate|cert_type:Short Life Private UCC|cert_type:UPS Private UCC UPS Issuing CA 2",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state_multidomain_ssl_cert",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:Multi-Domain SSL Certificate",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:EliteSSL Certificate|cert_type:Comodo PlatinumSSL Wildcard Certificate|cert_type:Comodo Unified Communication Certificate|cert_type:PlatinumSSL Wildcard Certificate|cert_type:Instant SSL Certificate|cert_type:Unified Communication Certificate|cert_type:UPS Elite SSL|cert_type:UPS Unified Communications Certificate|cert_type:UPS Wildcard Certificate|cert_type:Private Unified Communications Certificate|cert_type:Extended Validation Multi Domain SSL|cert_type:Extended Validation SSL Certificate|cert_type:Short Life Private UCC|cert_type:UPS Private UCC UPS Issuing CA 2",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country_multidomain_ssl_cert",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:Multi-Domain SSL Certificate",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Postal code",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "zip_code",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:EliteSSL Certificate|cert_type:Comodo PlatinumSSL Wildcard Certificate|cert_type:Comodo Unified Communication Certificate|cert_type:PlatinumSSL Wildcard Certificate|cert_type:Instant SSL Certificate|cert_type:Unified Communication Certificate|cert_type:UPS Elite SSL|cert_type:UPS Unified Communications Certificate|cert_type:UPS Wildcard Certificate|cert_type:Private Unified Communications Certificate|cert_type:Extended Validation Multi Domain SSL|cert_type:Extended Validation SSL Certificate|cert_type:Short Life Private UCC|cert_type:UPS Private UCC UPS Issuing CA 2",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Zip code",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "zip_code_multidomain_ssl_cert",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:Multi-Domain SSL Certificate",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email_address",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Validity (in years)",
        "elementType" : "Dropdown",
        "values" : "1,2,3",
        "fieldId" : "validity",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Challenge password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "challenge_pwd",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Confirm password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "confirm_pwd",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Hash Function",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "hash_function",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Key Type - Bit Length",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "key_type_bit_len",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CA certificate ID",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "ca_certificate_id",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "cert_type:Private SSL Multi Domain|cert_type:Private SSL Plus|cert_type:Private SSL Wildcard",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Number of Servers",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "number_of_server",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX&cert_type:PlatinumSSL Wildcard Certificate",
        "dataValidation" : "^([0-9]|10)$",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Server type",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "server_type",
        "fieldScript" : "Fetch server types",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "csr_avx",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR Parameters",
        "elementType" : "Tabular",
        "values" : "",
        "fieldId" : "csr_avx",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:AppViewX",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null,
        "showDefaultView" : false
      }, {
        "labelName" : "Certificate Type",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "cert_type_uploadcsr",
        "fieldScript" : "Fetch Cert type upload CSR",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Upload CSR",
        "elementType" : "Multi-line with file upload",
        "values" : "",
        "fieldId" : "upload_csr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Fetch CSR Parameters",
        "elementType" : "Button",
        "values" : "",
        "fieldId" : "fetch_csr_parameters",
        "fieldScript" : "Fetch CSR Parameters from uploaded CSR",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Common Name",
        "elementType" : "Text box",
        "values" : "<%common_name%>",
        "fieldId" : "cn_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Uuid",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "uuid_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR&op:Regenerate",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Certificate Profile",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "cert_profile_regen_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR&op:Regenerate",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Subject alternative name",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "dns_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Organization unit",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_unit_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Street address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "org_address_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Locality",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "city_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "State",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "state_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Country",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "country_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Postal code",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "zip_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Email address",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "email_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Validity (in years)",
        "elementType" : "Dropdown",
        "values" : "1,2,3",
        "fieldId" : "validity_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Challenge password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "challenge_pwd_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Confirm password",
        "elementType" : "Password",
        "values" : "",
        "fieldId" : "confirm_pwd_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : false,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Hash function",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "hash_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Key type",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "key_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Bit length",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "bit_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "R",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Number of Servers",
        "elementType" : "Text box",
        "values" : "",
        "fieldId" : "number_of_server_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR&cert_type_uploadcsr:PlatinumSSL Wildcard Certificate",
        "dataValidation" : "^([0-9]|10)$",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Server type",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "server_type_uploadcsr",
        "fieldScript" : "Fetch server types for CSR upload",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "csr_uploadcsr",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : false,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "CSR Parameters",
        "elementType" : "Tabular",
        "values" : "",
        "fieldId" : "csr_uploadcsr",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "csr_gen:Upload CSR",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null,
        "showDefaultView" : false
      } ],
      "fieldScripts" : [ {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Cancel request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Discard request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Submit request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch DigiCert Divisions Upload CSR",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lKToKICAgIGRpZ2ljZXJ0X2RpdmlzaW9ucyA9IFtdCiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1jYS1zZXR0aW5ncy1nZXRieWNhbmFtZT9jZXJ0aWZpY2F0ZUF1dGhvcml0eT1EaWdpQ2VydCZjZXJ0aWZpY2F0ZUNhdGVnb3J5PVNlcnZlciZjZXJ0aWZpY2F0ZUdyb3VwPXt9Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoCiAgICBnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgZm9yIHNldHRpbmcgaW4gcmVzcG9uc2U6CiAgICAgICAgaWYgc2V0dGluZ1snbmFtZSddID09IGNhX3NldHRpbmdfbmFtZToKICAgICAgICAgICAgY2VydF9kaXZpc2lvbnMgPSBzZXR0aW5nWydyYmFjQ2VydFR5cGVzSGllcmFyY2h5J11bJ2RpdmlzaW9ucyddCiAgICAgICAgICAgIGZvciBkaXYgaW4gY2VydF9kaXZpc2lvbnM6CiAgICAgICAgICAgICAgICBkaWdpY2VydF9kaXZpc2lvbnMuYXBwZW5kKGRpdlsnbmFtZSddKQogICAgcmV0dXJuIGRpZ2ljZXJ0X2RpdmlzaW9ucwogICAgCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgZ3JvdXBfbmFtZSA9ICc8JWFzc2lnbl9ncm91cCU+JwogICAgY2Ffc2V0dGluZ19uYW1lID0gJzxjYV9hY2NvdW50X3VwbG9hZGNzcj4nCiAgICBjYV9kaXZpc2lvbnMgPSBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lKQogICAgZGF0YSA9IFt7ImNhX2RpdmlzaW9uX3VwbG9hZGNzciI6ZGl2fSBmb3IgZGl2IGluIGNhX2RpdmlzaW9uc10KICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCg==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Digicert Divisions",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lKToKICAgIGRpZ2ljZXJ0X2RpdmlzaW9ucyA9IFtdCiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1jYS1zZXR0aW5ncy1nZXRieWNhbmFtZT9jZXJ0aWZpY2F0ZUF1dGhvcml0eT1EaWdpQ2VydCZjZXJ0aWZpY2F0ZUNhdGVnb3J5PVNlcnZlciZjZXJ0aWZpY2F0ZUdyb3VwPXt9Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoCiAgICBnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgZm9yIHNldHRpbmcgaW4gcmVzcG9uc2U6CiAgICAgICAgaWYgc2V0dGluZ1snbmFtZSddID09IGNhX3NldHRpbmdfbmFtZToKICAgICAgICAgICAgY2VydF9kaXZpc2lvbnMgPSBzZXR0aW5nWydyYmFjQ2VydFR5cGVzSGllcmFyY2h5J11bJ2RpdmlzaW9ucyddCiAgICAgICAgICAgIGZvciBkaXYgaW4gY2VydF9kaXZpc2lvbnM6CiAgICAgICAgICAgICAgICBkaWdpY2VydF9kaXZpc2lvbnMuYXBwZW5kKGRpdlsnbmFtZSddKQogICAgcmV0dXJuIGRpZ2ljZXJ0X2RpdmlzaW9ucwogICAgCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgZ3JvdXBfbmFtZSA9ICdEZWZhdWx0JwogICAgY2Ffc2V0dGluZ19uYW1lID0gJzxjYV9hY2NvdW50PicKICAgIGNhX2RpdmlzaW9ucyA9IGdldF9jYV9zZXR0aW5ncyhncm91cF9uYW1lLCBjYV9zZXR0aW5nX25hbWUpCiAgICBkYXRhID0gW3siY2FfZGl2aXNpb24iOmRpdn0gZm9yIGRpdiBpbiBjYV9kaXZpc2lvbnNdCiAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQo=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "fetch_certificate_details" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Certificate Details",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQoKaW1wb3J0IGxvZ2dlcl91dGlsCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoIkNlcnQgUmVnZW5lcmF0ZSBPT0IgLSBVcGxvYWQgQ1NSIikKCgpkZWYgZmV0Y2hfZ2F0ZXdheV9rZXkoKToKICAgIGNvbmZfY29udGVudCA9IHt9CiAgICBhYnNfcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKQogICAgcHJvcF9maWxlX3BhdGggPSBhYnNfcGF0aCArICIvLi4vcHJvcGVydGllcy9hcHB2aWV3eC5wcm9wZXJ0aWVzIgogICAgY29uZmlnID0gQ29uZmlnT2JqKHByb3BfZmlsZV9wYXRoKQogICAgcmV0dXJuIGNvbmZpZ1snR0FURVdBWV9CQVNFX1VSTCddLCBjb25maWdbJ0dBVEVXQVlfS0VZJ10KCgpkZWYgZ2V0X3BvbGljeV9uYW1lKGdyb3VwX25hbWUpOgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtZ3JvdXAtZmV0Y2gtYnktbmFtZT9ncm91cE5hbWU9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJldHVybiByZXNwb25zZS5qc29uKCkuZ2V0KCJyZXNwb25zZSIpLmdldCgicG9saWN5TmFtZSIpCgoKZGVmIGdldF9jZXJ0X2RldGFpbHMoY2VydCk6CiAgICByZWdlbl9kYXRhID0ge30KICAgIHJlZ2VuX2RhdGFbJ2NhX2FjY291bnRfdXBsb2FkY3NyJ10gPSAiIgogICAgcmVnZW5fZGF0YVsnY2VydF90eXBlX3VwbG9hZGNzciddID0gIiIgICAgCiAgICB1dWlkID0gZ2V0X2NlcnRfdXVpZChjZXJ0KQogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtY2EtY29ubmVjdG9yaW5mby1nZXRieWNlcnR1dWlkP2NlcnRpZmljYXRlVXVpZD17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCB1dWlkLCBnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7InNlc3Npb25JZCI6Jzwlc2Vzc2lvbklkJT4nLCJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiJ9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmwsIGhlYWRlcnMgPSBoZWFkZXJzLCB2ZXJpZnkgPSBGYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgncmVzcG9uc2UnKQogICAgbG9nZ2VyLmluZm8oIlJlc3BvbnNlOiIrc3RyKHJlc3BvbnNlKSkKICAgIGNzcl9wYXJhbWV0ZXJzID0gcmVzcG9uc2UuZ2V0KCdjc3JQYXJhbWV0ZXJzJykKICAgIHJlZ2VuX2RhdGFbJ2NuX3VwbG9hZGNzciddID0gY3NyX3BhcmFtZXRlcnNbJ2NvbW1vbk5hbWUnXQogICAgcmVnZW5fZGF0YVsndXVpZF91cGxvYWRjc3InXSA9IHV1aWQKICAgIHJlZ2VuX2RhdGFbJ29yZ191cGxvYWRjc3InXSA9ICIiIGlmIGNzcl9wYXJhbWV0ZXJzWydvcmdhbml6YXRpb24nXSA9PSBOb25lIGVsc2UgY3NyX3BhcmFtZXRlcnNbJ29yZ2FuaXphdGlvbiddCiAgICByZWdlbl9kYXRhWydvcmdfdW5pdF91cGxvYWRjc3InXSA9ICIiIGlmIGNzcl9wYXJhbWV0ZXJzWydvcmdhbml6YXRpb25Vbml0J10gPT0gTm9uZSBlbHNlIGNzcl9wYXJhbWV0ZXJzWydvcmdhbml6YXRpb25Vbml0J10KICAgIHJlZ2VuX2RhdGFbJ29yZ19hZGRyZXNzX3VwbG9hZGNzciddID0gIiIgaWYgY3NyX3BhcmFtZXRlcnNbJ3N0cmVldEFkZHJlc3MnXSA9PSBOb25lIGVsc2UgY3NyX3BhcmFtZXRlcnNbJ3N0cmVldEFkZHJlc3MnXQogICAgcmVnZW5fZGF0YVsnY2l0eV91cGxvYWRjc3InXSA9ICIiIGlmIGNzcl9wYXJhbWV0ZXJzWydsb2NhbGl0eSddID09IE5vbmUgZWxzZSBjc3JfcGFyYW1ldGVyc1snbG9jYWxpdHknXQogICAgcmVnZW5fZGF0YVsnc3RhdGVfdXBsb2FkY3NyJ10gPSAiIiBpZiBjc3JfcGFyYW1ldGVyc1snc3RhdGUnXSA9PSBOb25lIGVsc2UgY3NyX3BhcmFtZXRlcnNbJ3N0YXRlJ10KICAgIHJlZ2VuX2RhdGFbJ2NvdW50cnlfdXBsb2FkY3NyJ10gPSAiIiBpZiBjc3JfcGFyYW1ldGVyc1snY291bnRyeSddID09IE5vbmUgZWxzZSBjc3JfcGFyYW1ldGVyc1snY291bnRyeSddCiAgICByZWdlbl9kYXRhWyd6aXBfdXBsb2FkY3NyJ10gPSAiIiBpZiBjc3JfcGFyYW1ldGVyc1sncG9zdGFsQ29kZSddID09IE5vbmUgZWxzZSBjc3JfcGFyYW1ldGVyc1sncG9zdGFsQ29kZSddCiAgICByZWdlbl9kYXRhWydlbWFpbF91cGxvYWRjc3InXSA9ICIiIGlmIGNzcl9wYXJhbWV0ZXJzWydtYWlsQWRkcmVzcyddID09IE5vbmUgZWxzZSBjc3JfcGFyYW1ldGVyc1snbWFpbEFkZHJlc3MnXQogICAgcmVnZW5fZGF0YVsnZG5zX3VwbG9hZGNzciddID0gIiIKICAgIHJlZ2VuX2RhdGFbJ2lwX2FkZHJlc3NfdXBsb2FkY3NyJ10gPSAiIgogICAgaWYgY3NyX3BhcmFtZXRlcnNbJ2VuaGFuY2VkU0FOVHlwZXMnXVsnZE5TTmFtZXMnXSAhPSBOb25lOgogICAgICAgIGZvciBkbnMgaW4gY3NyX3BhcmFtZXRlcnNbJ2VuaGFuY2VkU0FOVHlwZXMnXVsnZE5TTmFtZXMnXToKICAgICAgICAgICAgaWYgcmVnZW5fZGF0YVsnZG5zX3VwbG9hZGNzciddID09ICIiOgogICAgICAgICAgICAgICAgcmVnZW5fZGF0YVsnZG5zX3VwbG9hZGNzciddICs9IGRucwogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmVnZW5fZGF0YVsnZG5zX3VwbG9hZGNzciddID0gcmVnZW5fZGF0YVsnZG5zX3VwbG9hZGNzciddICsgJywnICsgZG5zCiAgICBpZiBjc3JfcGFyYW1ldGVyc1snZW5oYW5jZWRTQU5UeXBlcyddWydpUEFkZHJlc3NlcyddICE9IE5vbmUgOgogICAgICAgIGZvciBpcCBpbiBjc3JfcGFyYW1ldGVyc1snZW5oYW5jZWRTQU5UeXBlcyddWydpUEFkZHJlc3NlcyddOgogICAgICAgICAgICBpZiByZWdlbl9kYXRhWydpcF9hZGRyZXNzX3VwbG9hZGNzciddID09ICIiOgogICAgICAgICAgICAgICAgcmVnZW5fZGF0YVsnaXBfYWRkcmVzc191cGxvYWRjc3InXSArPSBzdHIoaXApCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICByZWdlbl9kYXRhWydpcF9hZGRyZXNzX3VwbG9hZGNzciddID0gcmVnZW5fZGF0YVsnaXBfYWRkcmVzc191cGxvYWRjc3InXSArICcsJyArIHN0cihpcCkKCiAgICByZWdlbl9kYXRhWydjZXJ0X3Byb2ZpbGVfcmVnZW5fdXBsb2FkY3NyJ10gPSBjc3JfcGFyYW1ldGVyc1snY2VydGlmaWNhdGVDYXRlZ29yaWVzJ11bMF0KICAgIHJlZ2VuX2RhdGFbJ3JlbmV3X3VwbG9hZGNzciddID0gJ1llcycgaWYgcmVzcG9uc2UuZ2V0KCdpc0F1dG9SZW5ld2FsJykgZWxzZSAnTm8nCiAgICByZWdlbl9kYXRhWydyZWdlbl91cGxvYWRjc3InXSA9ICdZZXMnIGlmIHJlc3BvbnNlLmdldCgnYXV0b1JlZ2VuZXJhdGVFbmFibGVkJykgZWxzZSAnTm8nCiAgICByZWdlbl9kYXRhWydyZW5ld19iZWZvcmVfdXBsb2FkY3NyJ10gPSBpbnQocmVzcG9uc2UuZ2V0KCdyZW5ld0JlZm9yZScpKQogICAgcmVnZW5fZGF0YVsncmVnZW5fYmVmb3JlX3VwbG9hZGNzciddID0gaW50KHJlc3BvbnNlLmdldCgncmVnZW5lcmF0ZUJlZm9yZUluRGF5cycpKQogICAgcmVnZW5fZGF0YVsnY2FfZGl2aXNpb25fdXBsb2FkY3NyJ10gPSAiIgogICAgcmVnZW5fZGF0YVsndmFsaWRpdHlfdXBsb2FkY3NyJ10gPSAiIgogICAgcmVnZW5fZGF0YVsnY2hhbGxlbmdlX3B3ZF91cGxvYWRjc3InXSA9ICIiCiAgICByZWdlbl9kYXRhWydjb25maXJtX3B3ZF91cGxvYWRjc3InXSA9ICIiCiAgICByZWdlbl9kYXRhWydoYXNoX3VwbG9hZGNzciddID0gIiIKICAgIHJlZ2VuX2RhdGFbJ2tleV91cGxvYWRjc3InXSA9ICIiCiAgICByZWdlbl9kYXRhWydiaXRfdXBsb2FkY3NyJ10gPSAiIgogICAgcmVnZW5fZGF0YVsnc2VydmVyX3R5cGVfdXBsb2FkY3NyJ10gPSAiIgogICAgcmV0dXJuIHJlZ2VuX2RhdGEKICAgIAoKZGVmIGdldF9jZXJ0X3V1aWQoY2VydCk6CiAgICBjbl9zbiA9IGNlcnQuc3BsaXQoJ3wnKQogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtZmV0Y2gtdXVpZC1ieS1jbi1zZXJpYWwtbnVtYmVyP2d3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoCiAgICAgICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5KQogICAgaGVhZGVycyA9IHsKICAgICAgICAic2Vzc2lvbklkIjogJzwlc2Vzc2lvbklkJT4nLAogICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgIkFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgfQogICAgcGF5bG9hZCA9IHsicGF5bG9hZCI6IHsiY29tbW9uTmFtZSI6IGNuX3NuWzBdLCAic2VyaWFsTnVtYmVyIjogY25fc25bMV19fQogICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KAogICAgICAgIHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgZGF0YT1qc29uLmR1bXBzKHBheWxvYWQpLCB2ZXJpZnk9RmFsc2UpCiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgCiAgICAKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGdyb3VwX25hbWUgPSAnPCVhc3NpZ25fZ3JvdXAlPicKICAgIGNzcl91cGxvYWRjc3IgPSBbXQogICAgY2VydGlmaWNhdGVzID0gJzwlY2VydGlmaWNhdGVzJT4nCiAgICBjZXJ0aWZpY2F0ZXMgPSBjZXJ0aWZpY2F0ZXMuc3BsaXQoJywnKQogICAgZm9yIGNlcnQgaW4gY2VydGlmaWNhdGVzOgogICAgICAgIGNzcl91cGxvYWRjc3IuYXBwZW5kKGdldF9jZXJ0X2RldGFpbHMoY2VydCkpCiAgICBwcmludChqc29uLmR1bXBzKGNzcl91cGxvYWRjc3IpKQo=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "fetch_policy_details" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch CA Settings and policy details for Regenerate",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQoKaW1wb3J0IGxvZ2dlcl91dGlsCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoIkNlcnQgUmVnZW5lcmF0ZSBPT0IgLSBGZXRjaCBDQSBTZXR0aW5ncyBhbmQgcG9saWN5IGRldGFpbHMiKQoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfcG9saWN5X25hbWUoZ3JvdXBfbmFtZSk6CiAgICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgICB1cmwgPSAie31hdnhhcGkvY2VydC1ncm91cC1mZXRjaC1ieS1uYW1lP2dyb3VwTmFtZT17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCBncm91cF9uYW1lLCBnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7CiAgICAgICAgInNlc3Npb25JZCI6ICc8JXNlc3Npb25JZCU+JywKICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKS5nZXQoInJlc3BvbnNlIikuZ2V0KCJwb2xpY3lOYW1lIikKCgpkZWYgZ2V0X3BvbGljeV9kZXRhaWxzKHBvbGljeV9uYW1lKToKICAgIGNhX3NldHRpbmdzID0gW10KICAgIGhhc2hfYWxnbyA9IFtdCiAgICBrZXlfdHlwZV9iaXRfbGVuID0gW10KICAgIGNhX2RpdmlzaW9ucyA9IFtdCiAgICBjYV9zZXR0aW5nc19wcmVzZW50ID0gRmFsc2UKICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSA9IGZldGNoX2dhdGV3YXlfa2V5KCkKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LXBvbGljeS1nZXQtYnktbmFtZT9wb2xpY3lOYW1lPXt9Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoZ2F0ZXdheV91cmwsIHBvbGljeV9uYW1lLCBnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7CiAgICAgICAgInNlc3Npb25JZCI6ICc8JXNlc3Npb25JZCU+JywKICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgcG9saWN5X2RldGFpbHMgPSByZXNwb25zZS5qc29uKCkuZ2V0KCJyZXNwb25zZSIpCiAgICBwb2xpY3lfY2FfZGV0YWlscyA9IHBvbGljeV9kZXRhaWxzWydjZXJ0aWZpY2F0ZVBvbGljeUNhQWNjb3VudERldGFpbHMnXQogICAgZm9yIGNhX2RldGFpbHMgaW4gcG9saWN5X2NhX2RldGFpbHM6CiAgICAgICAgaWYgY2FfZGV0YWlsc1snY2VydGlmaWNhdGVBdXRob3JpdHknXSA9PSAnRGlnaUNlcnQnOgogICAgICAgICAgICBoYXNoX2FsZ28uZXh0ZW5kKGNhX2RldGFpbHNbJ3NoYVR5cGUnXSkKICAgICAgICAgICAgY2VydGlmaWNhdGVLZXlQYXJhbXMgPSBjYV9kZXRhaWxzWydjZXJ0aWZpY2F0ZUtleVBhcmFtcyddCiAgICAgICAgICAgIGNlcnRfa2V5X3BhcmFtcyA9IGNlcnRpZmljYXRlS2V5UGFyYW1zLml0ZW1zKCkKICAgICAgICAgICAgZm9yIGtleSx2YWx1ZXMgaW4gY2VydF9rZXlfcGFyYW1zOgogICAgICAgICAgICAgICAgaWYgdmFsdWVzOgogICAgICAgICAgICAgICAgICAgIGZvciBiaXRfbGVuIGluIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICAgICAga2V5X3R5cGVfYml0X2xlbi5hcHBlbmQoa2V5ICsgJyAtICcgKyBiaXRfbGVuKQogICAgICAgICAgICBmb3Igc2V0dGluZ3MgaW4gY2FfZGV0YWlsc1snY2FTZXR0aW5ncyddOgogICAgICAgICAgICAgICAgY2Ffc2V0dGluZ3MuYXBwZW5kKHN0cihzZXR0aW5nc1snbmFtZSddKSkKICAgICAgICAgICAgICAgIGZvciBkaXZpc2lvbnMgaW4gc2V0dGluZ3NbJ2RpdmlzaW9ucyddOgogICAgICAgICAgICAgICAgICAgIGNhX2RpdmlzaW9ucy5hcHBlbmQoc3RyKGRpdmlzaW9uc1snbmFtZSddKSkKICAgIHJldHVybiBjYV9zZXR0aW5ncywgY2FfZGl2aXNpb25zLCBoYXNoX2FsZ28sIGtleV90eXBlX2JpdF9sZW4KICAgIAoKZGVmIGdldF9jYV9zcGVjaWZpY19maWVsZHMoKToKICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICB1cmwgPSAie31hdnhhcGkvY2VydC1jYXNwZWNpZmljLWZpZWxkcz9ncm91cE5hbWU9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgIGhlYWRlcnMgPSB7CiAgICAgICAic2Vzc2lvbklkIjogJzwlc2Vzc2lvbklkJT4nLAogICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgfQogICBwYXlsb2FkID0gewogICAgICAgInBheWxvYWQiIDogewogICAgICAgICAgICJjZXJ0aWZpY2F0ZUF1dGhvcml0eSI6ICJEaWdpQ2VydCIsCiAgICAgICAgICAgImNhU2V0dGluZ3NOYW1lIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVUeXBlIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVDYXRlZ29yeSI6IiIsCiAgICAgICAgICAgImFjdGlvbiI6ICdTdWJtaXQnCiAgICAgICB9CiAgIH0KICAgCiAgIHJlc3BvbnNlID0gcmVxdWVzdHMucG9zdCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIGRhdGEgPSBqc29uLmR1bXBzKHBheWxvYWQpLCB2ZXJpZnk9RmFsc2UpCiAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICBzZXJ2ZXJfdHlwZXMgPSBbXQogICB2ZW5kb3JTcGVjaWZpY0RldGFpbHMgPSByZXNwb25zZVsndmVuZG9yU3BlY2lmaWNEZXRhaWxzJ10KICAgZm9yIGRldGFpbHMgaW4gdmVuZG9yU3BlY2lmaWNEZXRhaWxzOgogICAgICAgaWYgZGV0YWlsc1snaWQnXSA9PSAnc2VydmVyVHlwZUF0dHJpYnV0ZSc6CiAgICAgICAgICAgZm9yIHZhbCBpbiBkZXRhaWxzWyd2YWx1ZXMnXToKICAgICAgICAgICAgICAgc2VydmVyX3R5cGVzLmFwcGVuZCh2YWxbJ3ZhbHVlJ10pCiAgIHJldHVybiBzZXJ2ZXJfdHlwZXMKCgogICAgCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICBncm91cF9uYW1lID0gJzwlYXNzaWduX2dyb3VwJT4nCiAgICBjc3JfZ2VuZXJhdGlvbl90eXBlID0gJzxjc3JfZ2VuPicKICAgIHBvbGljeV9uYW1lID0gZ2V0X3BvbGljeV9uYW1lKGdyb3VwX25hbWUpCiAgICBjYV9zZXR0aW5ncywgY2FfZGl2aXNpb25zLCBoYXNoX2FsZ28sIGtleV90eXBlX2JpdF9sZW4gPSBnZXRfcG9saWN5X2RldGFpbHMocG9saWN5X25hbWUpCiAgICBzZXJ2ZXJfdHlwZXMgPSBnZXRfY2Ffc3BlY2lmaWNfZmllbGRzKCkKICAgIGlmIGNzcl9nZW5lcmF0aW9uX3R5cGUgPT0gJ0FwcFZpZXdYJzoKICAgICAgICBkYXRhID0gW3siY2FfYWNjb3VudCI6IGFjY30gZm9yIGFjYyBpbiBjYV9zZXR0aW5nc10gKyBbeyJoYXNoX2Z1bmN0aW9uIjp2YWx9IGZvciB2YWwgaW4gaGFzaF9hbGdvXSArIFt7ImtleV90eXBlX2JpdF9sZW4iOiB2YWx9IGZvciB2YWwgaW4ga2V5X3R5cGVfYml0X2xlbl0gKyBbeyJzZXJ2ZXJfdHlwZSI6dmFsfSBmb3IgdmFsIGluIHNlcnZlcl90eXBlc10KICAgICAgICBwcmludChqc29uLmR1bXBzKGRhdGEpKQogICAgZWxzZToKICAgICAgICBkYXRhID0gW3siY2FfYWNjb3VudF91cGxvYWRjc3IiOiBhY2N9IGZvciBhY2MgaW4gY2Ffc2V0dGluZ3NdICsgW3sic2VydmVyX3R5cGVfdXBsb2FkY3NyIjp2YWx9IGZvciB2YWwgaW4gc2VydmVyX3R5cGVzXQogICAgICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCgo=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "fetch_csr_parameters" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch CSR Parameters from uploaded CSR",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQppbXBvcnQgbG9nZ2VyX3V0aWwKCnRydWUgPSBUcnVlCmZhbHNlID0gRmFsc2UKbnVsbCA9IE5vbmUKCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoJ0NlcnQgUmVnZW5lcmF0ZSBPT0IgLSBGZXRjaCBDU1IgUGFyYW1ldGVycyBmcm9tIHVwbG9hZGVkIENTUicpCgoKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKICAgIHByb3BfZmlsZV9wYXRoID0gYWJzX3BhdGggKyAiLy4uL3Byb3BlcnRpZXMvYXBwdmlld3gucHJvcGVydGllcyIKICAgIGNvbmZpZyA9IENvbmZpZ09iaihwcm9wX2ZpbGVfcGF0aCkKICAgIHJldHVybiBjb25maWdbJ0dBVEVXQVlfQkFTRV9VUkwnXSwgY29uZmlnWydHQVRFV0FZX0tFWSddCgoKZGVmIGdldF9jc3JfcGFyYW1ldGVycyhjc3IpOgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtY3NyLXVwbG9hZD8mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICBwYXlsb2FkID0gewogICAgICAgICJwYXlsb2FkIiA6IHsKICAgICAgICAgICAgImNzckNvbnRlbnQiOiBjc3IsCiAgICAgICAgICAgICJjZXJ0aWZpY2F0ZUF1dGhvcml0eSI6ICIiLAogICAgICAgICAgICAiY2F0ZWdvcnkiOiAiIiwKICAgICAgICAgICAgImNvbW1vbk5hbWUiOiAiIgogICAgICAgIH0KICAgIH0KICAgIGxvZ2dlci5pbmZvKCJVcGxvYWQgQ1NSIFBheWxvYWQ6IitzdHIocGF5bG9hZCkpCiAgICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWpzb24uZHVtcHMocGF5bG9hZCksIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgbG9nZ2VyLmluZm8oIlVwbG9hZCBDU1IgUmVzcG9uc2U6IitzdHIocmVzcG9uc2UpKQogICAgZGF0YSA9IHt9CiAgICBkYXRhWydjbl91cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2NvbW1vbk5hbWUnKQogICAgZGF0YVsnb3JnX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnb3JnYW5pemF0aW9uJykKICAgIGRhdGFbJ29yZ191bml0X3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnb3JnYW5pemF0aW9uVW5pdCcpCiAgICBkYXRhWydjaXR5X3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnbG9jYWxpdHknKQogICAgZGF0YVsnY291bnRyeV91cGxvYWRjc3InXSA9IHJlc3BvbnNlWydjc3JQYXJhbXMnXS5nZXQoJ2NvdW50cnknKQogICAgZGF0YVsnc3RhdGVfdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdzdGF0ZScpCiAgICBkYXRhWydrZXlfdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdrZXlUeXBlJykKICAgIGRhdGFbJ2hhc2hfdXBsb2FkY3NyJ10gPSByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdoYXNoRnVuY3Rpb24nKQogICAgZGF0YVsnYml0X3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnYml0TGVuZ3RoJykKICAgIGRhdGFbJ2VtYWlsX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnbWFpbEFkZHJlc3MnKQogICAgZGF0YVsnZG5zX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpLmdldCgnZE5TTmFtZXMnKSBpZiByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdlbmhhbmNlZFNBTlR5cGVzJykgZWxzZSBbXQogICAgIyBkYXRhWydpcF9hZGRyZXNzX3VwbG9hZGNzciddID0gcmVzcG9uc2VbJ2NzclBhcmFtcyddLmdldCgnZW5oYW5jZWRTQU5UeXBlcycpLmdldCgnaVBBZGRyZXNzZXMnKSBpZiByZXNwb25zZVsnY3NyUGFyYW1zJ10uZ2V0KCdlbmhhbmNlZFNBTlR5cGVzJykgZWxzZSBbXQogICAgcmV0dXJuIGRhdGEKCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgY3NyID0gcicnJzx1cGxvYWRfY3NyPicnJwogICAgY3NyID0gY3NyLnJlcGxhY2UoIlxcbiIsIlxuIikKICAgIGNzcl9wYXJhbWV0ZXJzID0gZ2V0X2Nzcl9wYXJhbWV0ZXJzKGNzcikKICAgIHByaW50KGpzb24uZHVtcHMoW2Nzcl9wYXJhbWV0ZXJzXSkpCiAgICA=",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "ca_account_uploadcsr" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Policy Details Upload CSR",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQoKaW1wb3J0IGxvZ2dlcl91dGlsCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoIkNlcnQgQ3JlYXRlIE9PQiAtIEZldGNoIFBvbGljeSBEZXRhaWxzIFVwbG9hZCBDU1IiKQoKCgpkZWYgZmV0Y2hfZ2F0ZXdheV9rZXkoKToKICAgIGNvbmZfY29udGVudCA9IHt9CiAgICBhYnNfcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKQogICAgcHJvcF9maWxlX3BhdGggPSBhYnNfcGF0aCArICIvLi4vcHJvcGVydGllcy9hcHB2aWV3eC5wcm9wZXJ0aWVzIgogICAgY29uZmlnID0gQ29uZmlnT2JqKHByb3BfZmlsZV9wYXRoKQogICAgcmV0dXJuIGNvbmZpZ1snR0FURVdBWV9CQVNFX1VSTCddLCBjb25maWdbJ0dBVEVXQVlfS0VZJ10KCgpkZWYgZ2V0X3BvbGljeV9uYW1lKGdyb3VwX25hbWUpOgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtZ3JvdXAtZmV0Y2gtYnktbmFtZT9ncm91cE5hbWU9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJldHVybiByZXNwb25zZS5qc29uKCkuZ2V0KCJyZXNwb25zZSIpLmdldCgicG9saWN5TmFtZSIpCgoKZGVmIGdldF9wb2xpY3lfZGV0YWlscyhwb2xpY3lfbmFtZSk6CiAgICBjYV9zZXR0aW5ncyA9IFtdCiAgICBoYXNoX2FsZ28gPSBbXQogICAga2V5X3R5cGVfYml0X2xlbiA9IFtdCiAgICAjIGNhX2RpdmlzaW9ucyA9IFtdCiAgICBjYV9zZXR0aW5nc19wcmVzZW50ID0gRmFsc2UKICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSA9IGZldGNoX2dhdGV3YXlfa2V5KCkKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LXBvbGljeS1nZXQtYnktbmFtZT9wb2xpY3lOYW1lPXt9Jmd3a2V5PXt9Jmd3c291cmNlPWV4dGVybmFsIi5mb3JtYXQoZ2F0ZXdheV91cmwsIHBvbGljeV9uYW1lLCBnYXRld2F5X2tleSkKICAgIGhlYWRlcnMgPSB7CiAgICAgICAgInNlc3Npb25JZCI6ICc8JXNlc3Npb25JZCU+JywKICAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0KICAgIHJlc3BvbnNlID0gcmVxdWVzdHMuZ2V0KHVybD11cmwsIGhlYWRlcnM9aGVhZGVycywgdmVyaWZ5PUZhbHNlKQogICAgcG9saWN5X2RldGFpbHMgPSByZXNwb25zZS5qc29uKCkuZ2V0KCJyZXNwb25zZSIpCiAgICBwb2xpY3lfY2FfZGV0YWlscyA9IHBvbGljeV9kZXRhaWxzWydjZXJ0aWZpY2F0ZVBvbGljeUNhQWNjb3VudERldGFpbHMnXQogICAgZm9yIGNhX2RldGFpbHMgaW4gcG9saWN5X2NhX2RldGFpbHM6CiAgICAgICAgaWYgY2FfZGV0YWlsc1snY2VydGlmaWNhdGVBdXRob3JpdHknXSA9PSAnPCVjZXJ0X2F1dGhvcml0eSU+JzoKICAgICAgICAgICAgaGFzaF9hbGdvLmV4dGVuZChjYV9kZXRhaWxzWydzaGFUeXBlJ10pCiAgICAgICAgICAgIGNlcnRpZmljYXRlS2V5UGFyYW1zID0gY2FfZGV0YWlsc1snY2VydGlmaWNhdGVLZXlQYXJhbXMnXQogICAgICAgICAgICBjZXJ0X2tleV9wYXJhbXMgPSBjZXJ0aWZpY2F0ZUtleVBhcmFtcy5pdGVtcygpCiAgICAgICAgICAgIGZvciBrZXksdmFsdWVzIGluIGNlcnRfa2V5X3BhcmFtczoKICAgICAgICAgICAgICAgIGlmIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICBmb3IgYml0X2xlbiBpbiB2YWx1ZXM6CiAgICAgICAgICAgICAgICAgICAgICAgIGtleV90eXBlX2JpdF9sZW4uYXBwZW5kKGtleSArICcgLSAnICsgYml0X2xlbikKICAgICAgICAgICAgZm9yIHNldHRpbmdzIGluIGNhX2RldGFpbHNbJ2NhU2V0dGluZ3MnXToKICAgICAgICAgICAgICAgIGNhX3NldHRpbmdzLmFwcGVuZChzdHIoc2V0dGluZ3NbJ25hbWUnXSkpCiAgICAgICAgICAgICAgICAjIGZvciBkaXZpc2lvbnMgaW4gc2V0dGluZ3NbJ2RpdmlzaW9ucyddOgogICAgICAgICAgICAgICAgIyAgICAgY2FfZGl2aXNpb25zLmFwcGVuZChzdHIoZGl2aXNpb25zWyduYW1lJ10pKQogICAgcmV0dXJuIGNhX3NldHRpbmdzLCBoYXNoX2FsZ28sIGtleV90eXBlX2JpdF9sZW4KICAgIAoKZGVmIGdldF9jYV9zcGVjaWZpY19maWVsZHMoKToKICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICB1cmwgPSAie31hdnhhcGkvY2VydC1jYXNwZWNpZmljLWZpZWxkcz9ncm91cE5hbWU9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdChnYXRld2F5X3VybCwgZ3JvdXBfbmFtZSwgZ2F0ZXdheV9rZXkpCiAgIGhlYWRlcnMgPSB7CiAgICAgICAic2Vzc2lvbklkIjogJzwlc2Vzc2lvbklkJT4nLAogICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICJBY2NlcHQiOiAiYXBwbGljYXRpb24vanNvbiIKICAgfQogICBwYXlsb2FkID0gewogICAgICAgInBheWxvYWQiIDogewogICAgICAgICAgICJjZXJ0aWZpY2F0ZUF1dGhvcml0eSI6ICI8JWNlcnRfYXV0aG9yaXR5JT4iLAogICAgICAgICAgICJjYVNldHRpbmdzTmFtZSI6IiIsCiAgICAgICAgICAgImNlcnRpZmljYXRlVHlwZSI6IiIsCiAgICAgICAgICAgImNlcnRpZmljYXRlQ2F0ZWdvcnkiOiIiLAogICAgICAgICAgICJhY3Rpb24iOiJTdWJtaXQiCiAgICAgICB9CiAgIH0KICAgCiAgIHJlc3BvbnNlID0gcmVxdWVzdHMucG9zdCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIGRhdGEgPSBqc29uLmR1bXBzKHBheWxvYWQpLCB2ZXJpZnk9RmFsc2UpCiAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICBsb2dnZXIuaW5mbygiU2VydmVyIFR5cGVzOiIrc3RyKHJlc3BvbnNlKSkKICAgc2VydmVyX3R5cGVzID0gW10KICAgdmVuZG9yU3BlY2lmaWNEZXRhaWxzID0gcmVzcG9uc2VbJ3ZlbmRvclNwZWNpZmljRGV0YWlscyddCiAgIGZvciBkZXRhaWxzIGluIHZlbmRvclNwZWNpZmljRGV0YWlsczoKICAgICAgIGlmIGRldGFpbHNbJ2lkJ10gPT0gJ3NlcnZlclR5cGVBdHRyaWJ1dGUnOgogICAgICAgICAgIGZvciB2YWwgaW4gZGV0YWlsc1sndmFsdWVzJ106CiAgICAgICAgICAgICAgIHNlcnZlcl90eXBlcy5hcHBlbmQodmFsWyd2YWx1ZSddKQogICByZXR1cm4gc2VydmVyX3R5cGVzCgoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGdyb3VwX25hbWUgPSAnRGVmYXVsdCcKICAgIHBvbGljeV9uYW1lID0gZ2V0X3BvbGljeV9uYW1lKGdyb3VwX25hbWUpCiAgICBjYV9zZXR0aW5ncywgaGFzaF9hbGdvLCBrZXlfdHlwZV9iaXRfbGVuID0gZ2V0X3BvbGljeV9kZXRhaWxzKHBvbGljeV9uYW1lKQogICAgc2VydmVyX3R5cGVzID0gZ2V0X2NhX3NwZWNpZmljX2ZpZWxkcygpCiAgICBkYXRhID0gW3siY2FfYWNjb3VudF91cGxvYWRjc3IiOiBhY2N9IGZvciBhY2MgaW4gY2Ffc2V0dGluZ3NdICsgW3sic2VydmVyX3R5cGVfdXBsb2FkY3NyIjp2YWx9IGZvciB2YWwgaW4gc2VydmVyX3R5cGVzXQogICAgcHJpbnQoanNvbi5kdW1wcyhkYXRhKSkK",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "cert_type_uploadcsr" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Cert type upload CSR",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKCmRlZiBmZXRjaF9nYXRld2F5X2tleSgpOgogICAgY29uZl9jb250ZW50ID0ge30KICAgIGFic19wYXRoID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBwcm9wX2ZpbGVfcGF0aCA9IGFic19wYXRoICsgIi8uLi9wcm9wZXJ0aWVzL2FwcHZpZXd4LnByb3BlcnRpZXMiCiAgICBjb25maWcgPSBDb25maWdPYmoocHJvcF9maWxlX3BhdGgpCiAgICByZXR1cm4gY29uZmlnWydHQVRFV0FZX0JBU0VfVVJMJ10sIGNvbmZpZ1snR0FURVdBWV9LRVknXQoKCmRlZiBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lKToKICAgIGNlcnRpZmljYXRlX3R5cGVzID0gW10KICAgIGRpdmlzaW9uX2lkID0gJycKICAgIGdhdGV3YXlfdXJsLCBnYXRld2F5X2tleSA9IGZldGNoX2dhdGV3YXlfa2V5KCkKICAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhLXNldHRpbmdzLWdldGJ5Y2FuYW1lP2NlcnRpZmljYXRlQXV0aG9yaXR5PUNvbW9kbyBDZXJ0aWZpY2F0ZSBNYW5hZ2VyJmNlcnRpZmljYXRlQ2F0ZWdvcnk9U2VydmVyJmNlcnRpZmljYXRlR3JvdXA9e30mZ3drZXk9e30mZ3dzb3VyY2U9ZXh0ZXJuYWwiLmZvcm1hdCgKICAgIGdhdGV3YXlfdXJsLCBncm91cF9uYW1lLCBnYXRld2F5X2tleSkKICAgIGNhdCA9ICdzZXJ2ZXInCiAgICBpZiAiPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4iID09ICJDbGllbnQiOgogICAgICAgIGNhdCA9ICJjbGllbnQiCiAgICBpZiAiPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4iID09ICJDb2RlU2lnbmluZyI6CiAgICAgICAgY2F0ID0gImNvZGVTaWduaW5nIgogICAgaGVhZGVycyA9IHsKICAgICAgICAic2Vzc2lvbklkIjogJzwlc2Vzc2lvbklkJT4nLAogICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgIkFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uIgogICAgfQogICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCB2ZXJpZnk9RmFsc2UpCiAgICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKS5nZXQoInJlc3BvbnNlIikKICAgIGZvciBzZXR0aW5nIGluIHJlc3BvbnNlOgogICAgICAgIGlmIHNldHRpbmdbJ25hbWUnXSA9PSBjYV9zZXR0aW5nX25hbWU6CiAgICAgICAgICAgIGNlcnRfdHlwZXMgPSBzZXR0aW5nWydkZWZhdWx0Q2VydFR5cGVzSGllcmFyY2h5J11bImNlcnRUeXBlcyJdCiAgICAgICAgICAgIGZvciBjZXJ0X3R5cGUgaW4gY2VydF90eXBlczoKICAgICAgICAgICAgICAgIGlmIGNlcnRfdHlwZVsndHlwZSddID09IGNhdDoKICAgICAgICAgICAgICAgICAgICBjZXJ0aWZpY2F0ZV90eXBlcy5hcHBlbmQoY2VydF90eXBlWyduYW1lJ10pCiAgICByZXR1cm4gY2VydGlmaWNhdGVfdHlwZXMKICAgIAoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIGdyb3VwX25hbWUgPSAnPCVhc3NpZ25fZ3JvdXAlPicKICAgIGNhX3NldHRpbmdfbmFtZSA9ICc8Y2FfYWNjb3VudF91cGxvYWRjc3I+JwogICAgIyBjYV9kaXZpc2lvbiA9ICc8Y2FfZGl2aXNpb24+JwogICAgY2VydGlmaWNhdGVfdHlwZXM9IGdldF9jYV9zZXR0aW5ncyhncm91cF9uYW1lLCBjYV9zZXR0aW5nX25hbWUpCiAgICBkYXRhID0gW3siY2VydF90eXBlIjp2YWx9IGZvciB2YWwgaW4gY2VydGlmaWNhdGVfdHlwZXNdICsgW3siY2VydF90eXBlX3VwbG9hZGNzciI6IHZhbH0gZm9yIHZhbCBpbiBjZXJ0aWZpY2F0ZV90eXBlc10KICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCg==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "server_type_uploadcsr" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch server types for CSR upload",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQppbXBvcnQgYXBwdmlld3gKaW1wb3J0IGxvZ2dlcl91dGlsCnRydWUgPSBUcnVlCmZhbHNlID0gRmFsc2UKbnVsbCA9IE5vbmUKCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoJ1NlcnZlciB0eXBlcycpCgoKZ3JvdXBfbmFtZSA9ICI8JWFzc2lnbl9ncm91cCU+IgoKCgpkZWYgZmV0Y2hfZ2F0ZXdheV9rZXkoKToKICAgIGNvbmZfY29udGVudCA9IHt9CiAgICBhYnNfcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKQogICAgcHJvcF9maWxlX3BhdGggPSBhYnNfcGF0aCArICIvLi4vcHJvcGVydGllcy9hcHB2aWV3eC5wcm9wZXJ0aWVzIgogICAgY29uZmlnID0gQ29uZmlnT2JqKHByb3BfZmlsZV9wYXRoKQogICAgcmV0dXJuIGNvbmZpZ1snR0FURVdBWV9CQVNFX1VSTCddLCBjb25maWdbJ0dBVEVXQVlfS0VZJ10KCgpkZWYgZ2V0X2NhX3NwZWNpZmljX2ZpZWxkcygpOgogICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhc3BlY2lmaWMtZmllbGRzP2dyb3VwTmFtZT17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCBncm91cF9uYW1lLCBnYXRld2F5X2tleSkKICAgaGVhZGVycyA9IHsKICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgIkFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uIgogICB9CiAgIHBheWxvYWQgPSB7CiAgICAgICAicGF5bG9hZCIgOiB7CiAgICAgICAgICAgImNlcnRpZmljYXRlQXV0aG9yaXR5IjogIjwlY2VydF9hdXRob3JpdHklPiIsCiAgICAgICAgICAgImNhU2V0dGluZ3NOYW1lIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVUeXBlIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVDYXRlZ29yeSI6IiIsCiAgICAgICAgICAgImFjdGlvbiI6IlJlbmV3IgogICAgICAgfQogICB9CiAgIAogICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCBkYXRhID0ganNvbi5kdW1wcyhwYXlsb2FkKSwgdmVyaWZ5PUZhbHNlKQogICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKS5nZXQoInJlc3BvbnNlIikKICAgbG9nZ2VyLmluZm8oIlNlcnZlciBUeXBlczoiK3N0cihyZXNwb25zZSkpCiAgIHNlcnZlcl90eXBlcyA9IFtdCiAgIHZlbmRvclNwZWNpZmljRGV0YWlscyA9IHJlc3BvbnNlWyd2ZW5kb3JTcGVjaWZpY0RldGFpbHMnXQogICBmb3IgZGV0YWlscyBpbiB2ZW5kb3JTcGVjaWZpY0RldGFpbHM6CiAgICAgICBpZiBkZXRhaWxzWydpZCddID09ICdzZXJ2ZXJUeXBlQXR0cmlidXRlJzoKICAgICAgICAgICBmb3IgdmFsIGluIGRldGFpbHNbJ3ZhbHVlcyddOgogICAgICAgICAgICAgICBzZXJ2ZXJfdHlwZXMuYXBwZW5kKHZhbFsndmFsdWUnXSkKICAgcmV0dXJuIHNlcnZlcl90eXBlcwogICAKaWYgX19uYW1lX189PSJfX21haW5fXyI6CiAgICBzZXJ2ZXJfdHlwZXMgPSBnZXRfY2Ffc3BlY2lmaWNfZmllbGRzKCkKICAgIGlmICc8Y2hhbGxlbmdlX3B3ZF91cGxvYWRjc3I+JyE9Jzxjb25maXJtX3B3ZF91cGxvYWRjc3I+JzoKICAgICAgICBwcmludChqc29uLmR1bXBzKHsiZXJyb3IiOiJQYXNzd29yZCBNaXNtYXRjaCIsImRhdGEiOlt7ImNoYWxsZW5nZV9wd2RfdXBsb2FkY3NyIjoiIiwiY29uZmlybV9wd2RfdXBsb2FkY3NyIjoiIn1dfSkpCiAgICBwcmludChqc29uLmR1bXBzKFt7InNlcnZlcl90eXBlX3VwbG9hZGNzciI6dmFsfSBmb3IgdmFsIGluIHNlcnZlcl90eXBlc10pKQogICAgCiAgICAKICAgIA==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "server_type" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch server types",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpIRUxQRVIpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6REVQRU5ERU5DSUVTKQppbXBvcnQgYXBwdmlld3gKaW1wb3J0IGxvZ2dlcl91dGlsCnRydWUgPSBUcnVlCmZhbHNlID0gRmFsc2UKbnVsbCA9IE5vbmUKCmxvZ2dlciA9IGxvZ2dlcl91dGlsLmdldF9sb2dnZXIoJ1NlcnZlciB0eXBlcycpCgoKZ3JvdXBfbmFtZSA9ICI8JWFzc2lnbl9ncm91cCU+IgoKCgpkZWYgZmV0Y2hfZ2F0ZXdheV9rZXkoKToKICAgIGNvbmZfY29udGVudCA9IHt9CiAgICBhYnNfcGF0aCA9IG9zLnBhdGguZGlybmFtZShvcy5wYXRoLmFic3BhdGgoX19maWxlX18pKQogICAgcHJvcF9maWxlX3BhdGggPSBhYnNfcGF0aCArICIvLi4vcHJvcGVydGllcy9hcHB2aWV3eC5wcm9wZXJ0aWVzIgogICAgY29uZmlnID0gQ29uZmlnT2JqKHByb3BfZmlsZV9wYXRoKQogICAgcmV0dXJuIGNvbmZpZ1snR0FURVdBWV9CQVNFX1VSTCddLCBjb25maWdbJ0dBVEVXQVlfS0VZJ10KCgpkZWYgZ2V0X2NhX3NwZWNpZmljX2ZpZWxkcygpOgogICBnYXRld2F5X3VybCwgZ2F0ZXdheV9rZXkgPSBmZXRjaF9nYXRld2F5X2tleSgpCiAgIHVybCA9ICJ7fWF2eGFwaS9jZXJ0LWNhc3BlY2lmaWMtZmllbGRzP2dyb3VwTmFtZT17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCBncm91cF9uYW1lLCBnYXRld2F5X2tleSkKICAgaGVhZGVycyA9IHsKICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAiQ29udGVudC1UeXBlIjogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgIkFjY2VwdCI6ICJhcHBsaWNhdGlvbi9qc29uIgogICB9CiAgIHBheWxvYWQgPSB7CiAgICAgICAicGF5bG9hZCIgOiB7CiAgICAgICAgICAgImNlcnRpZmljYXRlQXV0aG9yaXR5IjogIjwlY2VydF9hdXRob3JpdHklPiIsCiAgICAgICAgICAgImNhU2V0dGluZ3NOYW1lIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVUeXBlIjoiIiwKICAgICAgICAgICAiY2VydGlmaWNhdGVDYXRlZ29yeSI6IiIsCiAgICAgICAgICAgImFjdGlvbiI6IlJlbmV3IgogICAgICAgfQogICB9CiAgIAogICByZXNwb25zZSA9IHJlcXVlc3RzLnBvc3QodXJsPXVybCwgaGVhZGVycz1oZWFkZXJzLCBkYXRhID0ganNvbi5kdW1wcyhwYXlsb2FkKSwgdmVyaWZ5PUZhbHNlKQogICByZXNwb25zZSA9IHJlc3BvbnNlLmpzb24oKS5nZXQoInJlc3BvbnNlIikKICAgbG9nZ2VyLmluZm8oIlNlcnZlciBUeXBlczoiK3N0cihyZXNwb25zZSkpCiAgIHNlcnZlcl90eXBlcyA9IFtdCiAgIHZlbmRvclNwZWNpZmljRGV0YWlscyA9IHJlc3BvbnNlWyd2ZW5kb3JTcGVjaWZpY0RldGFpbHMnXQogICBmb3IgZGV0YWlscyBpbiB2ZW5kb3JTcGVjaWZpY0RldGFpbHM6CiAgICAgICBpZiBkZXRhaWxzWydpZCddID09ICdzZXJ2ZXJUeXBlQXR0cmlidXRlJzoKICAgICAgICAgICBmb3IgdmFsIGluIGRldGFpbHNbJ3ZhbHVlcyddOgogICAgICAgICAgICAgICBzZXJ2ZXJfdHlwZXMuYXBwZW5kKHZhbFsndmFsdWUnXSkKICAgcmV0dXJuIHNlcnZlcl90eXBlcwogICAKaWYgX19uYW1lX189PSJfX21haW5fXyI6CiAgICBzZXJ2ZXJfdHlwZXMgPSBnZXRfY2Ffc3BlY2lmaWNfZmllbGRzKCkKICAgIGlmICc8Y2hhbGxlbmdlX3B3ZD4nIT0nPGNvbmZpcm1fcHdkPic6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyh7ImVycm9yIjoiUGFzc3dvcmQgTWlzbWF0Y2giLCJkYXRhIjpbeyJjaGFsbGVuZ2VfcHdkIjoiIiwiY29uZmlybV9wd2QiOiIifV19KSkKICAgIHByaW50KGpzb24uZHVtcHMoW3sic2VydmVyX3R5cGUiOnZhbH0gZm9yIHZhbCBpbiBzZXJ2ZXJfdHlwZXNdKSkKICAgIAogICAg",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "ca" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Policy Details",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "ca_account" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Cert Types from CA Account",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKZGVmIGdldF9wb2xpY3lfYnlfZ3JvdXBfbmFtZSgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ1NlcnZlcic6CiAgICAgICAgY2F0ID0gJ3NlcnZlcicKICAgIGVsaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnQ2xpZW50JzoKICAgICAgICBjYXQgPSAnY2xpZW50JwogICAgZWxpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdDb2RlU2lnbmluZyc6CiAgICAgICAgY2F0ID0gJ2NvZGVTaWduaW5nJwogICAgICAgIAogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtZ2V0LXBvbGljeS1ieS1ncm91cG5hbWU/Y2VydGlmaWNhdGVHcm91cE5hbWU9e30mY2VydGlmaWNhdGVDYXRlZ29yeT17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8JWFzc2lnbl9ncm91cCU+JywgY2F0LCBnYXRld2F5X2tleSkKCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpCgogICAgZGF0YSA9IHt9CiAgICBmb3IgY2VydF9wb2xpY3lfY2FfYWNjX2RldGFpbCBpbiByZXNwb25zZS5nZXQoInJlc3BvbnNlIikuZ2V0KCJjZXJ0aWZpY2F0ZVBvbGljeUNhQWNjb3VudERldGFpbHMiKToKICAgICAgICBpZiBjZXJ0X3BvbGljeV9jYV9hY2NfZGV0YWlsLmdldCgiY2VydGlmaWNhdGVBdXRob3JpdHkiKSA9PSAiPCVjZXJ0X2F1dGhvcml0eSU+IjoKICAgICAgICAgICAgY3NyID0gY2VydF9wb2xpY3lfY2FfYWNjX2RldGFpbC5nZXQoImNlcnRQb2xpY3lDc3JQYXJhbWV0ZXIiKQogICAgICAgICAgICBkYXRhWydjZXJ0X2NuJ10gPSBjc3IuZ2V0KCJjb21tb25OYW1lIikKICAgICAgICAgICAgZGF0YVsiZG5zIl0gPSAnLCcuam9pbihjc3IuZ2V0KCJzdWJqZWN0QWx0ZXJuYXRpdmVOYW1lcyIpKQogICAgICAgICAgICBkYXRhWyJkbnNfbXVsdGlkb21haW5fc3NsX2NlcnQiXSA9ICcsJy5qb2luKGNzci5nZXQoInN1YmplY3RBbHRlcm5hdGl2ZU5hbWVzIikpCiAgICAgICAgICAgIGRhdGFbJ29yZyddID0gY3NyLmdldCgib3JnYW5pemF0aW9uIikKICAgICAgICAgICAgZGF0YVsnb3JnX211bHRpZG9tYWluX3NzbF9jZXJ0J10gPSBjc3IuZ2V0KCJvcmdhbml6YXRpb24iKQogICAgICAgICAgICBkYXRhWydvcmdfdW5pdCddID0gY3NyLmdldCgnb3JnYW5pemF0aW9uVW5pdCcpCiAgICAgICAgICAgIGRhdGFbJ29yZ191bml0X211bHRpZG9tYWluX3NzbF9jZXJ0J10gPSBjc3IuZ2V0KCdvcmdhbml6YXRpb25Vbml0JykKICAgICAgICAgICAgZGF0YVsnY2l0eSddID0gY3NyLmdldCgnbG9jYWxpdHknKQogICAgICAgICAgICBkYXRhWydjaXR5X211bHRpZG9tYWluX3NzbF9jZXJ0J10gPSBjc3IuZ2V0KCdsb2NhbGl0eScpCiAgICAgICAgICAgIGRhdGFbJ3N0YXRlJ10gPSBjc3IuZ2V0KCdzdGF0ZScpCiAgICAgICAgICAgIGRhdGFbJ3N0YXRlX211bHRpZG9tYWluX3NzbF9jZXJ0J10gPSBjc3IuZ2V0KCdzdGF0ZScpCiAgICAgICAgICAgIGRhdGFbJ2NvdW50cnknXSA9IGNzci5nZXQoJ2NvdW50cnknKQogICAgICAgICAgICBkYXRhWydjb3VudHJ5X211bHRpZG9tYWluX3NzbF9jZXJ0J10gPSBjc3IuZ2V0KCdjb3VudHJ5JykKICAgICAgICAgICAgZGF0YVsnZW1haWwnXSA9ICcsJy5qb2luKGNzci5nZXQoJ21haWxBZGRyZXNzJykpCiAgICByZXR1cm4gZGF0YQogICAgCiAgICAKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKICAgIHByb3BfZmlsZV9wYXRoID0gYWJzX3BhdGggKyAiLy4uL3Byb3BlcnRpZXMvYXBwdmlld3gucHJvcGVydGllcyIKICAgIGNvbmZpZyA9IENvbmZpZ09iaihwcm9wX2ZpbGVfcGF0aCkKICAgIHJldHVybiBjb25maWdbJ0dBVEVXQVlfQkFTRV9VUkwnXSwgY29uZmlnWydHQVRFV0FZX0tFWSddCgoKZGVmIGdldF9jYV9zZXR0aW5ncyhncm91cF9uYW1lLCBjYV9zZXR0aW5nX25hbWUpOgogICAgY2VydGlmaWNhdGVfdHlwZXMgPSBbXQogICAgZGl2aXNpb25faWQgPSAnJwogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtY2Etc2V0dGluZ3MtZ2V0YnljYW5hbWU/Y2VydGlmaWNhdGVBdXRob3JpdHk9Q29tb2RvIENlcnRpZmljYXRlIE1hbmFnZXImY2VydGlmaWNhdGVDYXRlZ29yeT1TZXJ2ZXImY2VydGlmaWNhdGVHcm91cD17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KAogICAgZ2F0ZXdheV91cmwsIGdyb3VwX25hbWUsIGdhdGV3YXlfa2V5KQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICI8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPiIgPT0gIkNsaWVudCI6CiAgICAgICAgY2F0ID0gImNsaWVudCIKICAgIGlmICI8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPiIgPT0gIkNvZGVTaWduaW5nIjoKICAgICAgICBjYXQgPSAiY29kZVNpZ25pbmciCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgZm9yIHNldHRpbmcgaW4gcmVzcG9uc2U6CiAgICAgICAgaWYgc2V0dGluZ1snbmFtZSddID09IGNhX3NldHRpbmdfbmFtZToKICAgICAgICAgICAgY2VydF90eXBlcyA9IHNldHRpbmdbJ2RlZmF1bHRDZXJ0VHlwZXNIaWVyYXJjaHknXVsiY2VydFR5cGVzIl0KICAgICAgICAgICAgZm9yIGNlcnRfdHlwZSBpbiBjZXJ0X3R5cGVzOgogICAgICAgICAgICAgICAgaWYgY2VydF90eXBlWyd0eXBlJ10gPT0gY2F0OgogICAgICAgICAgICAgICAgICAgIGNlcnRpZmljYXRlX3R5cGVzLmFwcGVuZChjZXJ0X3R5cGVbJ25hbWUnXSkKICAgIHJldHVybiBjZXJ0aWZpY2F0ZV90eXBlcwogICAgCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgZ3JvdXBfbmFtZSA9ICc8JWFzc2lnbl9ncm91cCU+JwogICAgY2Ffc2V0dGluZ19uYW1lID0gJzxjYV9hY2NvdW50PicKICAgIHN0cmljdF9wb2xpY3kgPSBnZXRfcG9saWN5X2J5X2dyb3VwX25hbWUoKQoKICAgICMgY2FfZGl2aXNpb24gPSAnPGNhX2RpdmlzaW9uPicKICAgIGNlcnRpZmljYXRlX3R5cGVzPSBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lKQogICAgZGF0YSA9IFt7ImNlcnRfdHlwZSI6dmFsfSBmb3IgdmFsIGluIGNlcnRpZmljYXRlX3R5cGVzXSAjKyBbeyJjZXJ0X3R5cGVfdXBsb2FkY3NyIjogdmFsfSBmb3IgdmFsIGluIGNlcnRpZmljYXRlX3R5cGVzXStbc3RyaWN0X3BvbGljeV0KICAgIHByaW50KGpzb24uZHVtcHMoZGF0YSkpCg==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "cert_type" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Fetch Certificate Types",
        "scriptData" : "aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGFzdAppbXBvcnQgb3MKZnJvbSBjb25maWdvYmogaW1wb3J0IENvbmZpZ09iagoKdHJ1ZSA9IFRydWUKZmFsc2UgPSBGYWxzZQpudWxsID0gTm9uZQoKZGVmIGdldF9wb2xpY3lfYnlfZ3JvdXBfbmFtZSgpOgogICAgIiIiCiAgICBGdW5jdGlvbiB0byBGZXRjaCB0aGUgY29uZmlndXJlZCBjZXJ0aWZpY2F0ZSBncm91cAogICAgCiAgICA6cmV0dXJuOiBDZXJ0aWZpY2F0ZSBwb2xpY3kKICAgICIiIgogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICc8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPicgPT0gJ1NlcnZlcic6CiAgICAgICAgY2F0ID0gJ3NlcnZlcicKICAgIGVsaWYgJzwlY2VydGlmaWNhdGVfcHJvZmlsZSU+JyA9PSAnQ2xpZW50JzoKICAgICAgICBjYXQgPSAnY2xpZW50JwogICAgZWxpZiAnPCVjZXJ0aWZpY2F0ZV9wcm9maWxlJT4nID09ICdDb2RlU2lnbmluZyc6CiAgICAgICAgY2F0ID0gJ2NvZGVTaWduaW5nJwogICAgICAgIAogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtZ2V0LXBvbGljeS1ieS1ncm91cG5hbWU/Y2VydGlmaWNhdGVHcm91cE5hbWU9e30mY2VydGlmaWNhdGVDYXRlZ29yeT17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KGdhdGV3YXlfdXJsLCc8JWFzc2lnbl9ncm91cCU+JywgY2F0LCBnYXRld2F5X2tleSkKCiAgICBoZWFkZXJzID0geyJzZXNzaW9uSWQiOiAiPCVzZXNzaW9uSWQlPiIsICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiJ9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpCgogICAgZGF0YSA9IHt9CiAgICBmb3IgY2VydF9wb2xpY3lfY2FfYWNjX2RldGFpbCBpbiByZXNwb25zZS5nZXQoInJlc3BvbnNlIikuZ2V0KCJjZXJ0aWZpY2F0ZVBvbGljeUNhQWNjb3VudERldGFpbHMiKToKICAgICAgICBpZiBjZXJ0X3BvbGljeV9jYV9hY2NfZGV0YWlsLmdldCgiY2VydGlmaWNhdGVBdXRob3JpdHkiKSA9PSAiPCVjZXJ0X2F1dGhvcml0eSU+IjoKICAgICAgICAgICAgY3NyID0gY2VydF9wb2xpY3lfY2FfYWNjX2RldGFpbC5nZXQoImNlcnRQb2xpY3lDc3JQYXJhbWV0ZXIiKQogICAgICAgICAgICBkYXRhWydjZXJ0X2NuJ10gPSBjc3IuZ2V0KCJjb21tb25OYW1lIikKICAgICAgICAgICAgZGF0YVsiZG5zIl0gPSAnLCcuam9pbihjc3IuZ2V0KCJzdWJqZWN0QWx0ZXJuYXRpdmVOYW1lcyIpKQogICAgICAgICAgICBkYXRhWyJkbnNfbXVsdGlkb21haW5fc3NsX2NlcnQiXSA9ICcsJy5qb2luKGNzci5nZXQoInN1YmplY3RBbHRlcm5hdGl2ZU5hbWVzIikpCiAgICAgICAgICAgIGRhdGFbJ29yZyddID0gY3NyLmdldCgib3JnYW5pemF0aW9uIikKICAgICAgICAgICAgZGF0YVsnb3JnX211bHRpZG9tYWluX3NzbF9jZXJ0J10gPSBjc3IuZ2V0KCJvcmdhbml6YXRpb24iKQogICAgICAgICAgICBkYXRhWydvcmdfdW5pdCddID0gY3NyLmdldCgnb3JnYW5pemF0aW9uVW5pdCcpCiAgICAgICAgICAgIGRhdGFbJ29yZ191bml0X211bHRpZG9tYWluX3NzbF9jZXJ0J10gPSBjc3IuZ2V0KCdvcmdhbml6YXRpb25Vbml0JykKICAgICAgICAgICAgZGF0YVsnY2l0eSddID0gY3NyLmdldCgnbG9jYWxpdHknKQogICAgICAgICAgICBkYXRhWydjaXR5X211bHRpZG9tYWluX3NzbF9jZXJ0J10gPSBjc3IuZ2V0KCdsb2NhbGl0eScpCiAgICAgICAgICAgIGRhdGFbJ3N0YXRlJ10gPSBjc3IuZ2V0KCdzdGF0ZScpCiAgICAgICAgICAgIGRhdGFbJ3N0YXRlX211bHRpZG9tYWluX3NzbF9jZXJ0J10gPSBjc3IuZ2V0KCdzdGF0ZScpCiAgICAgICAgICAgIGRhdGFbJ2NvdW50cnknXSA9IGNzci5nZXQoJ2NvdW50cnknKQogICAgICAgICAgICBkYXRhWydjb3VudHJ5X211bHRpZG9tYWluX3NzbF9jZXJ0J10gPSBjc3IuZ2V0KCdjb3VudHJ5JykKICAgICAgICAgICAgZGF0YVsnZW1haWwnXSA9ICcsJy5qb2luKGNzci5nZXQoJ21haWxBZGRyZXNzJykpCiAgICByZXR1cm4gZGF0YQogICAgCiAgICAKZGVmIGZldGNoX2dhdGV3YXlfa2V5KCk6CiAgICBjb25mX2NvbnRlbnQgPSB7fQogICAgYWJzX3BhdGggPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKICAgIHByb3BfZmlsZV9wYXRoID0gYWJzX3BhdGggKyAiLy4uL3Byb3BlcnRpZXMvYXBwdmlld3gucHJvcGVydGllcyIKICAgIGNvbmZpZyA9IENvbmZpZ09iaihwcm9wX2ZpbGVfcGF0aCkKICAgIHJldHVybiBjb25maWdbJ0dBVEVXQVlfQkFTRV9VUkwnXSwgY29uZmlnWydHQVRFV0FZX0tFWSddCgoKZGVmIGdldF9jYV9zZXR0aW5ncyhncm91cF9uYW1lLCBjYV9zZXR0aW5nX25hbWUpOgogICAgY2VydGlmaWNhdGVfdHlwZXMgPSBbXQogICAgZGl2aXNpb25faWQgPSAnJwogICAgZ2F0ZXdheV91cmwsIGdhdGV3YXlfa2V5ID0gZmV0Y2hfZ2F0ZXdheV9rZXkoKQogICAgdXJsID0gInt9YXZ4YXBpL2NlcnQtY2Etc2V0dGluZ3MtZ2V0YnljYW5hbWU/Y2VydGlmaWNhdGVBdXRob3JpdHk9Q29tb2RvIENlcnRpZmljYXRlIE1hbmFnZXImY2VydGlmaWNhdGVDYXRlZ29yeT1TZXJ2ZXImY2VydGlmaWNhdGVHcm91cD17fSZnd2tleT17fSZnd3NvdXJjZT1leHRlcm5hbCIuZm9ybWF0KAogICAgZ2F0ZXdheV91cmwsIGdyb3VwX25hbWUsIGdhdGV3YXlfa2V5KQogICAgY2F0ID0gJ3NlcnZlcicKICAgIGlmICI8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPiIgPT0gIkNsaWVudCI6CiAgICAgICAgY2F0ID0gImNsaWVudCIKICAgIGlmICI8JWNlcnRpZmljYXRlX3Byb2ZpbGUlPiIgPT0gIkNvZGVTaWduaW5nIjoKICAgICAgICBjYXQgPSAiY29kZVNpZ25pbmciCiAgICBoZWFkZXJzID0gewogICAgICAgICJzZXNzaW9uSWQiOiAnPCVzZXNzaW9uSWQlPicsCiAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAiQWNjZXB0IjogImFwcGxpY2F0aW9uL2pzb24iCiAgICB9CiAgICByZXNwb25zZSA9IHJlcXVlc3RzLmdldCh1cmw9dXJsLCBoZWFkZXJzPWhlYWRlcnMsIHZlcmlmeT1GYWxzZSkKICAgIHJlc3BvbnNlID0gcmVzcG9uc2UuanNvbigpLmdldCgicmVzcG9uc2UiKQogICAgZm9yIHNldHRpbmcgaW4gcmVzcG9uc2U6CiAgICAgICAgaWYgc2V0dGluZ1snbmFtZSddID09IGNhX3NldHRpbmdfbmFtZToKICAgICAgICAgICAgY2VydF90eXBlcyA9IHNldHRpbmdbJ2RlZmF1bHRDZXJ0VHlwZXNIaWVyYXJjaHknXVsiY2VydFR5cGVzIl0KICAgICAgICAgICAgZm9yIGNlcnRfdHlwZSBpbiBjZXJ0X3R5cGVzOgogICAgICAgICAgICAgICAgaWYgY2VydF90eXBlWyd0eXBlJ10gPT0gY2F0OgogICAgICAgICAgICAgICAgICAgIGNlcnRpZmljYXRlX3R5cGVzLmFwcGVuZChjZXJ0X3R5cGVbJ25hbWUnXSkKICAgIHJldHVybiBjZXJ0aWZpY2F0ZV90eXBlcwogICAgCgppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgZ3JvdXBfbmFtZSA9ICc8JWFzc2lnbl9ncm91cCU+JwogICAgY2Ffc2V0dGluZ19uYW1lID0gJzxjYV9hY2NvdW50PicKICAgIHN0cmljdF9wb2xpY3kgPSBnZXRfcG9saWN5X2J5X2dyb3VwX25hbWUoKQoKICAgICMgY2FfZGl2aXNpb24gPSAnPGNhX2RpdmlzaW9uPicKICAgIGNlcnRpZmljYXRlX3R5cGVzPSBnZXRfY2Ffc2V0dGluZ3MoZ3JvdXBfbmFtZSwgY2Ffc2V0dGluZ19uYW1lKQogICAgZGF0YSA9IFt7ImNlcnRfdHlwZV91cGxvYWRjc3IiOiB2YWx9IGZvciB2YWwgaW4gY2VydGlmaWNhdGVfdHlwZXNdK1tzdHJpY3RfcG9saWN5XQogICAgcHJpbnQoanNvbi5kdW1wcyhkYXRhKSkK",
        "_id" : null,
        "_keywords" : null
      } ],
      "accessType" : null,
      "parentTemplate" : null,
      "hiddenTemplate" : false,
      "groupData" : {
        "treeData" : [ ],
        "listData" : [ ]
      },
      "workflow_template_name" : null,
      "_keywords" : null
    },
    "configuration" : {
      "aclIdentifiers" : [ "super access" ],
      "permission" : [ "super access:submit" ],
      "skipFlow" : false,
      "emailConfiguration" : {
        "emailNotificationEnabled" : false,
        "createdNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "reviewedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "submittedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "rejectedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        }
      },
      "multipleScenarioEnabled" : false,
      "maxScenarioCount" : 1,
      "enableSaveDraft" : true,
      "enableCancel" : true,
      "enableClose" : false,
      "enableBreakDown" : false,
      "labels" : {
        "submit" : "Submit",
        "reject" : "Back"
      },
      "enableAutoApprove" : false,
      "failoverState" : 2,
      "successState" : 1,
      "dynamicAuth" : null,
      "regexList" : null,
      "regexOperation" : null,
      "regexPattern" : null,
      "accessMode" : null
    },
    "data" : null,
    "api_list" : null
  } ],
  "subFlowID" : "QaLFxO3O",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "decision_1" : [ ],
    "script_1" : [ ],
    "script_2" : [ {
      "name" : "uuid_list",
      "key" : "uuid_list",
      "value" : "uuid_list",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "uuid_list",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "join_1" : [ ],
    "createform_3" : [ {
      "name" : "CA certificate ID",
      "key" : "ca_certificate_id",
      "value" : "ca_certificate_id",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_certificate_id",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CA Account",
      "key" : "ca_account_uploadcsr",
      "value" : "ca_account_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_account_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Renew automatically",
      "key" : "renew_automatically",
      "value" : "renew_automatically",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "renew_automatically",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR Generation",
      "key" : "csr_gen",
      "value" : "csr_gen",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "AppViewX,Upload CSR",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_gen",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Regenerate automatically",
      "key" : "regen_automatically",
      "value" : "regen_automatically",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "No,Yes",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "regen_automatically",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR Parameters",
      "key" : "csr_uploadcsr",
      "value" : "csr_uploadcsr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_uploadcsr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Common Name",
      "key" : "cert_cn",
      "value" : "cert_cn",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "<%common_name%>",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_cn",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CA Account",
      "key" : "ca_account",
      "value" : "ca_account",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca_account",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Upload CSR",
      "key" : "upload_csr",
      "value" : "upload_csr",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upload_csr",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate Authority",
      "key" : "ca",
      "value" : "ca",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "<%cert_authority%>",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "ca",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Certificate Type",
      "key" : "cert_type",
      "value" : "cert_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "Multi-Domain SSL Certificate,UPS Private UCC UPS Issuing CA 2,Short Life Private UCC,Extended Validation SSL Certificate,Extended Validation Multi Domain SSL,Private Unified Communications Certificate,UPS Wildcard Certificate,UPS Unified Communications Certificate,UPS Elite SSL,Unified Communication Certificate,Instant SSL Certificate,PlatinumSSL Wildcard Certificate,Comodo Unified Communication Certificate,Comodo PlatinumSSL Wildcard Certificate,EliteSSL Certificate",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "cert_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "CSR Parameters",
      "key" : "csr_avx",
      "value" : "csr_avx",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "csr_avx",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ]
  },
  "type" : null,
  "level" : 2,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Renamed Push",
  "description" : "",
  "flowName" : "Sectigo create certificates",
  "workflowType" : "Default",
  "subFlowType" : "Flow",
  "parentSubFlowID" : "wkzaUXpL",
  "logs" : [ ],
  "workflowVersion" : "master"
} ]